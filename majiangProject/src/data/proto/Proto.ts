module proto{	export class s_SendMessbox extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_SendMessbox;		}		//optional>string		public errMsg:string;//undefined		//repeated>MyAction		public messList:MyAction[] ;//undefined		public init(_errMsg:string,_messList:MyAction[]):s_SendMessbox{			this.errMsg=_errMsg;			this.messList=_messList;			return this;		}public encode(by:egret.ByteArray):void{if (this.errMsg!= null){by.writeByte(1);by.writeUTF(this.errMsg);}else{	by.writeByte(0);}if (this.messList != null){by.writeShort(this.messList.length);for (var i:number = 0; i < this.messList.length; i++) {			this.messList[i].encode(by);}}else{by.writeShort(0);}	}public decode(by:egret.ByteArray ):void{if (by.readByte() > 0) {this.errMsg=by.readUTF();}var __count1:number = by.readShort();		this.messList = [];for (var i:number = 0; i < __count1; i++) {			this.messList[i] = new MyAction();			this.messList[i].decode(by);}	}	}	export class MyAction extends proto.Pro{		public constructor(){			super();			this.S=MessageType.MyAction;		}		//required>byte		public actionType:number=0;//动作类型		//required>int		public timeSpan:number=0;//时间戳		//optional>string		public InstanceId:string;//undefined		//optional>MoveAction		public S_Move:MoveAction;//undefined		//optional>AddUnit		public S_Create:AddUnit;//undefined		//optional>UseSkill		public S_Useskill:UseSkill;//undefined		//optional>BuffEffect		public S_BuffEffect:BuffEffect;//undefined		public init(_actionType:number,_timeSpan:number,_InstanceId:string,_S_Move:MoveAction,_S_Create:AddUnit,_S_Useskill:UseSkill,_S_BuffEffect:BuffEffect):MyAction{			this.actionType=_actionType;			this.timeSpan=_timeSpan;			this.InstanceId=_InstanceId;			this.S_Move=_S_Move;			this.S_Create=_S_Create;			this.S_Useskill=_S_Useskill;			this.S_BuffEffect=_S_BuffEffect;			return this;		}public encode(by:egret.ByteArray):void{by.writeByte(this.actionType);by.writeInt(this.timeSpan);if (this.InstanceId!= null){by.writeByte(1);by.writeUTF(this.InstanceId);}else{	by.writeByte(0);}if (this.S_Move!= null){by.writeByte(1);this.S_Move.encode(by);}else{	by.writeByte(0);}if (this.S_Create!= null){by.writeByte(1);this.S_Create.encode(by);}else{	by.writeByte(0);}if (this.S_Useskill!= null){by.writeByte(1);this.S_Useskill.encode(by);}else{	by.writeByte(0);}if (this.S_BuffEffect!= null){by.writeByte(1);this.S_BuffEffect.encode(by);}else{	by.writeByte(0);}	}public decode(by:egret.ByteArray ):void{this.actionType=by.readUnsignedByte();this.timeSpan=by.readInt();if (by.readByte() > 0) {this.InstanceId=by.readUTF();}if (by.readByte() > 0) {this.S_Move=new MoveAction();this.S_Move.decode(by);}if (by.readByte() > 0) {this.S_Create=new AddUnit();this.S_Create.decode(by);}if (by.readByte() > 0) {this.S_Useskill=new UseSkill();this.S_Useskill.decode(by);}if (by.readByte() > 0) {this.S_BuffEffect=new BuffEffect();this.S_BuffEffect.decode(by);}	}	}	export class AddUnit extends proto.Pro{		public constructor(){			super();			this.S=MessageType.AddUnit;		}		//required>int		public type:number=0;//创建的单位类型		//repeated>RoleEntityInfo		public entityInfoList:RoleEntityInfo[] ;//玩家角色和怪物列表		//repeated>Client_DropInfo		public drop:Client_DropInfo[] ;//掉落物品		public init(_type:number,_entityInfoList:RoleEntityInfo[],_drop:Client_DropInfo[]):AddUnit{			this.type=_type;			this.entityInfoList=_entityInfoList;			this.drop=_drop;			return this;		}public encode(by:egret.ByteArray):void{by.writeInt(this.type);if (this.entityInfoList != null){by.writeShort(this.entityInfoList.length);for (var i:number = 0; i < this.entityInfoList.length; i++) {			this.entityInfoList[i].encode(by);}}else{by.writeShort(0);}if (this.drop != null){by.writeShort(this.drop.length);for (var i:number = 0; i < this.drop.length; i++) {			this.drop[i].encode(by);}}else{by.writeShort(0);}	}public decode(by:egret.ByteArray ):void{this.type=by.readInt();var __count1:number = by.readShort();		this.entityInfoList = [];for (var i:number = 0; i < __count1; i++) {			this.entityInfoList[i] = new RoleEntityInfo();			this.entityInfoList[i].decode(by);}var __count2:number = by.readShort();		this.drop = [];for (var i:number = 0; i < __count2; i++) {			this.drop[i] = new Client_DropInfo();			this.drop[i].decode(by);}	}	}	export class MoveAction extends proto.Pro{		public constructor(){			super();			this.S=MessageType.MoveAction;		}		//required>byte		public state:number=0;//移动状态，1跑动，2平移		//required>byte		public alpha:number=0;//透明度		//required>byte		public sx:number=0;//起始坐标x		//required>byte		public sy:number=0;//起始坐标y		//required>byte		public ex:number=0;//终点坐标x		//required>byte		public ey:number=0;//终点坐标y		//required>byte		public look:number=0;//朝向		public init(_state:number,_alpha:number,_sx:number,_sy:number,_ex:number,_ey:number,_look:number):MoveAction{			this.state=_state;			this.alpha=_alpha;			this.sx=_sx;			this.sy=_sy;			this.ex=_ex;			this.ey=_ey;			this.look=_look;			return this;		}public encode(by:egret.ByteArray):void{by.writeByte(this.state);by.writeByte(this.alpha);by.writeByte(this.sx);by.writeByte(this.sy);by.writeByte(this.ex);by.writeByte(this.ey);by.writeByte(this.look);	}public decode(by:egret.ByteArray ):void{this.state=by.readUnsignedByte();this.alpha=by.readUnsignedByte();this.sx=by.readUnsignedByte();this.sy=by.readUnsignedByte();this.ex=by.readUnsignedByte();this.ey=by.readUnsignedByte();this.look=by.readUnsignedByte();	}	}	export class UseSkill extends proto.Pro{		public constructor(){			super();			this.S=MessageType.UseSkill;		}		//required>int		public skillID:number=0;//技能ID		//required>byte		public targetX:number=0;//目标位置		//required>byte		public targetY:number=0;//undefined		//required>byte		public look:number=0;//看向		//required>byte		public attacker:number=0;//攻击者是谁		//repeated>int		public bufferList:number[] ;//添加给自己的buffer列表		//repeated>int		public removeList:number[] ;//移除了自己的Buffer列表		//repeated>DamageInfo		public damageInfoList:DamageInfo[] ;//伤害信息列表		//optional>AddUnit		public summonUnit:AddUnit;//技能召唤单位		//optional>byte		public hitX:number=0;//冲撞到的位置		//optional>byte		public hitY:number=0;//undefined		//optional>int		public hitSkillTime:number=0;//野蛮冲撞技能冲撞时间		public init(_skillID:number,_targetX:number,_targetY:number,_look:number,_attacker:number,_bufferList:number[],_removeList:number[],_damageInfoList:DamageInfo[],_summonUnit:AddUnit,_hitX:number,_hitY:number,_hitSkillTime:number):UseSkill{			this.skillID=_skillID;			this.targetX=_targetX;			this.targetY=_targetY;			this.look=_look;			this.attacker=_attacker;			this.bufferList=_bufferList;			this.removeList=_removeList;			this.damageInfoList=_damageInfoList;			this.summonUnit=_summonUnit;			this.hitX=_hitX;			this.hitY=_hitY;			this.hitSkillTime=_hitSkillTime;			return this;		}public encode(by:egret.ByteArray):void{by.writeInt(this.skillID);by.writeByte(this.targetX);by.writeByte(this.targetY);by.writeByte(this.look);by.writeByte(this.attacker);if (this.bufferList != null){by.writeShort(this.bufferList.length);for (var i:number = 0; i < this.bufferList.length; i++) {by.writeInt(this.bufferList[i]);}}else{by.writeShort(0);}if (this.removeList != null){by.writeShort(this.removeList.length);for (var i:number = 0; i < this.removeList.length; i++) {by.writeInt(this.removeList[i]);}}else{by.writeShort(0);}if (this.damageInfoList != null){by.writeShort(this.damageInfoList.length);for (var i:number = 0; i < this.damageInfoList.length; i++) {			this.damageInfoList[i].encode(by);}}else{by.writeShort(0);}if (this.summonUnit!= null){by.writeByte(1);this.summonUnit.encode(by);}else{	by.writeByte(0);}//基础类型不建议用optionalby.writeByte(1);by.writeByte(this.hitX);//基础类型不建议用optionalby.writeByte(1);by.writeByte(this.hitY);//基础类型不建议用optionalby.writeByte(1);by.writeInt(this.hitSkillTime);	}public decode(by:egret.ByteArray ):void{this.skillID=by.readInt();this.targetX=by.readUnsignedByte();this.targetY=by.readUnsignedByte();this.look=by.readUnsignedByte();this.attacker=by.readUnsignedByte();var __count5:number = by.readShort();		this.bufferList = [];for (var i:number = 0; i < __count5; i++) {this.bufferList[i]=by.readInt();}var __count6:number = by.readShort();		this.removeList = [];for (var i:number = 0; i < __count6; i++) {this.removeList[i]=by.readInt();}var __count7:number = by.readShort();		this.damageInfoList = [];for (var i:number = 0; i < __count7; i++) {			this.damageInfoList[i] = new DamageInfo();			this.damageInfoList[i].decode(by);}if (by.readByte() > 0) {this.summonUnit=new AddUnit();this.summonUnit.decode(by);}if (by.readByte() > 0) {this.hitX=by.readUnsignedByte();}if (by.readByte() > 0) {this.hitY=by.readUnsignedByte();}if (by.readByte() > 0) {this.hitSkillTime=by.readInt();}	}	}	export class Client_MonsterInfo extends proto.Pro{		public constructor(){			super();			this.S=MessageType.Client_MonsterInfo;		}		//required>int		public templateId:number=0;//模版ID		//required>string		public InstanceId:string;//实例ID		//required>int		public HP:number=0;//血量		//required>byte		public sx:number=0;//出生坐标x		//required>byte		public sy:number=0;//出生坐标y		public init(_templateId:number,_InstanceId:string,_HP:number,_sx:number,_sy:number):Client_MonsterInfo{			this.templateId=_templateId;			this.InstanceId=_InstanceId;			this.HP=_HP;			this.sx=_sx;			this.sy=_sy;			return this;		}public encode(by:egret.ByteArray):void{by.writeInt(this.templateId);by.writeUTF(this.InstanceId);by.writeInt(this.HP);by.writeByte(this.sx);by.writeByte(this.sy);	}public decode(by:egret.ByteArray ):void{this.templateId=by.readInt();this.InstanceId=by.readUTF();this.HP=by.readInt();this.sx=by.readUnsignedByte();this.sy=by.readUnsignedByte();	}	}	export class Client_DropInfo extends proto.Pro{		public constructor(){			super();			this.S=MessageType.Client_DropInfo;		}		//required>int		public templeID:number=0;//表中ID		//required>string		public instanceId:string;//实例ID		//required>int		public num:number=0;//金币数量		//required>byte		public sx:number=0;//出生坐标x		//required>byte		public sy:number=0;//出生坐标y		public init(_templeID:number,_instanceId:string,_num:number,_sx:number,_sy:number):Client_DropInfo{			this.templeID=_templeID;			this.instanceId=_instanceId;			this.num=_num;			this.sx=_sx;			this.sy=_sy;			return this;		}public encode(by:egret.ByteArray):void{by.writeInt(this.templeID);by.writeUTF(this.instanceId);by.writeInt(this.num);by.writeByte(this.sx);by.writeByte(this.sy);	}public decode(by:egret.ByteArray ):void{this.templeID=by.readInt();this.instanceId=by.readUTF();this.num=by.readInt();this.sx=by.readUnsignedByte();this.sy=by.readUnsignedByte();	}	}	export class s_Map_Player extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_Map_Player;		}		//required>int		public timeSpan:number=0;//时间戳		//required>string		public playerName:string;//玩家名称		//required>string		public PlayerInstId:string;//玩家实例ID		//repeated>int		public playerAttr:number[] ;//玩家通用属性		//repeated>Client_RoleInfo		public client_roleinfo:Client_RoleInfo[] ;//undefined		public init(_timeSpan:number,_playerName:string,_PlayerInstId:string,_playerAttr:number[],_client_roleinfo:Client_RoleInfo[]):s_Map_Player{			this.timeSpan=_timeSpan;			this.playerName=_playerName;			this.PlayerInstId=_PlayerInstId;			this.playerAttr=_playerAttr;			this.client_roleinfo=_client_roleinfo;			return this;		}public encode(by:egret.ByteArray):void{by.writeInt(this.timeSpan);by.writeUTF(this.playerName);by.writeUTF(this.PlayerInstId);if (this.playerAttr != null){by.writeShort(this.playerAttr.length);for (var i:number = 0; i < this.playerAttr.length; i++) {by.writeInt(this.playerAttr[i]);}}else{by.writeShort(0);}if (this.client_roleinfo != null){by.writeShort(this.client_roleinfo.length);for (var i:number = 0; i < this.client_roleinfo.length; i++) {			this.client_roleinfo[i].encode(by);}}else{by.writeShort(0);}	}public decode(by:egret.ByteArray ):void{this.timeSpan=by.readInt();this.playerName=by.readUTF();this.PlayerInstId=by.readUTF();var __count3:number = by.readShort();		this.playerAttr = [];for (var i:number = 0; i < __count3; i++) {this.playerAttr[i]=by.readInt();}var __count4:number = by.readShort();		this.client_roleinfo = [];for (var i:number = 0; i < __count4; i++) {			this.client_roleinfo[i] = new Client_RoleInfo();			this.client_roleinfo[i].decode(by);}	}	}	export class PlayerAttrs extends proto.Pro{		public constructor(){			super();			this.S=MessageType.PlayerAttrs;		}		//required>string		public name:string;//名字		//required>byte		public firstJob:number=0;//主职业		//required>int		public lev:number=0;//等级		//required>byte		public reborn:number=0;//转生次数		//required>int		public exp:number=0;//经验		//required>int		public HPsum:number=0;//三角色的血量汇总		//required>int		public MPsum:number=0;//三角色的蓝量汇总		//required>int		public feather:number=0;//羽毛		//required>int		public maxskilllve:number=0;//技能大等级		//required>int		public CAMP:number=0;//阵营		//required>int		public mapid:number=0;//地图ID		//required>int		public head:number=0;//头像ID		//required>int		public Reputation:number=0;//声望		//required>int		public bagcount:number=0;//背包数量		//required>int		public money:number=0;//金钱		//required>int		public gold:number=0;//元宝		//required>int		public FightValue:number=0;//战斗力		//required>byte		public VIP:number=0;//VIP等级		//required>int		public Bossear:number=0;//boss积分		public init(_name:string,_firstJob:number,_lev:number,_reborn:number,_exp:number,_HPsum:number,_MPsum:number,_feather:number,_maxskilllve:number,_CAMP:number,_mapid:number,_head:number,_Reputation:number,_bagcount:number,_money:number,_gold:number,_FightValue:number,_VIP:number,_Bossear:number):PlayerAttrs{			this.name=_name;			this.firstJob=_firstJob;			this.lev=_lev;			this.reborn=_reborn;			this.exp=_exp;			this.HPsum=_HPsum;			this.MPsum=_MPsum;			this.feather=_feather;			this.maxskilllve=_maxskilllve;			this.CAMP=_CAMP;			this.mapid=_mapid;			this.head=_head;			this.Reputation=_Reputation;			this.bagcount=_bagcount;			this.money=_money;			this.gold=_gold;			this.FightValue=_FightValue;			this.VIP=_VIP;			this.Bossear=_Bossear;			return this;		}public encode(by:egret.ByteArray):void{by.writeUTF(this.name);by.writeByte(this.firstJob);by.writeInt(this.lev);by.writeByte(this.reborn);by.writeInt(this.exp);by.writeInt(this.HPsum);by.writeInt(this.MPsum);by.writeInt(this.feather);by.writeInt(this.maxskilllve);by.writeInt(this.CAMP);by.writeInt(this.mapid);by.writeInt(this.head);by.writeInt(this.Reputation);by.writeInt(this.bagcount);by.writeInt(this.money);by.writeInt(this.gold);by.writeInt(this.FightValue);by.writeByte(this.VIP);by.writeInt(this.Bossear);	}public decode(by:egret.ByteArray ):void{this.name=by.readUTF();this.firstJob=by.readUnsignedByte();this.lev=by.readInt();this.reborn=by.readUnsignedByte();this.exp=by.readInt();this.HPsum=by.readInt();this.MPsum=by.readInt();this.feather=by.readInt();this.maxskilllve=by.readInt();this.CAMP=by.readInt();this.mapid=by.readInt();this.head=by.readInt();this.Reputation=by.readInt();this.bagcount=by.readInt();this.money=by.readInt();this.gold=by.readInt();this.FightValue=by.readInt();this.VIP=by.readUnsignedByte();this.Bossear=by.readInt();	}	}	export class Client_RoleInfo extends proto.Pro{		public constructor(){			super();			this.S=MessageType.Client_RoleInfo;		}		//required>byte		public job:number=0;//职业		//required>int		public templateId:number=0;//模版ID		//required>string		public instanceId:string;//实例Id		//repeated>SkillInfo		public skills:SkillInfo[] ;//技能数组		//repeated>CheatsInfo		public cheatsList:CheatsInfo[] ;//秘籍列表		//repeated>ItemData		public equips:ItemData[] ;//角色装备		//repeated>int		public roleAttr:number[] ;//游戏角色属性		//repeated>StrengthenInfo		public strengthens:StrengthenInfo[] ;//游戏角色强化属性		public init(_job:number,_templateId:number,_instanceId:string,_skills:SkillInfo[],_cheatsList:CheatsInfo[],_equips:ItemData[],_roleAttr:number[],_strengthens:StrengthenInfo[]):Client_RoleInfo{			this.job=_job;			this.templateId=_templateId;			this.instanceId=_instanceId;			this.skills=_skills;			this.cheatsList=_cheatsList;			this.equips=_equips;			this.roleAttr=_roleAttr;			this.strengthens=_strengthens;			return this;		}public encode(by:egret.ByteArray):void{by.writeByte(this.job);by.writeInt(this.templateId);by.writeUTF(this.instanceId);if (this.skills != null){by.writeShort(this.skills.length);for (var i:number = 0; i < this.skills.length; i++) {			this.skills[i].encode(by);}}else{by.writeShort(0);}if (this.cheatsList != null){by.writeShort(this.cheatsList.length);for (var i:number = 0; i < this.cheatsList.length; i++) {			this.cheatsList[i].encode(by);}}else{by.writeShort(0);}if (this.equips != null){by.writeShort(this.equips.length);for (var i:number = 0; i < this.equips.length; i++) {			this.equips[i].encode(by);}}else{by.writeShort(0);}if (this.roleAttr != null){by.writeShort(this.roleAttr.length);for (var i:number = 0; i < this.roleAttr.length; i++) {by.writeInt(this.roleAttr[i]);}}else{by.writeShort(0);}if (this.strengthens != null){by.writeShort(this.strengthens.length);for (var i:number = 0; i < this.strengthens.length; i++) {			this.strengthens[i].encode(by);}}else{by.writeShort(0);}	}public decode(by:egret.ByteArray ):void{this.job=by.readUnsignedByte();this.templateId=by.readInt();this.instanceId=by.readUTF();var __count3:number = by.readShort();		this.skills = [];for (var i:number = 0; i < __count3; i++) {			this.skills[i] = new SkillInfo();			this.skills[i].decode(by);}var __count4:number = by.readShort();		this.cheatsList = [];for (var i:number = 0; i < __count4; i++) {			this.cheatsList[i] = new CheatsInfo();			this.cheatsList[i].decode(by);}var __count5:number = by.readShort();		this.equips = [];for (var i:number = 0; i < __count5; i++) {			this.equips[i] = new ItemData();			this.equips[i].decode(by);}var __count6:number = by.readShort();		this.roleAttr = [];for (var i:number = 0; i < __count6; i++) {this.roleAttr[i]=by.readInt();}var __count7:number = by.readShort();		this.strengthens = [];for (var i:number = 0; i < __count7; i++) {			this.strengthens[i] = new StrengthenInfo();			this.strengthens[i].decode(by);}	}	}	export class StrengthenInfo extends proto.Pro{		public constructor(){			super();			this.S=MessageType.StrengthenInfo;		}		//required>byte		public type:number=0;//强化信息类型		//required>int		public strengthId:number=0;//强化表ID		public init(_type:number,_strengthId:number):StrengthenInfo{			this.type=_type;			this.strengthId=_strengthId;			return this;		}public encode(by:egret.ByteArray):void{by.writeByte(this.type);by.writeInt(this.strengthId);	}public decode(by:egret.ByteArray ):void{this.type=by.readUnsignedByte();this.strengthId=by.readInt();	}	}	export class RoleAttrs extends proto.Pro{		public constructor(){			super();			this.S=MessageType.RoleAttrs;		}		//required>string		public mapID:string;//地图ID		//required>byte		public look:number=0;//朝向		//required>byte		public state:number=0;//状态		//required>string		public weaponID:string;//武器ID		//required>string		public clothes:string;//衣服ID		//required>int		public wingsID:number=0;//翅膀在表中ID		//required>int		public wingsexp:number=0;//翅膀经验		//required>int		public wingslve:number=0;//翅膀等级		//required>int		public wingsstar:number=0;//翅膀星数		//required>byte		public sex:number=0;//性别		//required>byte		public job:number=0;//职业		//required>int		public FightValue:number=0;//战斗力		//required>byte		public x:number=0;//x坐标		//required>byte		public y:number=0;//y坐标		//required>int		public MHP:number=0;//undefined		//required>int		public MMP:number=0;//最大HP，MP		//required>int		public HP:number=0;//undefined		//required>int		public MP:number=0;//当前HP，当前MP		//required>int		public critial:number=0;//暴击率		//required>int		public critcoe:number=0;//暴击伤害系数		//required>int		public resicritial:number=0;//抗暴系数		//required>int		public ATK:number=0;//物攻		//required>int		public DEF:number=0;//物防		//required>int		public MATK:number=0;//魔攻		//required>int		public MDEF:number=0;//魔防		//required>int		public DRD:number=0;//物理伤害减免		//required>int		public DRDrate:number=0;//物理傷害減免比率		//required>int		public MDRD:number=0;//魔法伤害减免		//required>int		public MDRDrate:number=0;//魔法傷害減免比率		//required>int		public DRF:number=0;//物理伤害反射		//required>int		public DRFrate:number=0;//物理伤害反射几率		public init(_mapID:string,_look:number,_state:number,_weaponID:string,_clothes:string,_wingsID:number,_wingsexp:number,_wingslve:number,_wingsstar:number,_sex:number,_job:number,_FightValue:number,_x:number,_y:number,_MHP:number,_MMP:number,_HP:number,_MP:number,_critial:number,_critcoe:number,_resicritial:number,_ATK:number,_DEF:number,_MATK:number,_MDEF:number,_DRD:number,_DRDrate:number,_MDRD:number,_MDRDrate:number,_DRF:number,_DRFrate:number):RoleAttrs{			this.mapID=_mapID;			this.look=_look;			this.state=_state;			this.weaponID=_weaponID;			this.clothes=_clothes;			this.wingsID=_wingsID;			this.wingsexp=_wingsexp;			this.wingslve=_wingslve;			this.wingsstar=_wingsstar;			this.sex=_sex;			this.job=_job;			this.FightValue=_FightValue;			this.x=_x;			this.y=_y;			this.MHP=_MHP;			this.MMP=_MMP;			this.HP=_HP;			this.MP=_MP;			this.critial=_critial;			this.critcoe=_critcoe;			this.resicritial=_resicritial;			this.ATK=_ATK;			this.DEF=_DEF;			this.MATK=_MATK;			this.MDEF=_MDEF;			this.DRD=_DRD;			this.DRDrate=_DRDrate;			this.MDRD=_MDRD;			this.MDRDrate=_MDRDrate;			this.DRF=_DRF;			this.DRFrate=_DRFrate;			return this;		}public encode(by:egret.ByteArray):void{by.writeUTF(this.mapID);by.writeByte(this.look);by.writeByte(this.state);by.writeUTF(this.weaponID);by.writeUTF(this.clothes);by.writeInt(this.wingsID);by.writeInt(this.wingsexp);by.writeInt(this.wingslve);by.writeInt(this.wingsstar);by.writeByte(this.sex);by.writeByte(this.job);by.writeInt(this.FightValue);by.writeByte(this.x);by.writeByte(this.y);by.writeInt(this.MHP);by.writeInt(this.MMP);by.writeInt(this.HP);by.writeInt(this.MP);by.writeInt(this.critial);by.writeInt(this.critcoe);by.writeInt(this.resicritial);by.writeInt(this.ATK);by.writeInt(this.DEF);by.writeInt(this.MATK);by.writeInt(this.MDEF);by.writeInt(this.DRD);by.writeInt(this.DRDrate);by.writeInt(this.MDRD);by.writeInt(this.MDRDrate);by.writeInt(this.DRF);by.writeInt(this.DRFrate);	}public decode(by:egret.ByteArray ):void{this.mapID=by.readUTF();this.look=by.readUnsignedByte();this.state=by.readUnsignedByte();this.weaponID=by.readUTF();this.clothes=by.readUTF();this.wingsID=by.readInt();this.wingsexp=by.readInt();this.wingslve=by.readInt();this.wingsstar=by.readInt();this.sex=by.readUnsignedByte();this.job=by.readUnsignedByte();this.FightValue=by.readInt();this.x=by.readUnsignedByte();this.y=by.readUnsignedByte();this.MHP=by.readInt();this.MMP=by.readInt();this.HP=by.readInt();this.MP=by.readInt();this.critial=by.readInt();this.critcoe=by.readInt();this.resicritial=by.readInt();this.ATK=by.readInt();this.DEF=by.readInt();this.MATK=by.readInt();this.MDEF=by.readInt();this.DRD=by.readInt();this.DRDrate=by.readInt();this.MDRD=by.readInt();this.MDRDrate=by.readInt();this.DRF=by.readInt();this.DRFrate=by.readInt();	}	}	export class ItemData extends proto.Pro{		public constructor(){			super();			this.S=MessageType.ItemData;		}		//required>string		public InstanceId:string;//实例ID		//required>int		public TempleID:number=0;//物品模板ID		//repeated>AttrValue		public attrList:AttrValue[] ;//所改变的属性列表		//optional>int		public expireTime:number=0;//过期时间		public init(_InstanceId:string,_TempleID:number,_attrList:AttrValue[],_expireTime:number):ItemData{			this.InstanceId=_InstanceId;			this.TempleID=_TempleID;			this.attrList=_attrList;			this.expireTime=_expireTime;			return this;		}public encode(by:egret.ByteArray):void{by.writeUTF(this.InstanceId);by.writeInt(this.TempleID);if (this.attrList != null){by.writeShort(this.attrList.length);for (var i:number = 0; i < this.attrList.length; i++) {			this.attrList[i].encode(by);}}else{by.writeShort(0);}//基础类型不建议用optionalby.writeByte(1);by.writeInt(this.expireTime);	}public decode(by:egret.ByteArray ):void{this.InstanceId=by.readUTF();this.TempleID=by.readInt();var __count2:number = by.readShort();		this.attrList = [];for (var i:number = 0; i < __count2; i++) {			this.attrList[i] = new AttrValue();			this.attrList[i].decode(by);}if (by.readByte() > 0) {this.expireTime=by.readInt();}	}	}	export class S_Skill extends proto.Pro{		public constructor(){			super();			this.S=MessageType.S_Skill;		}		//required>int		public SkillID:number=0;//技能ID		public init(_SkillID:number):S_Skill{			this.SkillID=_SkillID;			return this;		}public encode(by:egret.ByteArray):void{by.writeInt(this.SkillID);	}public decode(by:egret.ByteArray ):void{this.SkillID=by.readInt();	}	}	export class c_skill_up extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_skill_up;		}		//required>byte		public job:number=0;//当前职业		//required>int		public skillid:number=0;//技能ID		public init(_job:number,_skillid:number):c_skill_up{			this.job=_job;			this.skillid=_skillid;			return this;		}public encode(by:egret.ByteArray):void{by.writeByte(this.job);by.writeInt(this.skillid);	}public decode(by:egret.ByteArray ):void{this.job=by.readUnsignedByte();this.skillid=by.readInt();	}	}	export class s_skill_up extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_skill_up;		}		//required>bool		public isSuccessed:boolean;//是否升级成功		//required>int		public skillid:number=0;//技能ID		public init(_isSuccessed:boolean,_skillid:number):s_skill_up{			this.isSuccessed=_isSuccessed;			this.skillid=_skillid;			return this;		}public encode(by:egret.ByteArray):void{by.writeBoolean(this.isSuccessed);by.writeInt(this.skillid);	}public decode(by:egret.ByteArray ):void{this.isSuccessed=by.readBoolean();this.skillid=by.readInt();	}	}	export class c_skillAllUp extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_skillAllUp;		}		//required>byte		public job:number=0;//职业		public init(_job:number):c_skillAllUp{			this.job=_job;			return this;		}public encode(by:egret.ByteArray):void{by.writeByte(this.job);	}public decode(by:egret.ByteArray ):void{this.job=by.readUnsignedByte();	}	}	export class s_skillAllUp extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_skillAllUp;		}		//required>bool		public idSuccessed:boolean;//是否升级成功		//repeated>SkillInfo		public skillInfoList:SkillInfo[] ;//全部技能的数组		public init(_idSuccessed:boolean,_skillInfoList:SkillInfo[]):s_skillAllUp{			this.idSuccessed=_idSuccessed;			this.skillInfoList=_skillInfoList;			return this;		}public encode(by:egret.ByteArray):void{by.writeBoolean(this.idSuccessed);if (this.skillInfoList != null){by.writeShort(this.skillInfoList.length);for (var i:number = 0; i < this.skillInfoList.length; i++) {			this.skillInfoList[i].encode(by);}}else{by.writeShort(0);}	}public decode(by:egret.ByteArray ):void{this.idSuccessed=by.readBoolean();var __count1:number = by.readShort();		this.skillInfoList = [];for (var i:number = 0; i < __count1; i++) {			this.skillInfoList[i] = new SkillInfo();			this.skillInfoList[i].decode(by);}	}	}	export class c_Login extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_Login;		}		//required>string		public name:string;//用户名		//required>string		public pass:string;//密码		//required>bool		public isReLogin:boolean;//是否重新登录		public init(_name:string,_pass:string,_isReLogin:boolean):c_Login{			this.name=_name;			this.pass=_pass;			this.isReLogin=_isReLogin;			return this;		}public encode(by:egret.ByteArray):void{by.writeUTF(this.name);by.writeUTF(this.pass);by.writeBoolean(this.isReLogin);	}public decode(by:egret.ByteArray ):void{this.name=by.readUTF();this.pass=by.readUTF();this.isReLogin=by.readBoolean();	}	}	export class s_Login extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_Login;		}		//required>byte		public state:number=0;//错误号		//optional>string		public mess:string;//错误消息文字		public init(_state:number,_mess:string):s_Login{			this.state=_state;			this.mess=_mess;			return this;		}public encode(by:egret.ByteArray):void{by.writeByte(this.state);if (this.mess!= null){by.writeByte(1);by.writeUTF(this.mess);}else{	by.writeByte(0);}	}public decode(by:egret.ByteArray ):void{this.state=by.readUnsignedByte();if (by.readByte() > 0) {this.mess=by.readUTF();}	}	}	export class c_CreateChar extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_CreateChar;		}		//required>string		public name:string;//名字		//required>byte		public JOB:number=0;//职业		//required>byte		public Sex:number=0;//性别		public init(_name:string,_JOB:number,_Sex:number):c_CreateChar{			this.name=_name;			this.JOB=_JOB;			this.Sex=_Sex;			return this;		}public encode(by:egret.ByteArray):void{by.writeUTF(this.name);by.writeByte(this.JOB);by.writeByte(this.Sex);	}public decode(by:egret.ByteArray ):void{this.name=by.readUTF();this.JOB=by.readUnsignedByte();this.Sex=by.readUnsignedByte();	}	}	export class c_wings_up extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_wings_up;		}		//required>byte		public type:number=0;//升级类型，1金币		//required>byte		public job:number=0;//职业		public init(_type:number,_job:number):c_wings_up{			this.type=_type;			this.job=_job;			return this;		}public encode(by:egret.ByteArray):void{by.writeByte(this.type);by.writeByte(this.job);	}public decode(by:egret.ByteArray ):void{this.type=by.readUnsignedByte();this.job=by.readUnsignedByte();	}	}	export class s_wings_up extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_wings_up;		}		//required>bool		public isSuccess:boolean;//是否成功		//required>int		public exp:number=0;//+经验		public init(_isSuccess:boolean,_exp:number):s_wings_up{			this.isSuccess=_isSuccess;			this.exp=_exp;			return this;		}public encode(by:egret.ByteArray):void{by.writeBoolean(this.isSuccess);by.writeInt(this.exp);	}public decode(by:egret.ByteArray ):void{this.isSuccess=by.readBoolean();this.exp=by.readInt();	}	}	export class c_wings_levup extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_wings_levup;		}		//required>byte		public job:number=0;//职业		public init(_job:number):c_wings_levup{			this.job=_job;			return this;		}public encode(by:egret.ByteArray):void{by.writeByte(this.job);	}public decode(by:egret.ByteArray ):void{this.job=by.readUnsignedByte();	}	}	export class s_wings_levup extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_wings_levup;		}		//required>bool		public isSuccess:boolean;//是否可以升级		//required>int		public wingsID:number=0;//undefined		public init(_isSuccess:boolean,_wingsID:number):s_wings_levup{			this.isSuccess=_isSuccess;			this.wingsID=_wingsID;			return this;		}public encode(by:egret.ByteArray):void{by.writeBoolean(this.isSuccess);by.writeInt(this.wingsID);	}public decode(by:egret.ByteArray ):void{this.isSuccess=by.readBoolean();this.wingsID=by.readInt();	}	}	export class c_ChangeEquip extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_ChangeEquip;		}		//required>byte		public job:number=0;//要换装的职业		public init(_job:number):c_ChangeEquip{			this.job=_job;			return this;		}public encode(by:egret.ByteArray):void{by.writeByte(this.job);	}public decode(by:egret.ByteArray ):void{this.job=by.readUnsignedByte();	}	}	export class s_ChangeEquip extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_ChangeEquip;		}		//required>byte		public job:number=0;//职业		//repeated>ItemData		public equips:ItemData[] ;//装备数组		public init(_job:number,_equips:ItemData[]):s_ChangeEquip{			this.job=_job;			this.equips=_equips;			return this;		}public encode(by:egret.ByteArray):void{by.writeByte(this.job);if (this.equips != null){by.writeShort(this.equips.length);for (var i:number = 0; i < this.equips.length; i++) {			this.equips[i].encode(by);}}else{by.writeShort(0);}	}public decode(by:egret.ByteArray ):void{this.job=by.readUnsignedByte();var __count1:number = by.readShort();		this.equips = [];for (var i:number = 0; i < __count1; i++) {			this.equips[i] = new ItemData();			this.equips[i].decode(by);}	}	}	export class AttrValue extends proto.Pro{		public constructor(){			super();			this.S=MessageType.AttrValue;		}		//required>int		public attrID:number=0;//属性对应枚举ID		//required>int		public myvalue:number=0;//值		//required>int		public additional:number=0;//附加值		public init(_attrID:number,_myvalue:number,_additional:number):AttrValue{			this.attrID=_attrID;			this.myvalue=_myvalue;			this.additional=_additional;			return this;		}public encode(by:egret.ByteArray):void{by.writeInt(this.attrID);by.writeInt(this.myvalue);by.writeInt(this.additional);	}public decode(by:egret.ByteArray ):void{this.attrID=by.readInt();this.myvalue=by.readInt();this.additional=by.readInt();	}	}	export class c_Reborn extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_Reborn;		}		public init():c_Reborn{			return this;		}public encode(by:egret.ByteArray):void{	}public decode(by:egret.ByteArray ):void{	}	}	export class s_Reborn extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_Reborn;		}		//required>bool		public isSuccess:boolean;//是否成功		//required>int		public newRebornID:number=0;//转生后ID		public init(_isSuccess:boolean,_newRebornID:number):s_Reborn{			this.isSuccess=_isSuccess;			this.newRebornID=_newRebornID;			return this;		}public encode(by:egret.ByteArray):void{by.writeBoolean(this.isSuccess);by.writeInt(this.newRebornID);	}public decode(by:egret.ByteArray ):void{this.isSuccess=by.readBoolean();this.newRebornID=by.readInt();	}	}	export class c_GetXiuWei extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_GetXiuWei;		}		//required>byte		public type:number=0;//获取修为方式		public init(_type:number):c_GetXiuWei{			this.type=_type;			return this;		}public encode(by:egret.ByteArray):void{by.writeByte(this.type);	}public decode(by:egret.ByteArray ):void{this.type=by.readUnsignedByte();	}	}	export class s_GetXiuWei extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_GetXiuWei;		}		//required>bool		public isSuccess:boolean;//是否成功		public init(_isSuccess:boolean):s_GetXiuWei{			this.isSuccess=_isSuccess;			return this;		}public encode(by:egret.ByteArray):void{by.writeBoolean(this.isSuccess);	}public decode(by:egret.ByteArray ):void{this.isSuccess=by.readBoolean();	}	}	export class c_AddBag extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_AddBag;		}		//required>int		public num:number=0;//要开启的背包数量		public init(_num:number):c_AddBag{			this.num=_num;			return this;		}public encode(by:egret.ByteArray):void{by.writeInt(this.num);	}public decode(by:egret.ByteArray ):void{this.num=by.readInt();	}	}	export class s_AddBag extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_AddBag;		}		//required>bool		public isSuccess:boolean;//是否成功		public init(_isSuccess:boolean):s_AddBag{			this.isSuccess=_isSuccess;			return this;		}public encode(by:egret.ByteArray):void{by.writeBoolean(this.isSuccess);	}public decode(by:egret.ByteArray ):void{this.isSuccess=by.readBoolean();	}	}	export class c_SmeltEquips extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_SmeltEquips;		}		//repeated>string		public InstIdList:string[] ;//装备的唯一ID的数组		public init(_InstIdList:string[]):c_SmeltEquips{			this.InstIdList=_InstIdList;			return this;		}public encode(by:egret.ByteArray):void{if (this.InstIdList != null){by.writeShort(this.InstIdList.length);for (var i:number = 0; i < this.InstIdList.length; i++) {by.writeUTF(this.InstIdList[i]);}}else{by.writeShort(0);}	}public decode(by:egret.ByteArray ):void{var __count0:number = by.readShort();		this.InstIdList = [];for (var i:number = 0; i < __count0; i++) {this.InstIdList[i]=by.readUTF();}	}	}	export class s_SmeltEquips extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_SmeltEquips;		}		//required>int		public money:number=0;//熔炼获得金钱		//required>int		public qianghuashi:number=0;//熔炼获得强化石		//repeated>string		public InstIdList:string[] ;//以熔炼装备的唯一ID数组		public init(_money:number,_qianghuashi:number,_InstIdList:string[]):s_SmeltEquips{			this.money=_money;			this.qianghuashi=_qianghuashi;			this.InstIdList=_InstIdList;			return this;		}public encode(by:egret.ByteArray):void{by.writeInt(this.money);by.writeInt(this.qianghuashi);if (this.InstIdList != null){by.writeShort(this.InstIdList.length);for (var i:number = 0; i < this.InstIdList.length; i++) {by.writeUTF(this.InstIdList[i]);}}else{by.writeShort(0);}	}public decode(by:egret.ByteArray ):void{this.money=by.readInt();this.qianghuashi=by.readInt();var __count2:number = by.readShort();		this.InstIdList = [];for (var i:number = 0; i < __count2; i++) {this.InstIdList[i]=by.readUTF();}	}	}	export class c_Strengthen extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_Strengthen;		}		//required>byte		public job:number=0;//职业		//required>byte		public type:number=0;//强化类型		//required>byte		public pos:number=0;//当前要强化的部位		public init(_job:number,_type:number,_pos:number):c_Strengthen{			this.job=_job;			this.type=_type;			this.pos=_pos;			return this;		}public encode(by:egret.ByteArray):void{by.writeByte(this.job);by.writeByte(this.type);by.writeByte(this.pos);	}public decode(by:egret.ByteArray ):void{this.job=by.readUnsignedByte();this.type=by.readUnsignedByte();this.pos=by.readUnsignedByte();	}	}	export class s_Strengthen extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_Strengthen;		}		//required>bool		public isSuccess:boolean;//是否成功		//optional>int		public newID:number=0;//新的ID		//required>int		public nextStrengthId:number=0;//下一个要强化的ID		public init(_isSuccess:boolean,_newID:number,_nextStrengthId:number):s_Strengthen{			this.isSuccess=_isSuccess;			this.newID=_newID;			this.nextStrengthId=_nextStrengthId;			return this;		}public encode(by:egret.ByteArray):void{by.writeBoolean(this.isSuccess);//基础类型不建议用optionalby.writeByte(1);by.writeInt(this.newID);by.writeInt(this.nextStrengthId);	}public decode(by:egret.ByteArray ):void{this.isSuccess=by.readBoolean();if (by.readByte() > 0) {this.newID=by.readInt();}this.nextStrengthId=by.readInt();	}	}	export class s_AddItems extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_AddItems;		}		//repeated>ItemData		public items:ItemData[] ;//发送前端物品数组		public init(_items:ItemData[]):s_AddItems{			this.items=_items;			return this;		}public encode(by:egret.ByteArray):void{if (this.items != null){by.writeShort(this.items.length);for (var i:number = 0; i < this.items.length; i++) {			this.items[i].encode(by);}}else{by.writeShort(0);}	}public decode(by:egret.ByteArray ):void{var __count0:number = by.readShort();		this.items = [];for (var i:number = 0; i < __count0; i++) {			this.items[i] = new ItemData();			this.items[i].decode(by);}	}	}	export class s_ChangeItemNum extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_ChangeItemNum;		}		//required>int		public uid:number=0;//品对应唯一ID		//required>int		public num:number=0;//当前数量		public init(_uid:number,_num:number):s_ChangeItemNum{			this.uid=_uid;			this.num=_num;			return this;		}public encode(by:egret.ByteArray):void{by.writeInt(this.uid);by.writeInt(this.num);	}public decode(by:egret.ByteArray ):void{this.uid=by.readInt();this.num=by.readInt();	}	}	export class c_JingMai_Up extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_JingMai_Up;		}		//required>byte		public type:number=0;//提升经脉的类型		//required>byte		public job:number=0;//职业		public init(_type:number,_job:number):c_JingMai_Up{			this.type=_type;			this.job=_job;			return this;		}public encode(by:egret.ByteArray):void{by.writeByte(this.type);by.writeByte(this.job);	}public decode(by:egret.ByteArray ):void{this.type=by.readUnsignedByte();this.job=by.readUnsignedByte();	}	}	export class s_JingMai_Up extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_JingMai_Up;		}		//required>bool		public isSuccess:boolean;//是否成功		//required>int		public jingMaiID:number=0;//经脉在表中的ID		public init(_isSuccess:boolean,_jingMaiID:number):s_JingMai_Up{			this.isSuccess=_isSuccess;			this.jingMaiID=_jingMaiID;			return this;		}public encode(by:egret.ByteArray):void{by.writeBoolean(this.isSuccess);by.writeInt(this.jingMaiID);	}public decode(by:egret.ByteArray ):void{this.isSuccess=by.readBoolean();this.jingMaiID=by.readInt();	}	}	export class c_say extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_say;		}		//required>int		public channel:number=0;//频道		//required>string		public content:string;//内容		//optional>string		public sendTo:string;//仅私聊时使用，用于发送给谁		public init(_channel:number,_content:string,_sendTo:string):c_say{			this.channel=_channel;			this.content=_content;			this.sendTo=_sendTo;			return this;		}public encode(by:egret.ByteArray):void{by.writeInt(this.channel);by.writeUTF(this.content);if (this.sendTo!= null){by.writeByte(1);by.writeUTF(this.sendTo);}else{	by.writeByte(0);}	}public decode(by:egret.ByteArray ):void{this.channel=by.readInt();this.content=by.readUTF();if (by.readByte() > 0) {this.sendTo=by.readUTF();}	}	}	export class s_say extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_say;		}		//required>bool		public isSuccess:boolean;//是否发送成功		//optional>string		public errMsg:string;//错误提示		public init(_isSuccess:boolean,_errMsg:string):s_say{			this.isSuccess=_isSuccess;			this.errMsg=_errMsg;			return this;		}public encode(by:egret.ByteArray):void{by.writeBoolean(this.isSuccess);if (this.errMsg!= null){by.writeByte(1);by.writeUTF(this.errMsg);}else{	by.writeByte(0);}	}public decode(by:egret.ByteArray ):void{this.isSuccess=by.readBoolean();if (by.readByte() > 0) {this.errMsg=by.readUTF();}	}	}	export class RoleBasicInfo extends proto.Pro{		public constructor(){			super();			this.S=MessageType.RoleBasicInfo;		}		//required>string		public instanceId:string;//玩家实例ID		//required>string		public name:string;//玩家名称		//required>int		public headID:number=0;//头像		//required>byte		public rank:number=0;//段位		//required>bool		public yueka:boolean;//月卡		//required>byte		public vip:number=0;//vip等级		//required>byte		public guildJob:number=0;//公会职位		public init(_instanceId:string,_name:string,_headID:number,_rank:number,_yueka:boolean,_vip:number,_guildJob:number):RoleBasicInfo{			this.instanceId=_instanceId;			this.name=_name;			this.headID=_headID;			this.rank=_rank;			this.yueka=_yueka;			this.vip=_vip;			this.guildJob=_guildJob;			return this;		}public encode(by:egret.ByteArray):void{by.writeUTF(this.instanceId);by.writeUTF(this.name);by.writeInt(this.headID);by.writeByte(this.rank);by.writeBoolean(this.yueka);by.writeByte(this.vip);by.writeByte(this.guildJob);	}public decode(by:egret.ByteArray ):void{this.instanceId=by.readUTF();this.name=by.readUTF();this.headID=by.readInt();this.rank=by.readUnsignedByte();this.yueka=by.readBoolean();this.vip=by.readUnsignedByte();this.guildJob=by.readUnsignedByte();	}	}	export class c_SpecialEquip_Up extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_SpecialEquip_Up;		}		//required>byte		public type:number=0;//类型		//required>byte		public job:number=0;//职业		public init(_type:number,_job:number):c_SpecialEquip_Up{			this.type=_type;			this.job=_job;			return this;		}public encode(by:egret.ByteArray):void{by.writeByte(this.type);by.writeByte(this.job);	}public decode(by:egret.ByteArray ):void{this.type=by.readUnsignedByte();this.job=by.readUnsignedByte();	}	}	export class s_SpecialEquip_Up extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_SpecialEquip_Up;		}		//required>bool		public isSuccess:boolean;//是否成功		//required>int		public equipLevID:number=0;//返回新的ID		public init(_isSuccess:boolean,_equipLevID:number):s_SpecialEquip_Up{			this.isSuccess=_isSuccess;			this.equipLevID=_equipLevID;			return this;		}public encode(by:egret.ByteArray):void{by.writeBoolean(this.isSuccess);by.writeInt(this.equipLevID);	}public decode(by:egret.ByteArray ):void{this.isSuccess=by.readBoolean();this.equipLevID=by.readInt();	}	}	export class c_createRole extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_createRole;		}		//required>byte		public job:number=0;//职业		//required>byte		public sex:number=0;//性别		public init(_job:number,_sex:number):c_createRole{			this.job=_job;			this.sex=_sex;			return this;		}public encode(by:egret.ByteArray):void{by.writeByte(this.job);by.writeByte(this.sex);	}public decode(by:egret.ByteArray ):void{this.job=by.readUnsignedByte();this.sex=by.readUnsignedByte();	}	}	export class c_RequestShop extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_RequestShop;		}		public init():c_RequestShop{			return this;		}public encode(by:egret.ByteArray):void{	}public decode(by:egret.ByteArray ):void{	}	}	export class s_RequestShop extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_RequestShop;		}		//required>bool		public isRefresh:boolean;//是否刷新物品列表		//repeated>int		public templateIdList:number[] ;//返回神秘商店模版Id列表		//required>int		public remainRefreshSeconds:number=0;//下次刷新所剩秒数		public init(_isRefresh:boolean,_templateIdList:number[],_remainRefreshSeconds:number):s_RequestShop{			this.isRefresh=_isRefresh;			this.templateIdList=_templateIdList;			this.remainRefreshSeconds=_remainRefreshSeconds;			return this;		}public encode(by:egret.ByteArray):void{by.writeBoolean(this.isRefresh);if (this.templateIdList != null){by.writeShort(this.templateIdList.length);for (var i:number = 0; i < this.templateIdList.length; i++) {by.writeInt(this.templateIdList[i]);}}else{by.writeShort(0);}by.writeInt(this.remainRefreshSeconds);	}public decode(by:egret.ByteArray ):void{this.isRefresh=by.readBoolean();var __count1:number = by.readShort();		this.templateIdList = [];for (var i:number = 0; i < __count1; i++) {this.templateIdList[i]=by.readInt();}this.remainRefreshSeconds=by.readInt();	}	}	export class c_BuyItem extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_BuyItem;		}		//required>int		public ID:number=0;//物品对应商店表ID		//required>int		public num:number=0;//数量		public init(_ID:number,_num:number):c_BuyItem{			this.ID=_ID;			this.num=_num;			return this;		}public encode(by:egret.ByteArray):void{by.writeInt(this.ID);by.writeInt(this.num);	}public decode(by:egret.ByteArray ):void{this.ID=by.readInt();this.num=by.readInt();	}	}	export class s_BuyItem extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_BuyItem;		}		//required>bool		public isSuccess:boolean;//返回成功失败		public init(_isSuccess:boolean):s_BuyItem{			this.isSuccess=_isSuccess;			return this;		}public encode(by:egret.ByteArray):void{by.writeBoolean(this.isSuccess);	}public decode(by:egret.ByteArray ):void{this.isSuccess=by.readBoolean();	}	}	export class c_AddFriendByName extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_AddFriendByName;		}		//required>string		public friendName:string;//好友名称		public init(_friendName:string):c_AddFriendByName{			this.friendName=_friendName;			return this;		}public encode(by:egret.ByteArray):void{by.writeUTF(this.friendName);	}public decode(by:egret.ByteArray ):void{this.friendName=by.readUTF();	}	}	export class s_FriendAck extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_FriendAck;		}		//required>bool		public isSuccess:boolean;//是否添加好友成功		//optional>string		public errMsg:string;//错误信息		//optional>FriendInfo		public friendInfo:FriendInfo;//好友信息		public init(_isSuccess:boolean,_errMsg:string,_friendInfo:FriendInfo):s_FriendAck{			this.isSuccess=_isSuccess;			this.errMsg=_errMsg;			this.friendInfo=_friendInfo;			return this;		}public encode(by:egret.ByteArray):void{by.writeBoolean(this.isSuccess);if (this.errMsg!= null){by.writeByte(1);by.writeUTF(this.errMsg);}else{	by.writeByte(0);}if (this.friendInfo!= null){by.writeByte(1);this.friendInfo.encode(by);}else{	by.writeByte(0);}	}public decode(by:egret.ByteArray ):void{this.isSuccess=by.readBoolean();if (by.readByte() > 0) {this.errMsg=by.readUTF();}if (by.readByte() > 0) {this.friendInfo=new FriendInfo();this.friendInfo.decode(by);}	}	}	export class s_SendFriendList extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_SendFriendList;		}		//repeated>FriendInfo		public friendList:FriendInfo[] ;//好友信息		public init(_friendList:FriendInfo[]):s_SendFriendList{			this.friendList=_friendList;			return this;		}public encode(by:egret.ByteArray):void{if (this.friendList != null){by.writeShort(this.friendList.length);for (var i:number = 0; i < this.friendList.length; i++) {			this.friendList[i].encode(by);}}else{by.writeShort(0);}	}public decode(by:egret.ByteArray ):void{var __count0:number = by.readShort();		this.friendList = [];for (var i:number = 0; i < __count0; i++) {			this.friendList[i] = new FriendInfo();			this.friendList[i].decode(by);}	}	}	export class c_ReplyAdd extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_ReplyAdd;		}		//required>bool		public isOK:boolean;//是否同意		//repeated>string		public name:string[] ;//对方的姓名		public init(_isOK:boolean,_name:string[]):c_ReplyAdd{			this.isOK=_isOK;			this.name=_name;			return this;		}public encode(by:egret.ByteArray):void{by.writeBoolean(this.isOK);if (this.name != null){by.writeShort(this.name.length);for (var i:number = 0; i < this.name.length; i++) {by.writeUTF(this.name[i]);}}else{by.writeShort(0);}	}public decode(by:egret.ByteArray ):void{this.isOK=by.readBoolean();var __count1:number = by.readShort();		this.name = [];for (var i:number = 0; i < __count1; i++) {this.name[i]=by.readUTF();}	}	}	export class s_ReplyAdd extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_ReplyAdd;		}		//required>bool		public isSuccess:boolean;//是否申请成功		//required>string		public targetName:string;//对方姓名		public init(_isSuccess:boolean,_targetName:string):s_ReplyAdd{			this.isSuccess=_isSuccess;			this.targetName=_targetName;			return this;		}public encode(by:egret.ByteArray):void{by.writeBoolean(this.isSuccess);by.writeUTF(this.targetName);	}public decode(by:egret.ByteArray ):void{this.isSuccess=by.readBoolean();this.targetName=by.readUTF();	}	}	export class FriendInfo extends proto.Pro{		public constructor(){			super();			this.S=MessageType.FriendInfo;		}		//required>string		public playerId:string;//玩家ID		//required>int		public state:number=0;//好友状态:0被人邀请		//required>string		public name:string;//好友姓名		//repeated>AttrValue		public playerAttrList:AttrValue[] ;//玩家属性列表		public init(_playerId:string,_state:number,_name:string,_playerAttrList:AttrValue[]):FriendInfo{			this.playerId=_playerId;			this.state=_state;			this.name=_name;			this.playerAttrList=_playerAttrList;			return this;		}public encode(by:egret.ByteArray):void{by.writeUTF(this.playerId);by.writeInt(this.state);by.writeUTF(this.name);if (this.playerAttrList != null){by.writeShort(this.playerAttrList.length);for (var i:number = 0; i < this.playerAttrList.length; i++) {			this.playerAttrList[i].encode(by);}}else{by.writeShort(0);}	}public decode(by:egret.ByteArray ):void{this.playerId=by.readUTF();this.state=by.readInt();this.name=by.readUTF();var __count3:number = by.readShort();		this.playerAttrList = [];for (var i:number = 0; i < __count3; i++) {			this.playerAttrList[i] = new AttrValue();			this.playerAttrList[i].decode(by);}	}	}	export class c_CreateNewSence extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_CreateNewSence;		}		//required>int		public levelStageID:number=0;//当前关卡ID		public init(_levelStageID:number):c_CreateNewSence{			this.levelStageID=_levelStageID;			return this;		}public encode(by:egret.ByteArray):void{by.writeInt(this.levelStageID);	}public decode(by:egret.ByteArray ):void{this.levelStageID=by.readInt();	}	}	export class s_CreateNewSence extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_CreateNewSence;		}		//required>int		public levelStageID:number=0;//当前关卡ID		//repeated>Pos		public pos:Pos[] ;//位置数组		public init(_levelStageID:number,_pos:Pos[]):s_CreateNewSence{			this.levelStageID=_levelStageID;			this.pos=_pos;			return this;		}public encode(by:egret.ByteArray):void{by.writeInt(this.levelStageID);if (this.pos != null){by.writeShort(this.pos.length);for (var i:number = 0; i < this.pos.length; i++) {			this.pos[i].encode(by);}}else{by.writeShort(0);}	}public decode(by:egret.ByteArray ):void{this.levelStageID=by.readInt();var __count1:number = by.readShort();		this.pos = [];for (var i:number = 0; i < __count1; i++) {			this.pos[i] = new Pos();			this.pos[i].decode(by);}	}	}	export class s_ChangeMainRole extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_ChangeMainRole;		}		//required>int		public mapid:number=0;//角色在地图的唯一ID		public init(_mapid:number):s_ChangeMainRole{			this.mapid=_mapid;			return this;		}public encode(by:egret.ByteArray):void{by.writeInt(this.mapid);	}public decode(by:egret.ByteArray ):void{this.mapid=by.readInt();	}	}	export class s_Kickout extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_Kickout;		}		//required>string		public MsgReason:string;//踢除玩家原因		public init(_MsgReason:string):s_Kickout{			this.MsgReason=_MsgReason;			return this;		}public encode(by:egret.ByteArray):void{by.writeUTF(this.MsgReason);	}public decode(by:egret.ByteArray ):void{this.MsgReason=by.readUTF();	}	}	export class s_CreateRole extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_CreateRole;		}		//required>byte		public result:number=0;//错误号		//optional>string		public msg:string;//错误消息文字		//optional>Client_RoleInfo		public roleInfo:Client_RoleInfo;//创建角色信息		public init(_result:number,_msg:string,_roleInfo:Client_RoleInfo):s_CreateRole{			this.result=_result;			this.msg=_msg;			this.roleInfo=_roleInfo;			return this;		}public encode(by:egret.ByteArray):void{by.writeByte(this.result);if (this.msg!= null){by.writeByte(1);by.writeUTF(this.msg);}else{	by.writeByte(0);}if (this.roleInfo!= null){by.writeByte(1);this.roleInfo.encode(by);}else{	by.writeByte(0);}	}public decode(by:egret.ByteArray ):void{this.result=by.readUnsignedByte();if (by.readByte() > 0) {this.msg=by.readUTF();}if (by.readByte() > 0) {this.roleInfo=new Client_RoleInfo();this.roleInfo.decode(by);}	}	}	export class DamageInfo extends proto.Pro{		public constructor(){			super();			this.S=MessageType.DamageInfo;		}		//required>string		public instId:string;//实例Id		//required>int		public showInfo:number=0;//造成伤害		//repeated>int		public addbuffList:number[] ;//附加buff效果		//repeated>int		public removeBufferList:number[] ;//移除buff效果		//required>bool		public isDead:boolean;//是否死亡		//optional>MyAction		public dropActionList:MyAction;//掉落的动作列表		//optional>byte		public hitX:number=0;//undefined		//optional>byte		public hitY:number=0;//undefined		public init(_instId:string,_showInfo:number,_addbuffList:number[],_removeBufferList:number[],_isDead:boolean,_dropActionList:MyAction,_hitX:number,_hitY:number):DamageInfo{			this.instId=_instId;			this.showInfo=_showInfo;			this.addbuffList=_addbuffList;			this.removeBufferList=_removeBufferList;			this.isDead=_isDead;			this.dropActionList=_dropActionList;			this.hitX=_hitX;			this.hitY=_hitY;			return this;		}public encode(by:egret.ByteArray):void{by.writeUTF(this.instId);by.writeInt(this.showInfo);if (this.addbuffList != null){by.writeShort(this.addbuffList.length);for (var i:number = 0; i < this.addbuffList.length; i++) {by.writeInt(this.addbuffList[i]);}}else{by.writeShort(0);}if (this.removeBufferList != null){by.writeShort(this.removeBufferList.length);for (var i:number = 0; i < this.removeBufferList.length; i++) {by.writeInt(this.removeBufferList[i]);}}else{by.writeShort(0);}by.writeBoolean(this.isDead);if (this.dropActionList!= null){by.writeByte(1);this.dropActionList.encode(by);}else{	by.writeByte(0);}//基础类型不建议用optionalby.writeByte(1);by.writeByte(this.hitX);//基础类型不建议用optionalby.writeByte(1);by.writeByte(this.hitY);	}public decode(by:egret.ByteArray ):void{this.instId=by.readUTF();this.showInfo=by.readInt();var __count2:number = by.readShort();		this.addbuffList = [];for (var i:number = 0; i < __count2; i++) {this.addbuffList[i]=by.readInt();}var __count3:number = by.readShort();		this.removeBufferList = [];for (var i:number = 0; i < __count3; i++) {this.removeBufferList[i]=by.readInt();}this.isDead=by.readBoolean();if (by.readByte() > 0) {this.dropActionList=new MyAction();this.dropActionList.decode(by);}if (by.readByte() > 0) {this.hitX=by.readUnsignedByte();}if (by.readByte() > 0) {this.hitY=by.readUnsignedByte();}	}	}	export class BuffEffect extends proto.Pro{		public constructor(){			super();			this.S=MessageType.BuffEffect;		}		//required>byte		public type:number=0;//0.移除		//repeated>int		public buffIdList:number[] ;//模版Id		//optional>int		public showInfo:number=0;//正数是增益效果，负数是减益效果		//optional>bool		public isDead:boolean;//是否死亡		//optional>AddUnit		public ResurrectionUnit:AddUnit;//复活单位		public init(_type:number,_buffIdList:number[],_showInfo:number,_isDead:boolean,_ResurrectionUnit:AddUnit):BuffEffect{			this.type=_type;			this.buffIdList=_buffIdList;			this.showInfo=_showInfo;			this.isDead=_isDead;			this.ResurrectionUnit=_ResurrectionUnit;			return this;		}public encode(by:egret.ByteArray):void{by.writeByte(this.type);if (this.buffIdList != null){by.writeShort(this.buffIdList.length);for (var i:number = 0; i < this.buffIdList.length; i++) {by.writeInt(this.buffIdList[i]);}}else{by.writeShort(0);}//基础类型不建议用optionalby.writeByte(1);by.writeInt(this.showInfo);//基础类型不建议用optionalby.writeByte(1);by.writeBoolean(this.isDead);if (this.ResurrectionUnit!= null){by.writeByte(1);this.ResurrectionUnit.encode(by);}else{	by.writeByte(0);}	}public decode(by:egret.ByteArray ):void{this.type=by.readUnsignedByte();var __count1:number = by.readShort();		this.buffIdList = [];for (var i:number = 0; i < __count1; i++) {this.buffIdList[i]=by.readInt();}if (by.readByte() > 0) {this.showInfo=by.readInt();}if (by.readByte() > 0) {this.isDead=by.readBoolean();}if (by.readByte() > 0) {this.ResurrectionUnit=new AddUnit();this.ResurrectionUnit.decode(by);}	}	}	export class s_RoleAttrChange extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_RoleAttrChange;		}		//required>byte		public Job:number=0;//职业		//repeated>AttrValue		public AttrChangeList:AttrValue[] ;//属性改变列表		public init(_Job:number,_AttrChangeList:AttrValue[]):s_RoleAttrChange{			this.Job=_Job;			this.AttrChangeList=_AttrChangeList;			return this;		}public encode(by:egret.ByteArray):void{by.writeByte(this.Job);if (this.AttrChangeList != null){by.writeShort(this.AttrChangeList.length);for (var i:number = 0; i < this.AttrChangeList.length; i++) {			this.AttrChangeList[i].encode(by);}}else{by.writeShort(0);}	}public decode(by:egret.ByteArray ):void{this.Job=by.readUnsignedByte();var __count1:number = by.readShort();		this.AttrChangeList = [];for (var i:number = 0; i < __count1; i++) {			this.AttrChangeList[i] = new AttrValue();			this.AttrChangeList[i].decode(by);}	}	}	export class s_ItemAttrChange extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_ItemAttrChange;		}		//required>string		public InstanceId:string;//实例ID		//repeated>AttrValue		public AttrChangeList:AttrValue[] ;//物口属性改变列表		public init(_InstanceId:string,_AttrChangeList:AttrValue[]):s_ItemAttrChange{			this.InstanceId=_InstanceId;			this.AttrChangeList=_AttrChangeList;			return this;		}public encode(by:egret.ByteArray):void{by.writeUTF(this.InstanceId);if (this.AttrChangeList != null){by.writeShort(this.AttrChangeList.length);for (var i:number = 0; i < this.AttrChangeList.length; i++) {			this.AttrChangeList[i].encode(by);}}else{by.writeShort(0);}	}public decode(by:egret.ByteArray ):void{this.InstanceId=by.readUTF();var __count1:number = by.readShort();		this.AttrChangeList = [];for (var i:number = 0; i < __count1; i++) {			this.AttrChangeList[i] = new AttrValue();			this.AttrChangeList[i].decode(by);}	}	}	export class s_BagItem extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_BagItem;		}		//repeated>ItemData		public ItemList:ItemData[] ;//背包物品		public init(_ItemList:ItemData[]):s_BagItem{			this.ItemList=_ItemList;			return this;		}public encode(by:egret.ByteArray):void{if (this.ItemList != null){by.writeShort(this.ItemList.length);for (var i:number = 0; i < this.ItemList.length; i++) {			this.ItemList[i].encode(by);}}else{by.writeShort(0);}	}public decode(by:egret.ByteArray ):void{var __count0:number = by.readShort();		this.ItemList = [];for (var i:number = 0; i < __count0; i++) {			this.ItemList[i] = new ItemData();			this.ItemList[i].decode(by);}	}	}	export class c_ItemUse extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_ItemUse;		}		//required>int		public templateId:number=0;//道具模版Id		//required>int		public useCount:number=0;//使用数量		public init(_templateId:number,_useCount:number):c_ItemUse{			this.templateId=_templateId;			this.useCount=_useCount;			return this;		}public encode(by:egret.ByteArray):void{by.writeInt(this.templateId);by.writeInt(this.useCount);	}public decode(by:egret.ByteArray ):void{this.templateId=by.readInt();this.useCount=by.readInt();	}	}	export class s_ItemUse extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_ItemUse;		}		//required>byte		public type:number=0;//0.错误		//optional>string		public errMsg:string;//错误信息		//repeated>ItemData		public itemList:ItemData[] ;//获得物品		//repeated>AttrValue		public attrList:AttrValue[] ;//增加属性		public init(_type:number,_errMsg:string,_itemList:ItemData[],_attrList:AttrValue[]):s_ItemUse{			this.type=_type;			this.errMsg=_errMsg;			this.itemList=_itemList;			this.attrList=_attrList;			return this;		}public encode(by:egret.ByteArray):void{by.writeByte(this.type);if (this.errMsg!= null){by.writeByte(1);by.writeUTF(this.errMsg);}else{	by.writeByte(0);}if (this.itemList != null){by.writeShort(this.itemList.length);for (var i:number = 0; i < this.itemList.length; i++) {			this.itemList[i].encode(by);}}else{by.writeShort(0);}if (this.attrList != null){by.writeShort(this.attrList.length);for (var i:number = 0; i < this.attrList.length; i++) {			this.attrList[i].encode(by);}}else{by.writeShort(0);}	}public decode(by:egret.ByteArray ):void{this.type=by.readUnsignedByte();if (by.readByte() > 0) {this.errMsg=by.readUTF();}var __count2:number = by.readShort();		this.itemList = [];for (var i:number = 0; i < __count2; i++) {			this.itemList[i] = new ItemData();			this.itemList[i].decode(by);}var __count3:number = by.readShort();		this.attrList = [];for (var i:number = 0; i < __count3; i++) {			this.attrList[i] = new AttrValue();			this.attrList[i].decode(by);}	}	}	export class s_ChatCacheInfo extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_ChatCacheInfo;		}		//repeated>s_ChatInfo		public chatCacheList:s_ChatInfo[] ;//聊天缓存列表		public init(_chatCacheList:s_ChatInfo[]):s_ChatCacheInfo{			this.chatCacheList=_chatCacheList;			return this;		}public encode(by:egret.ByteArray):void{if (this.chatCacheList != null){by.writeShort(this.chatCacheList.length);for (var i:number = 0; i < this.chatCacheList.length; i++) {			this.chatCacheList[i].encode(by);}}else{by.writeShort(0);}	}public decode(by:egret.ByteArray ):void{var __count0:number = by.readShort();		this.chatCacheList = [];for (var i:number = 0; i < __count0; i++) {			this.chatCacheList[i] = new s_ChatInfo();			this.chatCacheList[i].decode(by);}	}	}	export class s_ChatInfo extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_ChatInfo;		}		//required>int		public timeSpan:number=0;//时间戳		//required>byte		public channel:number=0;//发言频道		//required>byte		public type:number=0;//0普通		//optional>RoleBasicInfo		public senderBasicInfo:RoleBasicInfo;//发送者的基础信息		//optional>RoleBasicInfo		public privateBasicInfo:RoleBasicInfo;//私聊对象的基础信息		//required>string		public content:string;//内容		public init(_timeSpan:number,_channel:number,_type:number,_senderBasicInfo:RoleBasicInfo,_privateBasicInfo:RoleBasicInfo,_content:string):s_ChatInfo{			this.timeSpan=_timeSpan;			this.channel=_channel;			this.type=_type;			this.senderBasicInfo=_senderBasicInfo;			this.privateBasicInfo=_privateBasicInfo;			this.content=_content;			return this;		}public encode(by:egret.ByteArray):void{by.writeInt(this.timeSpan);by.writeByte(this.channel);by.writeByte(this.type);if (this.senderBasicInfo!= null){by.writeByte(1);this.senderBasicInfo.encode(by);}else{	by.writeByte(0);}if (this.privateBasicInfo!= null){by.writeByte(1);this.privateBasicInfo.encode(by);}else{	by.writeByte(0);}by.writeUTF(this.content);	}public decode(by:egret.ByteArray ):void{this.timeSpan=by.readInt();this.channel=by.readUnsignedByte();this.type=by.readUnsignedByte();if (by.readByte() > 0) {this.senderBasicInfo=new RoleBasicInfo();this.senderBasicInfo.decode(by);}if (by.readByte() > 0) {this.privateBasicInfo=new RoleBasicInfo();this.privateBasicInfo.decode(by);}this.content=by.readUTF();	}	}	export class c_JingMai_LvUp extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_JingMai_LvUp;		}		//required>byte		public job:number=0;//职业		public init(_job:number):c_JingMai_LvUp{			this.job=_job;			return this;		}public encode(by:egret.ByteArray):void{by.writeByte(this.job);	}public decode(by:egret.ByteArray ):void{this.job=by.readUnsignedByte();	}	}	export class s_JingMai_LvUp extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_JingMai_LvUp;		}		//required>bool		public isSuccess:boolean;//是否成功		//required>int		public jingMaiID:number=0;//经脉在表中的ID		public init(_isSuccess:boolean,_jingMaiID:number):s_JingMai_LvUp{			this.isSuccess=_isSuccess;			this.jingMaiID=_jingMaiID;			return this;		}public encode(by:egret.ByteArray):void{by.writeBoolean(this.isSuccess);by.writeInt(this.jingMaiID);	}public decode(by:egret.ByteArray ):void{this.isSuccess=by.readBoolean();this.jingMaiID=by.readInt();	}	}	export class c_ManualRefresh extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_ManualRefresh;		}		public init():c_ManualRefresh{			return this;		}public encode(by:egret.ByteArray):void{	}public decode(by:egret.ByteArray ):void{	}	}	export class s_UpdateFriendState extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_UpdateFriendState;		}		//required>string		public friendId:string;//好友玩家ID		//required>int		public state:number=0;//好友状态:0被人邀请		public init(_friendId:string,_state:number):s_UpdateFriendState{			this.friendId=_friendId;			this.state=_state;			return this;		}public encode(by:egret.ByteArray):void{by.writeUTF(this.friendId);by.writeInt(this.state);	}public decode(by:egret.ByteArray ):void{this.friendId=by.readUTF();this.state=by.readInt();	}	}	export class c_AddFriendById extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_AddFriendById;		}		//required>string		public friendInstId:string;//好友玩家ID		public init(_friendInstId:string):c_AddFriendById{			this.friendInstId=_friendInstId;			return this;		}public encode(by:egret.ByteArray):void{by.writeUTF(this.friendInstId);	}public decode(by:egret.ByteArray ):void{this.friendInstId=by.readUTF();	}	}	export class c_DelFriend extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_DelFriend;		}		//required>string		public friendId:string;//好友的玩家ID		public init(_friendId:string):c_DelFriend{			this.friendId=_friendId;			return this;		}public encode(by:egret.ByteArray):void{by.writeUTF(this.friendId);	}public decode(by:egret.ByteArray ):void{this.friendId=by.readUTF();	}	}	export class c_AddBlacklist extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_AddBlacklist;		}		//required>string		public playerId:string;//玩家ID		public init(_playerId:string):c_AddBlacklist{			this.playerId=_playerId;			return this;		}public encode(by:egret.ByteArray):void{by.writeUTF(this.playerId);	}public decode(by:egret.ByteArray ):void{this.playerId=by.readUTF();	}	}	export class RankInfo extends proto.Pro{		public constructor(){			super();			this.S=MessageType.RankInfo;		}		//required>string		public playerName:string;//玩家名称		//required>string		public playerId:string;//玩家ID		//repeated>AttrValue		public playerAttrList:AttrValue[] ;//玩家属性		//repeated>Client_RoleInfo		public roleInfoList:Client_RoleInfo[] ;//角色信息列表		public init(_playerName:string,_playerId:string,_playerAttrList:AttrValue[],_roleInfoList:Client_RoleInfo[]):RankInfo{			this.playerName=_playerName;			this.playerId=_playerId;			this.playerAttrList=_playerAttrList;			this.roleInfoList=_roleInfoList;			return this;		}public encode(by:egret.ByteArray):void{by.writeUTF(this.playerName);by.writeUTF(this.playerId);if (this.playerAttrList != null){by.writeShort(this.playerAttrList.length);for (var i:number = 0; i < this.playerAttrList.length; i++) {			this.playerAttrList[i].encode(by);}}else{by.writeShort(0);}if (this.roleInfoList != null){by.writeShort(this.roleInfoList.length);for (var i:number = 0; i < this.roleInfoList.length; i++) {			this.roleInfoList[i].encode(by);}}else{by.writeShort(0);}	}public decode(by:egret.ByteArray ):void{this.playerName=by.readUTF();this.playerId=by.readUTF();var __count2:number = by.readShort();		this.playerAttrList = [];for (var i:number = 0; i < __count2; i++) {			this.playerAttrList[i] = new AttrValue();			this.playerAttrList[i].decode(by);}var __count3:number = by.readShort();		this.roleInfoList = [];for (var i:number = 0; i < __count3; i++) {			this.roleInfoList[i] = new Client_RoleInfo();			this.roleInfoList[i].decode(by);}	}	}	export class s_GetRankInfo extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_GetRankInfo;		}		//required>bool		public isSuccess:boolean;//是否成功		//optional>string		public errMsg:string;//错误信息		//optional>RankInfo		public rankInfo:RankInfo;//排行详情		public init(_isSuccess:boolean,_errMsg:string,_rankInfo:RankInfo):s_GetRankInfo{			this.isSuccess=_isSuccess;			this.errMsg=_errMsg;			this.rankInfo=_rankInfo;			return this;		}public encode(by:egret.ByteArray):void{by.writeBoolean(this.isSuccess);if (this.errMsg!= null){by.writeByte(1);by.writeUTF(this.errMsg);}else{	by.writeByte(0);}if (this.rankInfo!= null){by.writeByte(1);this.rankInfo.encode(by);}else{	by.writeByte(0);}	}public decode(by:egret.ByteArray ):void{this.isSuccess=by.readBoolean();if (by.readByte() > 0) {this.errMsg=by.readUTF();}if (by.readByte() > 0) {this.rankInfo=new RankInfo();this.rankInfo.decode(by);}	}	}	export class s_RankChange extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_RankChange;		}		//required>int		public order:number=0;//排名序列		//required>int		public index:number=0;//排名的下标		//required>string		public playerName:string;//玩家名称		//required>string		public playerId:string;//玩家ID		//repeated>AttrValue		public playerAttrList:AttrValue[] ;//玩家属性		//repeated>s_RoleAttrChange		public RoleChangeList:s_RoleAttrChange[] ;//角色战力值列表		public init(_order:number,_index:number,_playerName:string,_playerId:string,_playerAttrList:AttrValue[],_RoleChangeList:s_RoleAttrChange[]):s_RankChange{			this.order=_order;			this.index=_index;			this.playerName=_playerName;			this.playerId=_playerId;			this.playerAttrList=_playerAttrList;			this.RoleChangeList=_RoleChangeList;			return this;		}public encode(by:egret.ByteArray):void{by.writeInt(this.order);by.writeInt(this.index);by.writeUTF(this.playerName);by.writeUTF(this.playerId);if (this.playerAttrList != null){by.writeShort(this.playerAttrList.length);for (var i:number = 0; i < this.playerAttrList.length; i++) {			this.playerAttrList[i].encode(by);}}else{by.writeShort(0);}if (this.RoleChangeList != null){by.writeShort(this.RoleChangeList.length);for (var i:number = 0; i < this.RoleChangeList.length; i++) {			this.RoleChangeList[i].encode(by);}}else{by.writeShort(0);}	}public decode(by:egret.ByteArray ):void{this.order=by.readInt();this.index=by.readInt();this.playerName=by.readUTF();this.playerId=by.readUTF();var __count4:number = by.readShort();		this.playerAttrList = [];for (var i:number = 0; i < __count4; i++) {			this.playerAttrList[i] = new AttrValue();			this.playerAttrList[i].decode(by);}var __count5:number = by.readShort();		this.RoleChangeList = [];for (var i:number = 0; i < __count5; i++) {			this.RoleChangeList[i] = new s_RoleAttrChange();			this.RoleChangeList[i].decode(by);}	}	}	export class c_GetRankInfo extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_GetRankInfo;		}		//required>string		public playerId:string;//玩家ID		public init(_playerId:string):c_GetRankInfo{			this.playerId=_playerId;			return this;		}public encode(by:egret.ByteArray):void{by.writeUTF(this.playerId);	}public decode(by:egret.ByteArray ):void{this.playerId=by.readUTF();	}	}	export class s_GetRankList extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_GetRankList;		}		//required>int		public order:number=0;//排行序列		//repeated>RankInfo		public RankInfoList:RankInfo[] ;//序列对应的排行信息		public init(_order:number,_RankInfoList:RankInfo[]):s_GetRankList{			this.order=_order;			this.RankInfoList=_RankInfoList;			return this;		}public encode(by:egret.ByteArray):void{by.writeInt(this.order);if (this.RankInfoList != null){by.writeShort(this.RankInfoList.length);for (var i:number = 0; i < this.RankInfoList.length; i++) {			this.RankInfoList[i].encode(by);}}else{by.writeShort(0);}	}public decode(by:egret.ByteArray ):void{this.order=by.readInt();var __count1:number = by.readShort();		this.RankInfoList = [];for (var i:number = 0; i < __count1; i++) {			this.RankInfoList[i] = new RankInfo();			this.RankInfoList[i].decode(by);}	}	}	export class s_MailList extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_MailList;		}		//repeated>MailData		public mailList:MailData[] ;//邮件列表		public init(_mailList:MailData[]):s_MailList{			this.mailList=_mailList;			return this;		}public encode(by:egret.ByteArray):void{if (this.mailList != null){by.writeShort(this.mailList.length);for (var i:number = 0; i < this.mailList.length; i++) {			this.mailList[i].encode(by);}}else{by.writeShort(0);}	}public decode(by:egret.ByteArray ):void{var __count0:number = by.readShort();		this.mailList = [];for (var i:number = 0; i < __count0; i++) {			this.mailList[i] = new MailData();			this.mailList[i].decode(by);}	}	}	export class MailData extends proto.Pro{		public constructor(){			super();			this.S=MessageType.MailData;		}		//required>string		public mailId:string;//邮件ID		//required>int		public mailState:number=0;//0:未读		//required>int		public mailTemplateId:number=0;//邮件模版ID		//repeated>int		public argumentList:number[] ;//参数列表		//repeated>ItemData		public itemList:ItemData[] ;//物品列表		//required>int		public sendTime:number=0;//发送时间		public init(_mailId:string,_mailState:number,_mailTemplateId:number,_argumentList:number[],_itemList:ItemData[],_sendTime:number):MailData{			this.mailId=_mailId;			this.mailState=_mailState;			this.mailTemplateId=_mailTemplateId;			this.argumentList=_argumentList;			this.itemList=_itemList;			this.sendTime=_sendTime;			return this;		}public encode(by:egret.ByteArray):void{by.writeUTF(this.mailId);by.writeInt(this.mailState);by.writeInt(this.mailTemplateId);if (this.argumentList != null){by.writeShort(this.argumentList.length);for (var i:number = 0; i < this.argumentList.length; i++) {by.writeInt(this.argumentList[i]);}}else{by.writeShort(0);}if (this.itemList != null){by.writeShort(this.itemList.length);for (var i:number = 0; i < this.itemList.length; i++) {			this.itemList[i].encode(by);}}else{by.writeShort(0);}by.writeInt(this.sendTime);	}public decode(by:egret.ByteArray ):void{this.mailId=by.readUTF();this.mailState=by.readInt();this.mailTemplateId=by.readInt();var __count3:number = by.readShort();		this.argumentList = [];for (var i:number = 0; i < __count3; i++) {this.argumentList[i]=by.readInt();}var __count4:number = by.readShort();		this.itemList = [];for (var i:number = 0; i < __count4; i++) {			this.itemList[i] = new ItemData();			this.itemList[i].decode(by);}this.sendTime=by.readInt();	}	}	export class c_TakeAward extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_TakeAward;		}		//required>string		public mailId:string;//邮件ID		public init(_mailId:string):c_TakeAward{			this.mailId=_mailId;			return this;		}public encode(by:egret.ByteArray):void{by.writeUTF(this.mailId);	}public decode(by:egret.ByteArray ):void{this.mailId=by.readUTF();	}	}	export class s_TakeAward extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_TakeAward;		}		//required>bool		public isSuccess:boolean;//是否领取成功		//optional>string		public errMsg:string;//错误提示		//optional>string		public mailId:string;//邮件ID		public init(_isSuccess:boolean,_errMsg:string,_mailId:string):s_TakeAward{			this.isSuccess=_isSuccess;			this.errMsg=_errMsg;			this.mailId=_mailId;			return this;		}public encode(by:egret.ByteArray):void{by.writeBoolean(this.isSuccess);if (this.errMsg!= null){by.writeByte(1);by.writeUTF(this.errMsg);}else{	by.writeByte(0);}if (this.mailId!= null){by.writeByte(1);by.writeUTF(this.mailId);}else{	by.writeByte(0);}	}public decode(by:egret.ByteArray ):void{this.isSuccess=by.readBoolean();if (by.readByte() > 0) {this.errMsg=by.readUTF();}if (by.readByte() > 0) {this.mailId=by.readUTF();}	}	}	export class c_ReduceLevel extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_ReduceLevel;		}		public init():c_ReduceLevel{			return this;		}public encode(by:egret.ByteArray):void{	}public decode(by:egret.ByteArray ):void{	}	}	export class s_ReduceLevel extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_ReduceLevel;		}		//required>bool		public isSuccess:boolean;//是否成功		//optional>string		public errMsg:string;//错误提示		public init(_isSuccess:boolean,_errMsg:string):s_ReduceLevel{			this.isSuccess=_isSuccess;			this.errMsg=_errMsg;			return this;		}public encode(by:egret.ByteArray):void{by.writeBoolean(this.isSuccess);if (this.errMsg!= null){by.writeByte(1);by.writeUTF(this.errMsg);}else{	by.writeByte(0);}	}public decode(by:egret.ByteArray ):void{this.isSuccess=by.readBoolean();if (by.readByte() > 0) {this.errMsg=by.readUTF();}	}	}	export class c_AssemblyEquip extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_AssemblyEquip;		}		//required>int		public itemId:number=0;//物品Id		//required>int		public job:number=0;//职业		//required>int		public equipPos:number=0;//穿戴位置		public init(_itemId:number,_job:number,_equipPos:number):c_AssemblyEquip{			this.itemId=_itemId;			this.job=_job;			this.equipPos=_equipPos;			return this;		}public encode(by:egret.ByteArray):void{by.writeInt(this.itemId);by.writeInt(this.job);by.writeInt(this.equipPos);	}public decode(by:egret.ByteArray ):void{this.itemId=by.readInt();this.job=by.readInt();this.equipPos=by.readInt();	}	}	export class s_AssemblyEquip extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_AssemblyEquip;		}		//required>bool		public isSuccess:boolean;//是否成功		//optional>string		public errMsg:string;//错误提示		//optional>ItemData		public equipItem:ItemData;//装备		public init(_isSuccess:boolean,_errMsg:string,_equipItem:ItemData):s_AssemblyEquip{			this.isSuccess=_isSuccess;			this.errMsg=_errMsg;			this.equipItem=_equipItem;			return this;		}public encode(by:egret.ByteArray):void{by.writeBoolean(this.isSuccess);if (this.errMsg!= null){by.writeByte(1);by.writeUTF(this.errMsg);}else{	by.writeByte(0);}if (this.equipItem!= null){by.writeByte(1);this.equipItem.encode(by);}else{	by.writeByte(0);}	}public decode(by:egret.ByteArray ):void{this.isSuccess=by.readBoolean();if (by.readByte() > 0) {this.errMsg=by.readUTF();}if (by.readByte() > 0) {this.equipItem=new ItemData();this.equipItem.decode(by);}	}	}	export class c_DisassembleEquip extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_DisassembleEquip;		}		//required>string		public equipInstId:string;//装备实例ID		//required>int		public job:number=0;//职业		public init(_equipInstId:string,_job:number):c_DisassembleEquip{			this.equipInstId=_equipInstId;			this.job=_job;			return this;		}public encode(by:egret.ByteArray):void{by.writeUTF(this.equipInstId);by.writeInt(this.job);	}public decode(by:egret.ByteArray ):void{this.equipInstId=by.readUTF();this.job=by.readInt();	}	}	export class s_DisassembleEquip extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_DisassembleEquip;		}		//required>bool		public isSuccess:boolean;//是否成功		//optional>string		public errMsg:string;//错误提示		public init(_isSuccess:boolean,_errMsg:string):s_DisassembleEquip{			this.isSuccess=_isSuccess;			this.errMsg=_errMsg;			return this;		}public encode(by:egret.ByteArray):void{by.writeBoolean(this.isSuccess);if (this.errMsg!= null){by.writeByte(1);by.writeUTF(this.errMsg);}else{	by.writeByte(0);}	}public decode(by:egret.ByteArray ):void{this.isSuccess=by.readBoolean();if (by.readByte() > 0) {this.errMsg=by.readUTF();}	}	}	export class c_TakeAllAward extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_TakeAllAward;		}		public init():c_TakeAllAward{			return this;		}public encode(by:egret.ByteArray):void{	}public decode(by:egret.ByteArray ):void{	}	}	export class s_TakeAllAward extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_TakeAllAward;		}		//required>bool		public isSuceess:boolean;//是否成功		//optional>string		public errMsg:string;//错误信息		public init(_isSuceess:boolean,_errMsg:string):s_TakeAllAward{			this.isSuceess=_isSuceess;			this.errMsg=_errMsg;			return this;		}public encode(by:egret.ByteArray):void{by.writeBoolean(this.isSuceess);if (this.errMsg!= null){by.writeByte(1);by.writeUTF(this.errMsg);}else{	by.writeByte(0);}	}public decode(by:egret.ByteArray ):void{this.isSuceess=by.readBoolean();if (by.readByte() > 0) {this.errMsg=by.readUTF();}	}	}	export class c_OpenMail extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_OpenMail;		}		//required>string		public mailId:string;//邮件编号		public init(_mailId:string):c_OpenMail{			this.mailId=_mailId;			return this;		}public encode(by:egret.ByteArray):void{by.writeUTF(this.mailId);	}public decode(by:egret.ByteArray ):void{this.mailId=by.readUTF();	}	}	export class s_OpenMail extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_OpenMail;		}		//required>bool		public isSuccess:boolean;//是否成功		//optional>string		public errMsg:string;//错误信息		//optional>string		public mailID:string;//邮件编号		public init(_isSuccess:boolean,_errMsg:string,_mailID:string):s_OpenMail{			this.isSuccess=_isSuccess;			this.errMsg=_errMsg;			this.mailID=_mailID;			return this;		}public encode(by:egret.ByteArray):void{by.writeBoolean(this.isSuccess);if (this.errMsg!= null){by.writeByte(1);by.writeUTF(this.errMsg);}else{	by.writeByte(0);}if (this.mailID!= null){by.writeByte(1);by.writeUTF(this.mailID);}else{	by.writeByte(0);}	}public decode(by:egret.ByteArray ):void{this.isSuccess=by.readBoolean();if (by.readByte() > 0) {this.errMsg=by.readUTF();}if (by.readByte() > 0) {this.mailID=by.readUTF();}	}	}	export class TaskData extends proto.Pro{		public constructor(){			super();			this.S=MessageType.TaskData;		}		//required>int		public templateId:number=0;//任务模版ID		//required>bool		public isFinish:boolean;//是否完成		//optional>int		public currentTimes:number=0;//当前次数		//optional>int		public expireTime:number=0;//过期时间		public init(_templateId:number,_isFinish:boolean,_currentTimes:number,_expireTime:number):TaskData{			this.templateId=_templateId;			this.isFinish=_isFinish;			this.currentTimes=_currentTimes;			this.expireTime=_expireTime;			return this;		}public encode(by:egret.ByteArray):void{by.writeInt(this.templateId);by.writeBoolean(this.isFinish);//基础类型不建议用optionalby.writeByte(1);by.writeInt(this.currentTimes);//基础类型不建议用optionalby.writeByte(1);by.writeInt(this.expireTime);	}public decode(by:egret.ByteArray ):void{this.templateId=by.readInt();this.isFinish=by.readBoolean();if (by.readByte() > 0) {this.currentTimes=by.readInt();}if (by.readByte() > 0) {this.expireTime=by.readInt();}	}	}	export class s_TaskList extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_TaskList;		}		//repeated>TaskData		public taskList:TaskData[] ;//任务列表		public init(_taskList:TaskData[]):s_TaskList{			this.taskList=_taskList;			return this;		}public encode(by:egret.ByteArray):void{if (this.taskList != null){by.writeShort(this.taskList.length);for (var i:number = 0; i < this.taskList.length; i++) {			this.taskList[i].encode(by);}}else{by.writeShort(0);}	}public decode(by:egret.ByteArray ):void{var __count0:number = by.readShort();		this.taskList = [];for (var i:number = 0; i < __count0; i++) {			this.taskList[i] = new TaskData();			this.taskList[i].decode(by);}	}	}	export class s_TaskChange extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_TaskChange;		}		//required>TaskData		public taskData:TaskData;//改变的任务数据		public init(_taskData:TaskData):s_TaskChange{			this.taskData=_taskData;			return this;		}public encode(by:egret.ByteArray):void{this.taskData.encode(by);	}public decode(by:egret.ByteArray ):void{this.taskData=new TaskData();this.taskData.decode(by);	}	}	export class c_FinishTask extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_FinishTask;		}		//required>int		public TaskTemplateId:number=0;//任务模版Id		public init(_TaskTemplateId:number):c_FinishTask{			this.TaskTemplateId=_TaskTemplateId;			return this;		}public encode(by:egret.ByteArray):void{by.writeInt(this.TaskTemplateId);	}public decode(by:egret.ByteArray ):void{this.TaskTemplateId=by.readInt();	}	}	export class s_FinishTask extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_FinishTask;		}		//required>bool		public isSuccess:boolean;//是否成功		//optional>string		public errMsg:string;//错误信息		public init(_isSuccess:boolean,_errMsg:string):s_FinishTask{			this.isSuccess=_isSuccess;			this.errMsg=_errMsg;			return this;		}public encode(by:egret.ByteArray):void{by.writeBoolean(this.isSuccess);if (this.errMsg!= null){by.writeByte(1);by.writeUTF(this.errMsg);}else{	by.writeByte(0);}	}public decode(by:egret.ByteArray ):void{this.isSuccess=by.readBoolean();if (by.readByte() > 0) {this.errMsg=by.readUTF();}	}	}	export class c_ShenGongUpgrade extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_ShenGongUpgrade;		}		public init():c_ShenGongUpgrade{			return this;		}public encode(by:egret.ByteArray):void{	}public decode(by:egret.ByteArray ):void{	}	}	export class s_ShenGongUpgrade extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_ShenGongUpgrade;		}		//required>bool		public isSuccess:boolean;//是否成功		//optional>string		public errMsg:string;//错误信息		public init(_isSuccess:boolean,_errMsg:string):s_ShenGongUpgrade{			this.isSuccess=_isSuccess;			this.errMsg=_errMsg;			return this;		}public encode(by:egret.ByteArray):void{by.writeBoolean(this.isSuccess);if (this.errMsg!= null){by.writeByte(1);by.writeUTF(this.errMsg);}else{	by.writeByte(0);}	}public decode(by:egret.ByteArray ):void{this.isSuccess=by.readBoolean();if (by.readByte() > 0) {this.errMsg=by.readUTF();}	}	}	export class c_JueweiUpgrade extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_JueweiUpgrade;		}		public init():c_JueweiUpgrade{			return this;		}public encode(by:egret.ByteArray):void{	}public decode(by:egret.ByteArray ):void{	}	}	export class s_JueweiUpgrade extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_JueweiUpgrade;		}		//required>bool		public isSuccess:boolean;//是否成功		//optional>string		public errMsg:string;//错误提示		public init(_isSuccess:boolean,_errMsg:string):s_JueweiUpgrade{			this.isSuccess=_isSuccess;			this.errMsg=_errMsg;			return this;		}public encode(by:egret.ByteArray):void{by.writeBoolean(this.isSuccess);if (this.errMsg!= null){by.writeByte(1);by.writeUTF(this.errMsg);}else{	by.writeByte(0);}	}public decode(by:egret.ByteArray ):void{this.isSuccess=by.readBoolean();if (by.readByte() > 0) {this.errMsg=by.readUTF();}	}	}	export class c_ActiveFashion extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_ActiveFashion;		}		//required>int		public job:number=0;//职业		//required>int		public itemTemplateId:number=0;//消耗的物品模版Id		public init(_job:number,_itemTemplateId:number):c_ActiveFashion{			this.job=_job;			this.itemTemplateId=_itemTemplateId;			return this;		}public encode(by:egret.ByteArray):void{by.writeInt(this.job);by.writeInt(this.itemTemplateId);	}public decode(by:egret.ByteArray ):void{this.job=by.readInt();this.itemTemplateId=by.readInt();	}	}	export class s_ActiveFashion extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_ActiveFashion;		}		//required>bool		public isSuccess:boolean;//是否成功		//optional>string		public errMsg:string;//错误信息		//optional>ItemData		public fashionEquip:ItemData;//时装装备		public init(_isSuccess:boolean,_errMsg:string,_fashionEquip:ItemData):s_ActiveFashion{			this.isSuccess=_isSuccess;			this.errMsg=_errMsg;			this.fashionEquip=_fashionEquip;			return this;		}public encode(by:egret.ByteArray):void{by.writeBoolean(this.isSuccess);if (this.errMsg!= null){by.writeByte(1);by.writeUTF(this.errMsg);}else{	by.writeByte(0);}if (this.fashionEquip!= null){by.writeByte(1);this.fashionEquip.encode(by);}else{	by.writeByte(0);}	}public decode(by:egret.ByteArray ):void{this.isSuccess=by.readBoolean();if (by.readByte() > 0) {this.errMsg=by.readUTF();}if (by.readByte() > 0) {this.fashionEquip=new ItemData();this.fashionEquip.decode(by);}	}	}	export class c_DressFashion extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_DressFashion;		}		//required>int		public job:number=0;//职业		//required>string		public ItemInstId:string;//装备的实例ID		public init(_job:number,_ItemInstId:string):c_DressFashion{			this.job=_job;			this.ItemInstId=_ItemInstId;			return this;		}public encode(by:egret.ByteArray):void{by.writeInt(this.job);by.writeUTF(this.ItemInstId);	}public decode(by:egret.ByteArray ):void{this.job=by.readInt();this.ItemInstId=by.readUTF();	}	}	export class s_DressFashion extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_DressFashion;		}		//required>bool		public isSuccess:boolean;//是否成功		//optional>string		public errMsg:string;//错误信息		public init(_isSuccess:boolean,_errMsg:string):s_DressFashion{			this.isSuccess=_isSuccess;			this.errMsg=_errMsg;			return this;		}public encode(by:egret.ByteArray):void{by.writeBoolean(this.isSuccess);if (this.errMsg!= null){by.writeByte(1);by.writeUTF(this.errMsg);}else{	by.writeByte(0);}	}public decode(by:egret.ByteArray ):void{this.isSuccess=by.readBoolean();if (by.readByte() > 0) {this.errMsg=by.readUTF();}	}	}	export class c_FashionExpire extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_FashionExpire;		}		//required>int		public job:number=0;//0:在背包中1		//required>string		public itemInstId:string;//物品实例ID		public init(_job:number,_itemInstId:string):c_FashionExpire{			this.job=_job;			this.itemInstId=_itemInstId;			return this;		}public encode(by:egret.ByteArray):void{by.writeInt(this.job);by.writeUTF(this.itemInstId);	}public decode(by:egret.ByteArray ):void{this.job=by.readInt();this.itemInstId=by.readUTF();	}	}	export class s_FashionExpire extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_FashionExpire;		}		//required>bool		public isSuccess:boolean;//是否删除成功		//optional>string		public errMsg:string;//错误信息		//optional>int		public remaindSeconds:number=0;//残留秒数		public init(_isSuccess:boolean,_errMsg:string,_remaindSeconds:number):s_FashionExpire{			this.isSuccess=_isSuccess;			this.errMsg=_errMsg;			this.remaindSeconds=_remaindSeconds;			return this;		}public encode(by:egret.ByteArray):void{by.writeBoolean(this.isSuccess);if (this.errMsg!= null){by.writeByte(1);by.writeUTF(this.errMsg);}else{	by.writeByte(0);}//基础类型不建议用optionalby.writeByte(1);by.writeInt(this.remaindSeconds);	}public decode(by:egret.ByteArray ):void{this.isSuccess=by.readBoolean();if (by.readByte() > 0) {this.errMsg=by.readUTF();}if (by.readByte() > 0) {this.remaindSeconds=by.readInt();}	}	}	export class c_LearnCheats extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_LearnCheats;		}		//required>int		public job:number=0;//职业		//required>int		public itemTemplateId:number=0;//秘籍物品模版ID		public init(_job:number,_itemTemplateId:number):c_LearnCheats{			this.job=_job;			this.itemTemplateId=_itemTemplateId;			return this;		}public encode(by:egret.ByteArray):void{by.writeInt(this.job);by.writeInt(this.itemTemplateId);	}public decode(by:egret.ByteArray ):void{this.job=by.readInt();this.itemTemplateId=by.readInt();	}	}	export class s_LearnCheats extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_LearnCheats;		}		//required>bool		public isSuccess:boolean;//是否成功		//optional>string		public errMsg:string;//错误提示		//optional>CheatsInfo		public cheatsInfo:CheatsInfo;//秘籍信息		public init(_isSuccess:boolean,_errMsg:string,_cheatsInfo:CheatsInfo):s_LearnCheats{			this.isSuccess=_isSuccess;			this.errMsg=_errMsg;			this.cheatsInfo=_cheatsInfo;			return this;		}public encode(by:egret.ByteArray):void{by.writeBoolean(this.isSuccess);if (this.errMsg!= null){by.writeByte(1);by.writeUTF(this.errMsg);}else{	by.writeByte(0);}if (this.cheatsInfo!= null){by.writeByte(1);this.cheatsInfo.encode(by);}else{	by.writeByte(0);}	}public decode(by:egret.ByteArray ):void{this.isSuccess=by.readBoolean();if (by.readByte() > 0) {this.errMsg=by.readUTF();}if (by.readByte() > 0) {this.cheatsInfo=new CheatsInfo();this.cheatsInfo.decode(by);}	}	}	export class c_Worship extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_Worship;		}		//required>int		public order:number=0;//排行序列		public init(_order:number):c_Worship{			this.order=_order;			return this;		}public encode(by:egret.ByteArray):void{by.writeInt(this.order);	}public decode(by:egret.ByteArray ):void{this.order=by.readInt();	}	}	export class s_Worship extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_Worship;		}		//required>bool		public isSuccess:boolean;//是否成功		//optional>string		public errMsg:string;//错误信息		public init(_isSuccess:boolean,_errMsg:string):s_Worship{			this.isSuccess=_isSuccess;			this.errMsg=_errMsg;			return this;		}public encode(by:egret.ByteArray):void{by.writeBoolean(this.isSuccess);if (this.errMsg!= null){by.writeByte(1);by.writeUTF(this.errMsg);}else{	by.writeByte(0);}	}public decode(by:egret.ByteArray ):void{this.isSuccess=by.readBoolean();if (by.readByte() > 0) {this.errMsg=by.readUTF();}	}	}	export class s_RankWorship extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_RankWorship;		}		//repeated>bool		public isWorshipList:boolean[] ;//排行榜是否膜拜列表		public init(_isWorshipList:boolean[]):s_RankWorship{			this.isWorshipList=_isWorshipList;			return this;		}public encode(by:egret.ByteArray):void{if (this.isWorshipList != null){by.writeShort(this.isWorshipList.length);for (var i:number = 0; i < this.isWorshipList.length; i++) {by.writeBoolean(this.isWorshipList[i]);}}else{by.writeShort(0);}	}public decode(by:egret.ByteArray ):void{var __count0:number = by.readShort();		this.isWorshipList = [];for (var i:number = 0; i < __count0; i++) {this.isWorshipList[i]=by.readBoolean();}	}	}	export class CheatsInfo extends proto.Pro{		public constructor(){			super();			this.S=MessageType.CheatsInfo;		}		//required>int		public pos:number=0;//对应的秘籍位置		//required>int		public itemTemplateId:number=0;//所镶嵌秘籍的模版ID		public init(_pos:number,_itemTemplateId:number):CheatsInfo{			this.pos=_pos;			this.itemTemplateId=_itemTemplateId;			return this;		}public encode(by:egret.ByteArray):void{by.writeInt(this.pos);by.writeInt(this.itemTemplateId);	}public decode(by:egret.ByteArray ):void{this.pos=by.readInt();this.itemTemplateId=by.readInt();	}	}	export class s_CheatsList extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_CheatsList;		}		//repeated>CheatsInfo		public cheatsList:CheatsInfo[] ;//已镶嵌的秘籍列表		public init(_cheatsList:CheatsInfo[]):s_CheatsList{			this.cheatsList=_cheatsList;			return this;		}public encode(by:egret.ByteArray):void{if (this.cheatsList != null){by.writeShort(this.cheatsList.length);for (var i:number = 0; i < this.cheatsList.length; i++) {			this.cheatsList[i].encode(by);}}else{by.writeShort(0);}	}public decode(by:egret.ByteArray ):void{var __count0:number = by.readShort();		this.cheatsList = [];for (var i:number = 0; i < __count0; i++) {			this.cheatsList[i] = new CheatsInfo();			this.cheatsList[i].decode(by);}	}	}	export class s_FriendList extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_FriendList;		}		//repeated>FriendInfo		public FriendList:FriendInfo[] ;//好友列表包含黑名单		public init(_FriendList:FriendInfo[]):s_FriendList{			this.FriendList=_FriendList;			return this;		}public encode(by:egret.ByteArray):void{if (this.FriendList != null){by.writeShort(this.FriendList.length);for (var i:number = 0; i < this.FriendList.length; i++) {			this.FriendList[i].encode(by);}}else{by.writeShort(0);}	}public decode(by:egret.ByteArray ):void{var __count0:number = by.readShort();		this.FriendList = [];for (var i:number = 0; i < __count0; i++) {			this.FriendList[i] = new FriendInfo();			this.FriendList[i].decode(by);}	}	}	export class c_ChangeHeadIcon extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_ChangeHeadIcon;		}		//required>int		public headIcon:number=0;//头像Id		public init(_headIcon:number):c_ChangeHeadIcon{			this.headIcon=_headIcon;			return this;		}public encode(by:egret.ByteArray):void{by.writeInt(this.headIcon);	}public decode(by:egret.ByteArray ):void{this.headIcon=by.readInt();	}	}	export class s_ChangeHeadIcon extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_ChangeHeadIcon;		}		//required>bool		public isSuccess:boolean;//是否成功		//optional>string		public errMsg:string;//错误信息		public init(_isSuccess:boolean,_errMsg:string):s_ChangeHeadIcon{			this.isSuccess=_isSuccess;			this.errMsg=_errMsg;			return this;		}public encode(by:egret.ByteArray):void{by.writeBoolean(this.isSuccess);if (this.errMsg!= null){by.writeByte(1);by.writeUTF(this.errMsg);}else{	by.writeByte(0);}	}public decode(by:egret.ByteArray ):void{this.isSuccess=by.readBoolean();if (by.readByte() > 0) {this.errMsg=by.readUTF();}	}	}	export class c_RefreshMailExpire extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_RefreshMailExpire;		}		public init():c_RefreshMailExpire{			return this;		}public encode(by:egret.ByteArray):void{	}public decode(by:egret.ByteArray ):void{	}	}	export class s_RefreshMailExpire extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_RefreshMailExpire;		}		//repeated>string		public expireIdList:string[] ;//过期邮件ID列表		public init(_expireIdList:string[]):s_RefreshMailExpire{			this.expireIdList=_expireIdList;			return this;		}public encode(by:egret.ByteArray):void{if (this.expireIdList != null){by.writeShort(this.expireIdList.length);for (var i:number = 0; i < this.expireIdList.length; i++) {by.writeUTF(this.expireIdList[i]);}}else{by.writeShort(0);}	}public decode(by:egret.ByteArray ):void{var __count0:number = by.readShort();		this.expireIdList = [];for (var i:number = 0; i < __count0; i++) {this.expireIdList[i]=by.readUTF();}	}	}	export class c_TalismanStrengthen extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_TalismanStrengthen;		}		//required>byte		public pos:number=0;//法宝强化位置		public init(_pos:number):c_TalismanStrengthen{			this.pos=_pos;			return this;		}public encode(by:egret.ByteArray):void{by.writeByte(this.pos);	}public decode(by:egret.ByteArray ):void{this.pos=by.readUnsignedByte();	}	}	export class s_TalismanStrengthen extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_TalismanStrengthen;		}		//required>bool		public isSuccess:boolean;//是否成功		//optional>int		public newID:number=0;//新的ID		public init(_isSuccess:boolean,_newID:number):s_TalismanStrengthen{			this.isSuccess=_isSuccess;			this.newID=_newID;			return this;		}public encode(by:egret.ByteArray):void{by.writeBoolean(this.isSuccess);//基础类型不建议用optionalby.writeByte(1);by.writeInt(this.newID);	}public decode(by:egret.ByteArray ):void{this.isSuccess=by.readBoolean();if (by.readByte() > 0) {this.newID=by.readInt();}	}	}	export class c_PersonalBoss extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_PersonalBoss;		}		//required>int		public bossTemplateId:number=0;//boss模版ID		public init(_bossTemplateId:number):c_PersonalBoss{			this.bossTemplateId=_bossTemplateId;			return this;		}public encode(by:egret.ByteArray):void{by.writeInt(this.bossTemplateId);	}public decode(by:egret.ByteArray ):void{this.bossTemplateId=by.readInt();	}	}	export class s_PersonalBoss extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_PersonalBoss;		}		//optional>bool		public isWin:boolean;//是否胜利		//repeated>MyAction		public actList:MyAction[] ;//动作列表		public init(_isWin:boolean,_actList:MyAction[]):s_PersonalBoss{			this.isWin=_isWin;			this.actList=_actList;			return this;		}public encode(by:egret.ByteArray):void{//基础类型不建议用optionalby.writeByte(1);by.writeBoolean(this.isWin);if (this.actList != null){by.writeShort(this.actList.length);for (var i:number = 0; i < this.actList.length; i++) {			this.actList[i].encode(by);}}else{by.writeShort(0);}	}public decode(by:egret.ByteArray ):void{if (by.readByte() > 0) {this.isWin=by.readBoolean();}var __count1:number = by.readShort();		this.actList = [];for (var i:number = 0; i < __count1; i++) {			this.actList[i] = new MyAction();			this.actList[i].decode(by);}	}	}	export class s_SyncBossPlayer extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_SyncBossPlayer;		}		//repeated>MyAction		public addUnitList:MyAction[] ;//场景内所有的创建动作		public init(_addUnitList:MyAction[]):s_SyncBossPlayer{			this.addUnitList=_addUnitList;			return this;		}public encode(by:egret.ByteArray):void{if (this.addUnitList != null){by.writeShort(this.addUnitList.length);for (var i:number = 0; i < this.addUnitList.length; i++) {			this.addUnitList[i].encode(by);}}else{by.writeShort(0);}	}public decode(by:egret.ByteArray ):void{var __count0:number = by.readShort();		this.addUnitList = [];for (var i:number = 0; i < __count0; i++) {			this.addUnitList[i] = new MyAction();			this.addUnitList[i].decode(by);}	}	}	export class s_NotifyAction extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_NotifyAction;		}		//repeated>MyAction		public actionList:MyAction[] ;//动作列表		public init(_actionList:MyAction[]):s_NotifyAction{			this.actionList=_actionList;			return this;		}public encode(by:egret.ByteArray):void{if (this.actionList != null){by.writeShort(this.actionList.length);for (var i:number = 0; i < this.actionList.length; i++) {			this.actionList[i].encode(by);}}else{by.writeShort(0);}	}public decode(by:egret.ByteArray ):void{var __count0:number = by.readShort();		this.actionList = [];for (var i:number = 0; i < __count0; i++) {			this.actionList[i] = new MyAction();			this.actionList[i].decode(by);}	}	}	export class RoleEntityInfo extends proto.Pro{		public constructor(){			super();			this.S=MessageType.RoleEntityInfo;		}		//required>byte		public job:number=0;//职业		//required>string		public InstanceId:string;//实例ID		//optional>int		public templateId:number=0;//怪物模版ID		//repeated>int		public attrList:number[] ;//怪或角色的属性列表		//repeated>ItemData		public equips:ItemData[] ;//只有角色才有的装备		public init(_job:number,_InstanceId:string,_templateId:number,_attrList:number[],_equips:ItemData[]):RoleEntityInfo{			this.job=_job;			this.InstanceId=_InstanceId;			this.templateId=_templateId;			this.attrList=_attrList;			this.equips=_equips;			return this;		}public encode(by:egret.ByteArray):void{by.writeByte(this.job);by.writeUTF(this.InstanceId);//基础类型不建议用optionalby.writeByte(1);by.writeInt(this.templateId);if (this.attrList != null){by.writeShort(this.attrList.length);for (var i:number = 0; i < this.attrList.length; i++) {by.writeInt(this.attrList[i]);}}else{by.writeShort(0);}if (this.equips != null){by.writeShort(this.equips.length);for (var i:number = 0; i < this.equips.length; i++) {			this.equips[i].encode(by);}}else{by.writeShort(0);}	}public decode(by:egret.ByteArray ):void{this.job=by.readUnsignedByte();this.InstanceId=by.readUTF();if (by.readByte() > 0) {this.templateId=by.readInt();}var __count3:number = by.readShort();		this.attrList = [];for (var i:number = 0; i < __count3; i++) {this.attrList[i]=by.readInt();}var __count4:number = by.readShort();		this.equips = [];for (var i:number = 0; i < __count4; i++) {			this.equips[i] = new ItemData();			this.equips[i].decode(by);}	}	}	export class c_LeaveBossRoom extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_LeaveBossRoom;		}		//required>int		public bossTemplateId:number=0;//Boss模版ID		public init(_bossTemplateId:number):c_LeaveBossRoom{			this.bossTemplateId=_bossTemplateId;			return this;		}public encode(by:egret.ByteArray):void{by.writeInt(this.bossTemplateId);	}public decode(by:egret.ByteArray ):void{this.bossTemplateId=by.readInt();	}	}	export class s_LeaveBossRoom extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_LeaveBossRoom;		}		//required>bool		public isSuccess:boolean;//是否离开房间		//optional>string		public errMsg:string;//错误信息		public init(_isSuccess:boolean,_errMsg:string):s_LeaveBossRoom{			this.isSuccess=_isSuccess;			this.errMsg=_errMsg;			return this;		}public encode(by:egret.ByteArray):void{by.writeBoolean(this.isSuccess);if (this.errMsg!= null){by.writeByte(1);by.writeUTF(this.errMsg);}else{	by.writeByte(0);}	}public decode(by:egret.ByteArray ):void{this.isSuccess=by.readBoolean();if (by.readByte() > 0) {this.errMsg=by.readUTF();}	}	}	export class BossInfo extends proto.Pro{		public constructor(){			super();			this.S=MessageType.BossInfo;		}		//required>int		public bossTemplateId:number=0;//Boss模版ID		//required>bool		public isOpen:boolean;//是否已经开启		//optional>int		public expireTime:number=0;//过期时间		//required>int		public playerCount:number=0;//玩家数量		public init(_bossTemplateId:number,_isOpen:boolean,_expireTime:number,_playerCount:number):BossInfo{			this.bossTemplateId=_bossTemplateId;			this.isOpen=_isOpen;			this.expireTime=_expireTime;			this.playerCount=_playerCount;			return this;		}public encode(by:egret.ByteArray):void{by.writeInt(this.bossTemplateId);by.writeBoolean(this.isOpen);//基础类型不建议用optionalby.writeByte(1);by.writeInt(this.expireTime);by.writeInt(this.playerCount);	}public decode(by:egret.ByteArray ):void{this.bossTemplateId=by.readInt();this.isOpen=by.readBoolean();if (by.readByte() > 0) {this.expireTime=by.readInt();}this.playerCount=by.readInt();	}	}	export class c_WorldBoss extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_WorldBoss;		}		//required>int		public bossTemplateId:number=0;//boss模版ID		public init(_bossTemplateId:number):c_WorldBoss{			this.bossTemplateId=_bossTemplateId;			return this;		}public encode(by:egret.ByteArray):void{by.writeInt(this.bossTemplateId);	}public decode(by:egret.ByteArray ):void{this.bossTemplateId=by.readInt();	}	}	export class s_WorldBoss extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_WorldBoss;		}		//optional>bool		public isWin:boolean;//是否胜利		//repeated>ItemData		public DropList:ItemData[] ;//掉落物品列表		public init(_isWin:boolean,_DropList:ItemData[]):s_WorldBoss{			this.isWin=_isWin;			this.DropList=_DropList;			return this;		}public encode(by:egret.ByteArray):void{//基础类型不建议用optionalby.writeByte(1);by.writeBoolean(this.isWin);if (this.DropList != null){by.writeShort(this.DropList.length);for (var i:number = 0; i < this.DropList.length; i++) {			this.DropList[i].encode(by);}}else{by.writeShort(0);}	}public decode(by:egret.ByteArray ):void{if (by.readByte() > 0) {this.isWin=by.readBoolean();}var __count1:number = by.readShort();		this.DropList = [];for (var i:number = 0; i < __count1; i++) {			this.DropList[i] = new ItemData();			this.DropList[i].decode(by);}	}	}	export class s_BossAck extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_BossAck;		}		//required>bool		public isSuccess:boolean;//是否成功		//optional>string		public errMsg:string;//错误信息		//optional>int		public remainSeconds:number=0;//残留秒数		public init(_isSuccess:boolean,_errMsg:string,_remainSeconds:number):s_BossAck{			this.isSuccess=_isSuccess;			this.errMsg=_errMsg;			this.remainSeconds=_remainSeconds;			return this;		}public encode(by:egret.ByteArray):void{by.writeBoolean(this.isSuccess);if (this.errMsg!= null){by.writeByte(1);by.writeUTF(this.errMsg);}else{	by.writeByte(0);}//基础类型不建议用optionalby.writeByte(1);by.writeInt(this.remainSeconds);	}public decode(by:egret.ByteArray ):void{this.isSuccess=by.readBoolean();if (by.readByte() > 0) {this.errMsg=by.readUTF();}if (by.readByte() > 0) {this.remainSeconds=by.readInt();}	}	}	export class s_PersonalBossList extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_PersonalBossList;		}		//repeated>BossInfo		public bossInfoList:BossInfo[] ;//个人Boss列表		public init(_bossInfoList:BossInfo[]):s_PersonalBossList{			this.bossInfoList=_bossInfoList;			return this;		}public encode(by:egret.ByteArray):void{if (this.bossInfoList != null){by.writeShort(this.bossInfoList.length);for (var i:number = 0; i < this.bossInfoList.length; i++) {			this.bossInfoList[i].encode(by);}}else{by.writeShort(0);}	}public decode(by:egret.ByteArray ):void{var __count0:number = by.readShort();		this.bossInfoList = [];for (var i:number = 0; i < __count0; i++) {			this.bossInfoList[i] = new BossInfo();			this.bossInfoList[i].decode(by);}	}	}	export class c_WorldBossList extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_WorldBossList;		}		public init():c_WorldBossList{			return this;		}public encode(by:egret.ByteArray):void{	}public decode(by:egret.ByteArray ):void{	}	}	export class s_WorldBossList extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_WorldBossList;		}		//repeated>BossInfo		public bossInfoList:BossInfo[] ;//世界Boss信息列表		//required>int		public serverTime:number=0;//服务器当前时间		public init(_bossInfoList:BossInfo[],_serverTime:number):s_WorldBossList{			this.bossInfoList=_bossInfoList;			this.serverTime=_serverTime;			return this;		}public encode(by:egret.ByteArray):void{if (this.bossInfoList != null){by.writeShort(this.bossInfoList.length);for (var i:number = 0; i < this.bossInfoList.length; i++) {			this.bossInfoList[i].encode(by);}}else{by.writeShort(0);}by.writeInt(this.serverTime);	}public decode(by:egret.ByteArray ):void{var __count0:number = by.readShort();		this.bossInfoList = [];for (var i:number = 0; i < __count0; i++) {			this.bossInfoList[i] = new BossInfo();			this.bossInfoList[i].decode(by);}this.serverTime=by.readInt();	}	}	export class c_SyncTime extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_SyncTime;		}		//required>int		public clientTime:number=0;//客户端时间		public init(_clientTime:number):c_SyncTime{			this.clientTime=_clientTime;			return this;		}public encode(by:egret.ByteArray):void{by.writeInt(this.clientTime);	}public decode(by:egret.ByteArray ):void{this.clientTime=by.readInt();	}	}	export class s_SyncTime extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_SyncTime;		}		//required>int		public clientTime:number=0;//客户端时间		//required>int		public serverTime:number=0;//服务器时间		public init(_clientTime:number,_serverTime:number):s_SyncTime{			this.clientTime=_clientTime;			this.serverTime=_serverTime;			return this;		}public encode(by:egret.ByteArray):void{by.writeInt(this.clientTime);by.writeInt(this.serverTime);	}public decode(by:egret.ByteArray ):void{this.clientTime=by.readInt();this.serverTime=by.readInt();	}	}	export class c_RebornBoss extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_RebornBoss;		}		public init():c_RebornBoss{			return this;		}public encode(by:egret.ByteArray):void{	}public decode(by:egret.ByteArray ):void{	}	}	export class s_RebornBoss extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_RebornBoss;		}		//optional>bool		public isWin:boolean;//是否胜利		//repeated>ItemData		public DropList:ItemData[] ;//掉落物品列表		public init(_isWin:boolean,_DropList:ItemData[]):s_RebornBoss{			this.isWin=_isWin;			this.DropList=_DropList;			return this;		}public encode(by:egret.ByteArray):void{//基础类型不建议用optionalby.writeByte(1);by.writeBoolean(this.isWin);if (this.DropList != null){by.writeShort(this.DropList.length);for (var i:number = 0; i < this.DropList.length; i++) {			this.DropList[i].encode(by);}}else{by.writeShort(0);}	}public decode(by:egret.ByteArray ):void{if (by.readByte() > 0) {this.isWin=by.readBoolean();}var __count1:number = by.readShort();		this.DropList = [];for (var i:number = 0; i < __count1; i++) {			this.DropList[i] = new ItemData();			this.DropList[i].decode(by);}	}	}	export class c_MeetBattle extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_MeetBattle;		}		public init():c_MeetBattle{			return this;		}public encode(by:egret.ByteArray):void{	}public decode(by:egret.ByteArray ):void{	}	}	export class s_MeetBattle extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_MeetBattle;		}		//repeated>AttrValue		public attrList:AttrValue[] ;//玩家信息:头像		public init(_attrList:AttrValue[]):s_MeetBattle{			this.attrList=_attrList;			return this;		}public encode(by:egret.ByteArray):void{if (this.attrList != null){by.writeShort(this.attrList.length);for (var i:number = 0; i < this.attrList.length; i++) {			this.attrList[i].encode(by);}}else{by.writeShort(0);}	}public decode(by:egret.ByteArray ):void{var __count0:number = by.readShort();		this.attrList = [];for (var i:number = 0; i < __count0; i++) {			this.attrList[i] = new AttrValue();			this.attrList[i].decode(by);}	}	}	export class s_MeetData extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_MeetData;		}		//repeated>RankInfo		public meetPlayerList:RankInfo[] ;//遭遇玩家列表		//required>int		public refreshTime:number=0;//最后一次出现敌人的时间		public init(_meetPlayerList:RankInfo[],_refreshTime:number):s_MeetData{			this.meetPlayerList=_meetPlayerList;			this.refreshTime=_refreshTime;			return this;		}public encode(by:egret.ByteArray):void{if (this.meetPlayerList != null){by.writeShort(this.meetPlayerList.length);for (var i:number = 0; i < this.meetPlayerList.length; i++) {			this.meetPlayerList[i].encode(by);}}else{by.writeShort(0);}by.writeInt(this.refreshTime);	}public decode(by:egret.ByteArray ):void{var __count0:number = by.readShort();		this.meetPlayerList = [];for (var i:number = 0; i < __count0; i++) {			this.meetPlayerList[i] = new RankInfo();			this.meetPlayerList[i].decode(by);}this.refreshTime=by.readInt();	}	}	export class c_MeetKill extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_MeetKill;		}		//required>string		public playerId:string;//玩家ID		public init(_playerId:string):c_MeetKill{			this.playerId=_playerId;			return this;		}public encode(by:egret.ByteArray):void{by.writeUTF(this.playerId);	}public decode(by:egret.ByteArray ):void{this.playerId=by.readUTF();	}	}	export class s_MeetKill extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_MeetKill;		}		//required>bool		public isSuccess:boolean;//是否成功		//optional>string		public errMsg:string;//错误信息		//optional>bool		public isWin:boolean;//是否胜利		//repeated>MyAction		public actList:MyAction[] ;//动作列表		public init(_isSuccess:boolean,_errMsg:string,_isWin:boolean,_actList:MyAction[]):s_MeetKill{			this.isSuccess=_isSuccess;			this.errMsg=_errMsg;			this.isWin=_isWin;			this.actList=_actList;			return this;		}public encode(by:egret.ByteArray):void{by.writeBoolean(this.isSuccess);if (this.errMsg!= null){by.writeByte(1);by.writeUTF(this.errMsg);}else{	by.writeByte(0);}//基础类型不建议用optionalby.writeByte(1);by.writeBoolean(this.isWin);if (this.actList != null){by.writeShort(this.actList.length);for (var i:number = 0; i < this.actList.length; i++) {			this.actList[i].encode(by);}}else{by.writeShort(0);}	}public decode(by:egret.ByteArray ):void{this.isSuccess=by.readBoolean();if (by.readByte() > 0) {this.errMsg=by.readUTF();}if (by.readByte() > 0) {this.isWin=by.readBoolean();}var __count3:number = by.readShort();		this.actList = [];for (var i:number = 0; i < __count3; i++) {			this.actList[i] = new MyAction();			this.actList[i].decode(by);}	}	}	export class s_GuildList extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_GuildList;		}		//required>int		public guildLv:number=0;//公会等级		//required>int		public gold:number=0;//公会资金		//repeated>GuildMemberData		public memberList:GuildMemberData[] ;//成员列表		//required>string		public notice:string;//公会公告		//repeated>GuildMemberData		public requstList:GuildMemberData[] ;//申请列表		public init(_guildLv:number,_gold:number,_memberList:GuildMemberData[],_notice:string,_requstList:GuildMemberData[]):s_GuildList{			this.guildLv=_guildLv;			this.gold=_gold;			this.memberList=_memberList;			this.notice=_notice;			this.requstList=_requstList;			return this;		}public encode(by:egret.ByteArray):void{by.writeInt(this.guildLv);by.writeInt(this.gold);if (this.memberList != null){by.writeShort(this.memberList.length);for (var i:number = 0; i < this.memberList.length; i++) {			this.memberList[i].encode(by);}}else{by.writeShort(0);}by.writeUTF(this.notice);if (this.requstList != null){by.writeShort(this.requstList.length);for (var i:number = 0; i < this.requstList.length; i++) {			this.requstList[i].encode(by);}}else{by.writeShort(0);}	}public decode(by:egret.ByteArray ):void{this.guildLv=by.readInt();this.gold=by.readInt();var __count2:number = by.readShort();		this.memberList = [];for (var i:number = 0; i < __count2; i++) {			this.memberList[i] = new GuildMemberData();			this.memberList[i].decode(by);}this.notice=by.readUTF();var __count4:number = by.readShort();		this.requstList = [];for (var i:number = 0; i < __count4; i++) {			this.requstList[i] = new GuildMemberData();			this.requstList[i].decode(by);}	}	}	export class GuildMemberData extends proto.Pro{		public constructor(){			super();			this.S=MessageType.GuildMemberData;		}		//required>string		public name:string;//玩家名称		//required>string		public playerId:string;//玩家ID		//required>int		public totalContribution:number=0;//历史贡献		//required>int		public currContribution:number=0;//当前可用贡献		//required>int		public duty:number=0;//职位		//repeated>AttrValue		public attrList:AttrValue[] ;//属性列表		//required>int		public logoutTime:number=0;//离线时间		public init(_name:string,_playerId:string,_totalContribution:number,_currContribution:number,_duty:number,_attrList:AttrValue[],_logoutTime:number):GuildMemberData{			this.name=_name;			this.playerId=_playerId;			this.totalContribution=_totalContribution;			this.currContribution=_currContribution;			this.duty=_duty;			this.attrList=_attrList;			this.logoutTime=_logoutTime;			return this;		}public encode(by:egret.ByteArray):void{by.writeUTF(this.name);by.writeUTF(this.playerId);by.writeInt(this.totalContribution);by.writeInt(this.currContribution);by.writeInt(this.duty);if (this.attrList != null){by.writeShort(this.attrList.length);for (var i:number = 0; i < this.attrList.length; i++) {			this.attrList[i].encode(by);}}else{by.writeShort(0);}by.writeInt(this.logoutTime);	}public decode(by:egret.ByteArray ):void{this.name=by.readUTF();this.playerId=by.readUTF();this.totalContribution=by.readInt();this.currContribution=by.readInt();this.duty=by.readInt();var __count5:number = by.readShort();		this.attrList = [];for (var i:number = 0; i < __count5; i++) {			this.attrList[i] = new AttrValue();			this.attrList[i].decode(by);}this.logoutTime=by.readInt();	}	}	export class s_mess extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_mess;		}		//required>int		public channel:number=0;//提示频道		//required>string		public content:string;//提示内容		public init(_channel:number,_content:string):s_mess{			this.channel=_channel;			this.content=_content;			return this;		}public encode(by:egret.ByteArray):void{by.writeInt(this.channel);by.writeUTF(this.content);	}public decode(by:egret.ByteArray ):void{this.channel=by.readInt();this.content=by.readUTF();	}	}	export class c_move extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_move;		}		//required>short		public cx:number=0;//横向坐标		//required>short		public cy:number=0;//纵向坐标		//required>short		public endx:number=0;//横向坐标		//required>short		public endy:number=0;//纵向坐标		public init(_cx:number,_cy:number,_endx:number,_endy:number):c_move{			this.cx=_cx;			this.cy=_cy;			this.endx=_endx;			this.endy=_endy;			return this;		}public encode(by:egret.ByteArray):void{by.writeShort(this.cx);by.writeShort(this.cy);by.writeShort(this.endx);by.writeShort(this.endy);	}public decode(by:egret.ByteArray ):void{this.cx=by.readShort();this.cy=by.readShort();this.endx=by.readShort();this.endy=by.readShort();	}	}	export class s_move extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_move;		}		//required>int		public uid:number=0;//单位在服务器的唯一ID		//required>short		public cx:number=0;//横向坐标		//required>short		public cy:number=0;//纵向坐标		//required>short		public endx:number=0;//横向坐标		//required>short		public endy:number=0;//纵向坐标		//required>string		public timeSpan:string;//时间戳		public init(_uid:number,_cx:number,_cy:number,_endx:number,_endy:number,_timeSpan:string):s_move{			this.uid=_uid;			this.cx=_cx;			this.cy=_cy;			this.endx=_endx;			this.endy=_endy;			this.timeSpan=_timeSpan;			return this;		}public encode(by:egret.ByteArray):void{by.writeInt(this.uid);by.writeShort(this.cx);by.writeShort(this.cy);by.writeShort(this.endx);by.writeShort(this.endy);by.writeUTF(this.timeSpan);	}public decode(by:egret.ByteArray ):void{this.uid=by.readInt();this.cx=by.readShort();this.cy=by.readShort();this.endx=by.readShort();this.endy=by.readShort();this.timeSpan=by.readUTF();	}	}	export class Pos extends proto.Pro{		public constructor(){			super();			this.S=MessageType.Pos;		}		//required>string		public uid:string;//单位在地图里的唯一ID		//required>byte		public x:number=0;//横向坐标		//required>byte		public y:number=0;//纵向坐标		public init(_uid:string,_x:number,_y:number):Pos{			this.uid=_uid;			this.x=_x;			this.y=_y;			return this;		}public encode(by:egret.ByteArray):void{by.writeUTF(this.uid);by.writeByte(this.x);by.writeByte(this.y);	}public decode(by:egret.ByteArray ):void{this.uid=by.readUTF();this.x=by.readUnsignedByte();this.y=by.readUnsignedByte();	}	}	export class s_Mapload extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_Mapload;		}		//required>string		public mapid:string;//undefined		public init(_mapid:string):s_Mapload{			this.mapid=_mapid;			return this;		}public encode(by:egret.ByteArray):void{by.writeUTF(this.mapid);	}public decode(by:egret.ByteArray ):void{this.mapid=by.readUTF();	}	}	export class s_Mapshow extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_Mapshow;		}		public init():s_Mapshow{			return this;		}public encode(by:egret.ByteArray):void{	}public decode(by:egret.ByteArray ):void{	}	}	export class s_setpos extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_setpos;		}		//required>int		public uid:number=0;//单位在服务器的唯一ID		//required>Pos		public pos:Pos;//坐标		public init(_uid:number,_pos:Pos):s_setpos{			this.uid=_uid;			this.pos=_pos;			return this;		}public encode(by:egret.ByteArray):void{by.writeInt(this.uid);this.pos.encode(by);	}public decode(by:egret.ByteArray ):void{this.uid=by.readInt();this.pos=new Pos();this.pos.decode(by);	}	}	export class s_Map_UnitAdd extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_Map_UnitAdd;		}		//required>s_MapUnitInfo		public unitinfo:s_MapUnitInfo;//undefined		public init(_unitinfo:s_MapUnitInfo):s_Map_UnitAdd{			this.unitinfo=_unitinfo;			return this;		}public encode(by:egret.ByteArray):void{this.unitinfo.encode(by);	}public decode(by:egret.ByteArray ):void{this.unitinfo=new s_MapUnitInfo();this.unitinfo.decode(by);	}	}	export class s_Map_UnitRemove extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_Map_UnitRemove;		}		//required>int		public uid:number=0;//单位在服务器的唯一ID		public init(_uid:number):s_Map_UnitRemove{			this.uid=_uid;			return this;		}public encode(by:egret.ByteArray):void{by.writeInt(this.uid);	}public decode(by:egret.ByteArray ):void{this.uid=by.readInt();	}	}	export class s_MapUnitInfo extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_MapUnitInfo;		}		//required>int		public uid:number=0;//单位在服务器的唯一ID		//required>byte		public type:number=0;//单位类型		//required>string		public name:string;//undefined		//required>Pos		public pos:Pos;//undefined		//requited>byte		public lev:number=0;//掉落物的话是剩余时间		//requited>byte		public bind:number=0;//是否绑定，0表示不绑定，1表示绑定		//optional>string		public templeID:string;//undefined		//requited>short		public count:number=0;//数量		//optional>MapUnit_extraInfo		public extra:MapUnit_extraInfo;//外信息		public init(_uid:number,_type:number,_name:string,_pos:Pos,_lev:number,_bind:number,_templeID:string,_count:number,_extra:MapUnit_extraInfo):s_MapUnitInfo{			this.uid=_uid;			this.type=_type;			this.name=_name;			this.pos=_pos;			this.lev=_lev;			this.bind=_bind;			this.templeID=_templeID;			this.count=_count;			this.extra=_extra;			return this;		}public encode(by:egret.ByteArray):void{by.writeInt(this.uid);by.writeByte(this.type);by.writeUTF(this.name);this.pos.encode(by);by.writeByte(this.lev);by.writeByte(this.bind);if (this.templeID!= null){by.writeByte(1);by.writeUTF(this.templeID);}else{	by.writeByte(0);}by.writeShort(this.count);if (this.extra!= null){by.writeByte(1);this.extra.encode(by);}else{	by.writeByte(0);}	}public decode(by:egret.ByteArray ):void{this.uid=by.readInt();this.type=by.readUnsignedByte();this.name=by.readUTF();this.pos=new Pos();this.pos.decode(by);this.lev=by.readUnsignedByte();this.bind=by.readUnsignedByte();if (by.readByte() > 0) {this.templeID=by.readUTF();}this.count=by.readShort();if (by.readByte() > 0) {this.extra=new MapUnit_extraInfo();this.extra.decode(by);}	}	}	export class s_MapUnit_Model extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_MapUnit_Model;		}		//required>int		public oid:number=0;//流水号		//repeated>short		public models:number[] ;//模型数组		public init(_oid:number,_models:number[]):s_MapUnit_Model{			this.oid=_oid;			this.models=_models;			return this;		}public encode(by:egret.ByteArray):void{by.writeInt(this.oid);if (this.models != null){by.writeShort(this.models.length);for (var i:number = 0; i < this.models.length; i++) {by.writeShort(this.models[i]);}}else{by.writeShort(0);}	}public decode(by:egret.ByteArray ):void{this.oid=by.readInt();var __count1:number = by.readShort();		this.models = [];for (var i:number = 0; i < __count1; i++) {this.models[i]=by.readShort();}	}	}	export class s_MapUnit_title extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_MapUnit_title;		}		public init():s_MapUnit_title{			return this;		}public encode(by:egret.ByteArray):void{	}public decode(by:egret.ByteArray ):void{	}	}	export class c_MapUnit_sel extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_MapUnit_sel;		}		//required>int		public uid:number=0;//单位在服务器的唯一ID		public init(_uid:number):c_MapUnit_sel{			this.uid=_uid;			return this;		}public encode(by:egret.ByteArray):void{by.writeInt(this.uid);	}public decode(by:egret.ByteArray ):void{this.uid=by.readInt();	}	}	export class s_MapUnit_state extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_MapUnit_state;		}		//required>int		public uid:number=0;//单位在服务器的唯一ID		//required>byte		public state:number=0;//单位在服务器的状态0		public init(_uid:number,_state:number):s_MapUnit_state{			this.uid=_uid;			this.state=_state;			return this;		}public encode(by:egret.ByteArray):void{by.writeInt(this.uid);by.writeByte(this.state);	}public decode(by:egret.ByteArray ):void{this.uid=by.readInt();this.state=by.readUnsignedByte();	}	}	export class MapUnit_extraInfo extends proto.Pro{		public constructor(){			super();			this.S=MessageType.MapUnit_extraInfo;		}		//required>float		public Speed:number=0;//undefined		//required>float		public Quick:number=0;//undefined		//required>byte		public lev:number=0;//undefined		//required>byte		public pkflag:number=0;//0，白名，1黄名，2，红名，3灰名		//required>int		public MHP:number=0;//undefined		//required>int		public HP:number=0;//undefined		//requied>byte		public state:number=0;//undefined		//optional>string		public guildname:string;//undefined		//required>byte		public head:number=0;//目标头像		//repeated>short		public models:number[] ;//undefined		//repeated>string		public titles:string[] ;//undefined		public init(_Speed:number,_Quick:number,_lev:number,_pkflag:number,_MHP:number,_HP:number,_state:number,_guildname:string,_head:number,_models:number[],_titles:string[]):MapUnit_extraInfo{			this.Speed=_Speed;			this.Quick=_Quick;			this.lev=_lev;			this.pkflag=_pkflag;			this.MHP=_MHP;			this.HP=_HP;			this.state=_state;			this.guildname=_guildname;			this.head=_head;			this.models=_models;			this.titles=_titles;			return this;		}public encode(by:egret.ByteArray):void{by.writeFloat(this.Speed);by.writeFloat(this.Quick);by.writeByte(this.lev);by.writeByte(this.pkflag);by.writeInt(this.MHP);by.writeInt(this.HP);by.writeByte(this.state);if (this.guildname!= null){by.writeByte(1);by.writeUTF(this.guildname);}else{	by.writeByte(0);}by.writeByte(this.head);if (this.models != null){by.writeShort(this.models.length);for (var i:number = 0; i < this.models.length; i++) {by.writeShort(this.models[i]);}}else{by.writeShort(0);}if (this.titles != null){by.writeShort(this.titles.length);for (var i:number = 0; i < this.titles.length; i++) {by.writeUTF(this.titles[i]);}}else{by.writeShort(0);}	}public decode(by:egret.ByteArray ):void{this.Speed=by.readFloat();this.Quick=by.readFloat();this.lev=by.readUnsignedByte();this.pkflag=by.readUnsignedByte();this.MHP=by.readInt();this.HP=by.readInt();this.state=by.readUnsignedByte();if (by.readByte() > 0) {this.guildname=by.readUTF();}this.head=by.readUnsignedByte();var __count9:number = by.readShort();		this.models = [];for (var i:number = 0; i < __count9; i++) {this.models[i]=by.readShort();}var __count10:number = by.readShort();		this.titles = [];for (var i:number = 0; i < __count10; i++) {this.titles[i]=by.readUTF();}	}	}	export class s_TweenTo extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_TweenTo;		}		//required>int		public uid:number=0;//单位在服务器的唯一ID		//required>Pos		public pos:Pos;//坐标		//required>int		public targetuid:number=0;//朝向的目标UID		public init(_uid:number,_pos:Pos,_targetuid:number):s_TweenTo{			this.uid=_uid;			this.pos=_pos;			this.targetuid=_targetuid;			return this;		}public encode(by:egret.ByteArray):void{by.writeInt(this.uid);this.pos.encode(by);by.writeInt(this.targetuid);	}public decode(by:egret.ByteArray ):void{this.uid=by.readInt();this.pos=new Pos();this.pos.decode(by);this.targetuid=by.readInt();	}	}	export class s_addFire extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_addFire;		}		//repeated>Pos		public postions:Pos[] ;//undefined		public init(_postions:Pos[]):s_addFire{			this.postions=_postions;			return this;		}public encode(by:egret.ByteArray):void{if (this.postions != null){by.writeShort(this.postions.length);for (var i:number = 0; i < this.postions.length; i++) {			this.postions[i].encode(by);}}else{by.writeShort(0);}	}public decode(by:egret.ByteArray ):void{var __count0:number = by.readShort();		this.postions = [];for (var i:number = 0; i < __count0; i++) {			this.postions[i] = new Pos();			this.postions[i].decode(by);}	}	}	export class s_removeFire extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_removeFire;		}		//required>byte		public x:number=0;//undefined		//required>byte		public y:number=0;//undefined		public init(_x:number,_y:number):s_removeFire{			this.x=_x;			this.y=_y;			return this;		}public encode(by:egret.ByteArray):void{by.writeByte(this.x);by.writeByte(this.y);	}public decode(by:egret.ByteArray ):void{this.x=by.readUnsignedByte();this.y=by.readUnsignedByte();	}	}	export class s_MapUnit_PkState extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_MapUnit_PkState;		}		//required>int		public uid:number=0;//单位的uid		//required>byte		public pkflag:number=0;//0，白名，1黄名，2，红名，3灰名		public init(_uid:number,_pkflag:number):s_MapUnit_PkState{			this.uid=_uid;			this.pkflag=_pkflag;			return this;		}public encode(by:egret.ByteArray):void{by.writeInt(this.uid);by.writeByte(this.pkflag);	}public decode(by:egret.ByteArray ):void{this.uid=by.readInt();this.pkflag=by.readUnsignedByte();	}	}	export class c_GetDrop extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_GetDrop;		}		//required>int		public uid:number=0;//单位在服务器的唯一ID		//required>byte		public place:number=0;//背包所在位置		public init(_uid:number,_place:number):c_GetDrop{			this.uid=_uid;			this.place=_place;			return this;		}public encode(by:egret.ByteArray):void{by.writeInt(this.uid);by.writeByte(this.place);	}public decode(by:egret.ByteArray ):void{this.uid=by.readInt();this.place=by.readUnsignedByte();	}	}	export class c_flyto extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_flyto;		}		//required>string		public mapid:string;//目标地图的ID		//required>byte		public x:number=0;//要飞过去的格子坐标		//required>byte		public y:number=0;//要飞过去的格子坐标		public init(_mapid:string,_x:number,_y:number):c_flyto{			this.mapid=_mapid;			this.x=_x;			this.y=_y;			return this;		}public encode(by:egret.ByteArray):void{by.writeUTF(this.mapid);by.writeByte(this.x);by.writeByte(this.y);	}public decode(by:egret.ByteArray ):void{this.mapid=by.readUTF();this.x=by.readUnsignedByte();this.y=by.readUnsignedByte();	}	}	export class c_revive extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_revive;		}		//required>byte		public flag:number=0;//0		public init(_flag:number):c_revive{			this.flag=_flag;			return this;		}public encode(by:egret.ByteArray):void{by.writeByte(this.flag);	}public decode(by:egret.ByteArray ):void{this.flag=by.readUnsignedByte();	}	}	export class c_skill_use extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_skill_use;		}		//required>short		public x:number=0;//undefined		//required>short		public y:number=0;//使用技能必须先停到某个坐标		//required>string		public skillid:string;//技能ID		//repeated>int		public targets:number[] ;//目标ID		//optional>Pos		public targetPos:Pos;//目标位置		//optional>byte		public dir:number=0;//自身朝向		public init(_x:number,_y:number,_skillid:string,_targets:number[],_targetPos:Pos,_dir:number):c_skill_use{			this.x=_x;			this.y=_y;			this.skillid=_skillid;			this.targets=_targets;			this.targetPos=_targetPos;			this.dir=_dir;			return this;		}public encode(by:egret.ByteArray):void{by.writeShort(this.x);by.writeShort(this.y);by.writeUTF(this.skillid);if (this.targets != null){by.writeShort(this.targets.length);for (var i:number = 0; i < this.targets.length; i++) {by.writeInt(this.targets[i]);}}else{by.writeShort(0);}if (this.targetPos!= null){by.writeByte(1);this.targetPos.encode(by);}else{	by.writeByte(0);}//基础类型不建议用optionalby.writeByte(1);by.writeByte(this.dir);	}public decode(by:egret.ByteArray ):void{this.x=by.readShort();this.y=by.readShort();this.skillid=by.readUTF();var __count3:number = by.readShort();		this.targets = [];for (var i:number = 0; i < __count3; i++) {this.targets[i]=by.readInt();}if (by.readByte() > 0) {this.targetPos=new Pos();this.targetPos.decode(by);}if (by.readByte() > 0) {this.dir=by.readUnsignedByte();}	}	}	export class s_skilluse extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_skilluse;		}		//required>string		public skillid:string;//技能ID		//required>int		public uid:number=0;//施法者		//required>int		public targetid:number=0;//目标		//optional>Pos		public targetpos:Pos;//目标坐标		//repeated>s_Damage		public targets:s_Damage[] ;//目标ID列表		public init(_skillid:string,_uid:number,_targetid:number,_targetpos:Pos,_targets:s_Damage[]):s_skilluse{			this.skillid=_skillid;			this.uid=_uid;			this.targetid=_targetid;			this.targetpos=_targetpos;			this.targets=_targets;			return this;		}public encode(by:egret.ByteArray):void{by.writeUTF(this.skillid);by.writeInt(this.uid);by.writeInt(this.targetid);if (this.targetpos!= null){by.writeByte(1);this.targetpos.encode(by);}else{	by.writeByte(0);}if (this.targets != null){by.writeShort(this.targets.length);for (var i:number = 0; i < this.targets.length; i++) {			this.targets[i].encode(by);}}else{by.writeShort(0);}	}public decode(by:egret.ByteArray ):void{this.skillid=by.readUTF();this.uid=by.readInt();this.targetid=by.readInt();if (by.readByte() > 0) {this.targetpos=new Pos();this.targetpos.decode(by);}var __count4:number = by.readShort();		this.targets = [];for (var i:number = 0; i < __count4; i++) {			this.targets[i] = new s_Damage();			this.targets[i].decode(by);}	}	}	export class s_skill_add extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_skill_add;		}		//required>SkillInfo		public skillinfo:SkillInfo;//技能模版id		public init(_skillinfo:SkillInfo):s_skill_add{			this.skillinfo=_skillinfo;			return this;		}public encode(by:egret.ByteArray):void{this.skillinfo.encode(by);	}public decode(by:egret.ByteArray ):void{this.skillinfo=new SkillInfo();this.skillinfo.decode(by);	}	}	export class SkillInfo extends proto.Pro{		public constructor(){			super();			this.S=MessageType.SkillInfo;		}		//required>int		public SkillID:number=0;//技能ID		public init(_SkillID:number):SkillInfo{			this.SkillID=_SkillID;			return this;		}public encode(by:egret.ByteArray):void{by.writeInt(this.SkillID);	}public decode(by:egret.ByteArray ):void{this.SkillID=by.readInt();	}	}	export class s_Damage extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_Damage;		}		//required>int		public uid:number=0;//目标ID		//required>byte		public damageType:number=0;//伤害类型		//required>int		public value:number=0;//值		public init(_uid:number,_damageType:number,_value:number):s_Damage{			this.uid=_uid;			this.damageType=_damageType;			this.value=_value;			return this;		}public encode(by:egret.ByteArray):void{by.writeInt(this.uid);by.writeByte(this.damageType);by.writeInt(this.value);	}public decode(by:egret.ByteArray ):void{this.uid=by.readInt();this.damageType=by.readUnsignedByte();this.value=by.readInt();	}	}	export class s_skill_setAttr extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_skill_setAttr;		}		//required>string		public skillid:string;//技能ID		//required>string		public attr:string;//属性		//required>int		public value:number=0;//值		public init(_skillid:string,_attr:string,_value:number):s_skill_setAttr{			this.skillid=_skillid;			this.attr=_attr;			this.value=_value;			return this;		}public encode(by:egret.ByteArray):void{by.writeUTF(this.skillid);by.writeUTF(this.attr);by.writeInt(this.value);	}public decode(by:egret.ByteArray ):void{this.skillid=by.readUTF();this.attr=by.readUTF();this.value=by.readInt();	}	}	export class s_CD_add extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_CD_add;		}		//required>string		public cdgroup:string;//cd组		//required>int		public cdtime:number=0;//毫秒数		public init(_cdgroup:string,_cdtime:number):s_CD_add{			this.cdgroup=_cdgroup;			this.cdtime=_cdtime;			return this;		}public encode(by:egret.ByteArray):void{by.writeUTF(this.cdgroup);by.writeInt(this.cdtime);	}public decode(by:egret.ByteArray ):void{this.cdgroup=by.readUTF();this.cdtime=by.readInt();	}	}	export class s_CD_remove extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_CD_remove;		}		//required>string		public cdgroup:string;//cd组		public init(_cdgroup:string):s_CD_remove{			this.cdgroup=_cdgroup;			return this;		}public encode(by:egret.ByteArray):void{by.writeUTF(this.cdgroup);	}public decode(by:egret.ByteArray ):void{this.cdgroup=by.readUTF();	}	}	export class c_item_use extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_item_use;		}		//required>byte		public pos:number=0;//物品在背包的所在格子		//required>string		public guid:string;//物品全局ID		//optional>string		public targetguid:string;//目标物品全局ID		//required>int		public uid:number=0;//目标单位的ID		//optional>Pos		public point:Pos;//目标位置		//required>byte		public count:number=0;//使用数量		public init(_pos:number,_guid:string,_targetguid:string,_uid:number,_point:Pos,_count:number):c_item_use{			this.pos=_pos;			this.guid=_guid;			this.targetguid=_targetguid;			this.uid=_uid;			this.point=_point;			this.count=_count;			return this;		}public encode(by:egret.ByteArray):void{by.writeByte(this.pos);by.writeUTF(this.guid);if (this.targetguid!= null){by.writeByte(1);by.writeUTF(this.targetguid);}else{	by.writeByte(0);}by.writeInt(this.uid);if (this.point!= null){by.writeByte(1);this.point.encode(by);}else{	by.writeByte(0);}by.writeByte(this.count);	}public decode(by:egret.ByteArray ):void{this.pos=by.readUnsignedByte();this.guid=by.readUTF();if (by.readByte() > 0) {this.targetguid=by.readUTF();}this.uid=by.readInt();if (by.readByte() > 0) {this.point=new Pos();this.point.decode(by);}this.count=by.readUnsignedByte();	}	}	export class c_item_move extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_item_move;		}		//required>string		public sourceloc:string;//物品开始容器		//required>byte		public sourcepos:number=0;//物品开始位置		//required>string		public desloc:string;//物品目标容器		//required>byte		public despos:number=0;//物品目标位置		public init(_sourceloc:string,_sourcepos:number,_desloc:string,_despos:number):c_item_move{			this.sourceloc=_sourceloc;			this.sourcepos=_sourcepos;			this.desloc=_desloc;			this.despos=_despos;			return this;		}public encode(by:egret.ByteArray):void{by.writeUTF(this.sourceloc);by.writeByte(this.sourcepos);by.writeUTF(this.desloc);by.writeByte(this.despos);	}public decode(by:egret.ByteArray ):void{this.sourceloc=by.readUTF();this.sourcepos=by.readUnsignedByte();this.desloc=by.readUTF();this.despos=by.readUnsignedByte();	}	}	export class c_item_sell extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_item_sell;		}		//required>byte		public pos:number=0;//物品在背包的所在格子		//required>string		public gid:string;//物品全局ID		//required>bool		public isbuy:boolean;//是否出售，1，出售，0，购回		public init(_pos:number,_gid:string,_isbuy:boolean):c_item_sell{			this.pos=_pos;			this.gid=_gid;			this.isbuy=_isbuy;			return this;		}public encode(by:egret.ByteArray):void{by.writeByte(this.pos);by.writeUTF(this.gid);by.writeBoolean(this.isbuy);	}public decode(by:egret.ByteArray ):void{this.pos=by.readUnsignedByte();this.gid=by.readUTF();this.isbuy=by.readBoolean();	}	}	export class c_item_stone extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_item_stone;		}		//required>byte		public pos:number=0;//物品在背包的所在格子		//required>string		public gid:string;//物品全局ID		public init(_pos:number,_gid:string):c_item_stone{			this.pos=_pos;			this.gid=_gid;			return this;		}public encode(by:egret.ByteArray):void{by.writeByte(this.pos);by.writeUTF(this.gid);	}public decode(by:egret.ByteArray ):void{this.pos=by.readUnsignedByte();this.gid=by.readUTF();	}	}	export class c_item_unstone extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_item_unstone;		}		//required>byte		public pos:number=0;//物品在背包的所在格子		//required>string		public gid:string;//物品全局ID		public init(_pos:number,_gid:string):c_item_unstone{			this.pos=_pos;			this.gid=_gid;			return this;		}public encode(by:egret.ByteArray):void{by.writeByte(this.pos);by.writeUTF(this.gid);	}public decode(by:egret.ByteArray ):void{this.pos=by.readUnsignedByte();this.gid=by.readUTF();	}	}	export class c_item_destroy extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_item_destroy;		}		//required>byte		public pos:number=0;//物品在背包的所在格子		//required>string		public gid:string;//物品全局ID		//required>byte		public flag:number=0;//1是销毁		public init(_pos:number,_gid:string,_flag:number):c_item_destroy{			this.pos=_pos;			this.gid=_gid;			this.flag=_flag;			return this;		}public encode(by:egret.ByteArray):void{by.writeByte(this.pos);by.writeUTF(this.gid);by.writeByte(this.flag);	}public decode(by:egret.ByteArray ):void{this.pos=by.readUnsignedByte();this.gid=by.readUTF();this.flag=by.readUnsignedByte();	}	}	export class s_item_add extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_item_add;		}		//required>s_ItemInfo		public item:s_ItemInfo;//物品		public init(_item:s_ItemInfo):s_item_add{			this.item=_item;			return this;		}public encode(by:egret.ByteArray):void{this.item.encode(by);	}public decode(by:egret.ByteArray ):void{this.item=new s_ItemInfo();this.item.decode(by);	}	}	export class s_item_remove extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_item_remove;		}		//required>string		public guid:string;//物品的guid		public init(_guid:string):s_item_remove{			this.guid=_guid;			return this;		}public encode(by:egret.ByteArray):void{by.writeUTF(this.guid);	}public decode(by:egret.ByteArray ):void{this.guid=by.readUTF();	}	}	export class s_item_setplace extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_item_setplace;		}		//required>string		public location:string;//所在容器		//required>byte		public place:number=0;//物品位置		//optional>string		public guid:string;//物品位置		public init(_location:string,_place:number,_guid:string):s_item_setplace{			this.location=_location;			this.place=_place;			this.guid=_guid;			return this;		}public encode(by:egret.ByteArray):void{by.writeUTF(this.location);by.writeByte(this.place);if (this.guid!= null){by.writeByte(1);by.writeUTF(this.guid);}else{	by.writeByte(0);}	}public decode(by:egret.ByteArray ):void{this.location=by.readUTF();this.place=by.readUnsignedByte();if (by.readByte() > 0) {this.guid=by.readUTF();}	}	}	export class s_ItemInfo extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_ItemInfo;		}		//required>string		public location:string;//物品所在位置		//required>byte		public place:number=0;//物品所在位置		//required>string		public guid:string;//物品唯一ID		//required>string		public templeID:string;//物品模版id		//required>byte		public flag:number=0;//标志位1		//required>int		public count:number=0;//物品数量		//optional>int		public lefttime:number=0;//可选，到期时间		//optional>ItemExtraInfo		public extra:ItemExtraInfo;//装备属性		//optional>int		public sellPrice:number=0;//出售价格，金币		public init(_location:string,_place:number,_guid:string,_templeID:string,_flag:number,_count:number,_lefttime:number,_extra:ItemExtraInfo,_sellPrice:number):s_ItemInfo{			this.location=_location;			this.place=_place;			this.guid=_guid;			this.templeID=_templeID;			this.flag=_flag;			this.count=_count;			this.lefttime=_lefttime;			this.extra=_extra;			this.sellPrice=_sellPrice;			return this;		}public encode(by:egret.ByteArray):void{by.writeUTF(this.location);by.writeByte(this.place);by.writeUTF(this.guid);by.writeUTF(this.templeID);by.writeByte(this.flag);by.writeInt(this.count);//基础类型不建议用optionalby.writeByte(1);by.writeInt(this.lefttime);if (this.extra!= null){by.writeByte(1);this.extra.encode(by);}else{	by.writeByte(0);}//基础类型不建议用optionalby.writeByte(1);by.writeInt(this.sellPrice);	}public decode(by:egret.ByteArray ):void{this.location=by.readUTF();this.place=by.readUnsignedByte();this.guid=by.readUTF();this.templeID=by.readUTF();this.flag=by.readUnsignedByte();this.count=by.readInt();if (by.readByte() > 0) {this.lefttime=by.readInt();}if (by.readByte() > 0) {this.extra=new ItemExtraInfo();this.extra.decode(by);}if (by.readByte() > 0) {this.sellPrice=by.readInt();}	}	}	export class ItemExtraInfo extends proto.Pro{		public constructor(){			super();			this.S=MessageType.ItemExtraInfo;		}		//required>int		public dur:number=0;//当前耐久		//required>int		public maxdur:number=0;//最大耐久		//repeated>s_Prefix		public prefix:s_Prefix[] ;//前缀魔法		//optional>string		public postfix:string;//后缀魔法		//required>byte		public rank:number=0;//军衔等级		//required>byte		public improve:number=0;//强化等级		//required>byte		public maxImprove:number=0;//最大强化等级		//repeated>string		public holes:string[] ;//镶嵌信息		//required>int		public improvegold:number=0;//强化需要金币		//required>int		public improvemoney:number=0;//确保强化成功需要元宝		//required>int		public maximprovegold:number=0;//强化上限需要金币		public init(_dur:number,_maxdur:number,_prefix:s_Prefix[],_postfix:string,_rank:number,_improve:number,_maxImprove:number,_holes:string[],_improvegold:number,_improvemoney:number,_maximprovegold:number):ItemExtraInfo{			this.dur=_dur;			this.maxdur=_maxdur;			this.prefix=_prefix;			this.postfix=_postfix;			this.rank=_rank;			this.improve=_improve;			this.maxImprove=_maxImprove;			this.holes=_holes;			this.improvegold=_improvegold;			this.improvemoney=_improvemoney;			this.maximprovegold=_maximprovegold;			return this;		}public encode(by:egret.ByteArray):void{by.writeInt(this.dur);by.writeInt(this.maxdur);if (this.prefix != null){by.writeShort(this.prefix.length);for (var i:number = 0; i < this.prefix.length; i++) {			this.prefix[i].encode(by);}}else{by.writeShort(0);}if (this.postfix!= null){by.writeByte(1);by.writeUTF(this.postfix);}else{	by.writeByte(0);}by.writeByte(this.rank);by.writeByte(this.improve);by.writeByte(this.maxImprove);if (this.holes != null){by.writeShort(this.holes.length);for (var i:number = 0; i < this.holes.length; i++) {by.writeUTF(this.holes[i]);}}else{by.writeShort(0);}by.writeInt(this.improvegold);by.writeInt(this.improvemoney);by.writeInt(this.maximprovegold);	}public decode(by:egret.ByteArray ):void{this.dur=by.readInt();this.maxdur=by.readInt();var __count2:number = by.readShort();		this.prefix = [];for (var i:number = 0; i < __count2; i++) {			this.prefix[i] = new s_Prefix();			this.prefix[i].decode(by);}if (by.readByte() > 0) {this.postfix=by.readUTF();}this.rank=by.readUnsignedByte();this.improve=by.readUnsignedByte();this.maxImprove=by.readUnsignedByte();var __count7:number = by.readShort();		this.holes = [];for (var i:number = 0; i < __count7; i++) {this.holes[i]=by.readUTF();}this.improvegold=by.readInt();this.improvemoney=by.readInt();this.maximprovegold=by.readInt();	}	}	export class c_item_improve extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_item_improve;		}		//required>string		public location:string;//所在容器		//required>byte		public pos:number=0;//物品在容器的所在格子		//required>string		public guid:string;//物品全局ID		//required>bool		public usemoney:boolean;//是否使用元宝，默认是false		public init(_location:string,_pos:number,_guid:string,_usemoney:boolean):c_item_improve{			this.location=_location;			this.pos=_pos;			this.guid=_guid;			this.usemoney=_usemoney;			return this;		}public encode(by:egret.ByteArray):void{by.writeUTF(this.location);by.writeByte(this.pos);by.writeUTF(this.guid);by.writeBoolean(this.usemoney);	}public decode(by:egret.ByteArray ):void{this.location=by.readUTF();this.pos=by.readUnsignedByte();this.guid=by.readUTF();this.usemoney=by.readBoolean();	}	}	export class c_item_maxImprove extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_item_maxImprove;		}		//required>string		public location:string;//所在容器		//required>byte		public pos:number=0;//物品在容器的所在格子		//required>string		public guid:string;//物品全局ID		public init(_location:string,_pos:number,_guid:string):c_item_maxImprove{			this.location=_location;			this.pos=_pos;			this.guid=_guid;			return this;		}public encode(by:egret.ByteArray):void{by.writeUTF(this.location);by.writeByte(this.pos);by.writeUTF(this.guid);	}public decode(by:egret.ByteArray ):void{this.location=by.readUTF();this.pos=by.readUnsignedByte();this.guid=by.readUTF();	}	}	export class s_item_setAttr extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_item_setAttr;		}		//required>string		public guid:string;//物品唯一ID		//required>string		public key:string;//物品属性		//required>int		public value:number=0;//物品属性值		public init(_guid:string,_key:string,_value:number):s_item_setAttr{			this.guid=_guid;			this.key=_key;			this.value=_value;			return this;		}public encode(by:egret.ByteArray):void{by.writeUTF(this.guid);by.writeUTF(this.key);by.writeInt(this.value);	}public decode(by:egret.ByteArray ):void{this.guid=by.readUTF();this.key=by.readUTF();this.value=by.readInt();	}	}	export class s_item_update extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_item_update;		}		//required>s_ItemInfo		public item:s_ItemInfo;//物品		public init(_item:s_ItemInfo):s_item_update{			this.item=_item;			return this;		}public encode(by:egret.ByteArray):void{this.item.encode(by);	}public decode(by:egret.ByteArray ):void{this.item=new s_ItemInfo();this.item.decode(by);	}	}	export class c_unEquip extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_unEquip;		}		//required>byte		public pos:number=0;//物品的装备部位		public init(_pos:number):c_unEquip{			this.pos=_pos;			return this;		}public encode(by:egret.ByteArray):void{by.writeByte(this.pos);	}public decode(by:egret.ByteArray ):void{this.pos=by.readUnsignedByte();	}	}	export class s_Prefix extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_Prefix;		}		//required>string		public preID:string;//前缀ID		//required>short		public value:number=0;//undefined		public init(_preID:string,_value:number):s_Prefix{			this.preID=_preID;			this.value=_value;			return this;		}public encode(by:egret.ByteArray):void{by.writeUTF(this.preID);by.writeShort(this.value);	}public decode(by:egret.ByteArray ):void{this.preID=by.readUTF();this.value=by.readShort();	}	}	export class c_item_sort extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_item_sort;		}		public init():c_item_sort{			return this;		}public encode(by:egret.ByteArray):void{	}public decode(by:egret.ByteArray ):void{	}	}	export class s_item_sort extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_item_sort;		}		public init():s_item_sort{			return this;		}public encode(by:egret.ByteArray):void{	}public decode(by:egret.ByteArray ):void{	}	}	export class c_item_upgrade extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_item_upgrade;		}		//required>byte		public place:number=0;//物品装备部位		//required>string		public guid:string;//物品位置		public init(_place:number,_guid:string):c_item_upgrade{			this.place=_place;			this.guid=_guid;			return this;		}public encode(by:egret.ByteArray):void{by.writeByte(this.place);by.writeUTF(this.guid);	}public decode(by:egret.ByteArray ):void{this.place=by.readUnsignedByte();this.guid=by.readUTF();	}	}	export class s_item_upgrade extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_item_upgrade;		}		//required>string		public location:string;//所在容器		//required>byte		public place:number=0;//物品位置		//required>string		public guid:string;//物品位置		//required>string		public templeID:string;//新的模板ID		public init(_location:string,_place:number,_guid:string,_templeID:string):s_item_upgrade{			this.location=_location;			this.place=_place;			this.guid=_guid;			this.templeID=_templeID;			return this;		}public encode(by:egret.ByteArray):void{by.writeUTF(this.location);by.writeByte(this.place);by.writeUTF(this.guid);by.writeUTF(this.templeID);	}public decode(by:egret.ByteArray ):void{this.location=by.readUTF();this.place=by.readUnsignedByte();this.guid=by.readUTF();this.templeID=by.readUTF();	}	}	export class c_item_moveImprove extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_item_moveImprove;		}		//required>string		public location:string;//物品所在容器，转移后消失		//required>byte		public pos:number=0;//物品在容器的位置		//required>string		public guid:string;//物品全局ID		//required>string		public tarlocation:string;//目标物品所在容器		//required>byte		public tarpos:number=0;//目标物品在容器的位置		//required>string		public targuid:string;//目标物品全局ID		public init(_location:string,_pos:number,_guid:string,_tarlocation:string,_tarpos:number,_targuid:string):c_item_moveImprove{			this.location=_location;			this.pos=_pos;			this.guid=_guid;			this.tarlocation=_tarlocation;			this.tarpos=_tarpos;			this.targuid=_targuid;			return this;		}public encode(by:egret.ByteArray):void{by.writeUTF(this.location);by.writeByte(this.pos);by.writeUTF(this.guid);by.writeUTF(this.tarlocation);by.writeByte(this.tarpos);by.writeUTF(this.targuid);	}public decode(by:egret.ByteArray ):void{this.location=by.readUTF();this.pos=by.readUnsignedByte();this.guid=by.readUTF();this.tarlocation=by.readUTF();this.tarpos=by.readUnsignedByte();this.targuid=by.readUTF();	}	}	export class s_item_Confirm extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_item_Confirm;		}		//required>byte		public type:number=0;//0.强化，1，强化上限，2，强化转移		//required>byte		public status:number=0;//0失败，1成功		public init(_type:number,_status:number):s_item_Confirm{			this.type=_type;			this.status=_status;			return this;		}public encode(by:egret.ByteArray):void{by.writeByte(this.type);by.writeByte(this.status);	}public decode(by:egret.ByteArray ):void{this.type=by.readUnsignedByte();this.status=by.readUnsignedByte();	}	}	export class c_item_split extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_item_split;		}		//required>byte		public place:number=0;//物品在背包的位置		//required>string		public guid:string;//物品guid		//required>short		public count:number=0;//拆出的数量		public init(_place:number,_guid:string,_count:number):c_item_split{			this.place=_place;			this.guid=_guid;			this.count=_count;			return this;		}public encode(by:egret.ByteArray):void{by.writeByte(this.place);by.writeUTF(this.guid);by.writeShort(this.count);	}public decode(by:egret.ByteArray ):void{this.place=by.readUnsignedByte();this.guid=by.readUTF();this.count=by.readShort();	}	}	export class c_xilian extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_xilian;		}		//required>string		public loc:string;//物品目标容器		//required>byte		public pos:number=0;//物品在背包的所在格子		//required>string		public guid:string;//物品全局ID		//repeated>byte		public suoding:number[] ;//0是没有锁定		public init(_loc:string,_pos:number,_guid:string,_suoding:number[]):c_xilian{			this.loc=_loc;			this.pos=_pos;			this.guid=_guid;			this.suoding=_suoding;			return this;		}public encode(by:egret.ByteArray):void{by.writeUTF(this.loc);by.writeByte(this.pos);by.writeUTF(this.guid);if (this.suoding != null){by.writeShort(this.suoding.length);for (var i:number = 0; i < this.suoding.length; i++) {by.writeByte(this.suoding[i]);}}else{by.writeShort(0);}	}public decode(by:egret.ByteArray ):void{this.loc=by.readUTF();this.pos=by.readUnsignedByte();this.guid=by.readUTF();var __count4:number = by.readShort();		this.suoding = [];for (var i:number = 0; i < __count4; i++) {this.suoding[i]=by.readUnsignedByte();}	}	}	export class s_xilian extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_xilian;		}		//required>string		public loc:string;//物品目标容器		//required>byte		public pos:number=0;//物品在背包的所在格子		//required>string		public guid:string;//物品全局ID		//repeated>s_Prefix		public prefix:s_Prefix[] ;//前缀魔法		public init(_loc:string,_pos:number,_guid:string,_prefix:s_Prefix[]):s_xilian{			this.loc=_loc;			this.pos=_pos;			this.guid=_guid;			this.prefix=_prefix;			return this;		}public encode(by:egret.ByteArray):void{by.writeUTF(this.loc);by.writeByte(this.pos);by.writeUTF(this.guid);if (this.prefix != null){by.writeShort(this.prefix.length);for (var i:number = 0; i < this.prefix.length; i++) {			this.prefix[i].encode(by);}}else{by.writeShort(0);}	}public decode(by:egret.ByteArray ):void{this.loc=by.readUTF();this.pos=by.readUnsignedByte();this.guid=by.readUTF();var __count3:number = by.readShort();		this.prefix = [];for (var i:number = 0; i < __count3; i++) {			this.prefix[i] = new s_Prefix();			this.prefix[i].decode(by);}	}	}	export class c_item_zhufu extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_item_zhufu;		}		//required>byte		public pos:number=0;//物品在背包的所在格子		//required>string		public guid:string;//物品的GUID		public init(_pos:number,_guid:string):c_item_zhufu{			this.pos=_pos;			this.guid=_guid;			return this;		}public encode(by:egret.ByteArray):void{by.writeByte(this.pos);by.writeUTF(this.guid);	}public decode(by:egret.ByteArray ):void{this.pos=by.readUnsignedByte();this.guid=by.readUTF();	}	}	export class s_item_zhufu extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_item_zhufu;		}		//required>byte		public status:number=0;//0		//required>string		public guid:string;//武器的GUID		//required>byte		public newrank:number=0;//祝福后武器新的rank值		public init(_status:number,_guid:string,_newrank:number):s_item_zhufu{			this.status=_status;			this.guid=_guid;			this.newrank=_newrank;			return this;		}public encode(by:egret.ByteArray):void{by.writeByte(this.status);by.writeUTF(this.guid);by.writeByte(this.newrank);	}public decode(by:egret.ByteArray ):void{this.status=by.readUnsignedByte();this.guid=by.readUTF();this.newrank=by.readUnsignedByte();	}	}	export class c_extendgrid extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_extendgrid;		}		//required>byte		public count:number=0;//扩展的格子数量		public init(_count:number):c_extendgrid{			this.count=_count;			return this;		}public encode(by:egret.ByteArray):void{by.writeByte(this.count);	}public decode(by:egret.ByteArray ):void{this.count=by.readUnsignedByte();	}	}	export class c_group_apply extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_group_apply;		}		//required>string		public tar:string;//目标name		public init(_tar:string):c_group_apply{			this.tar=_tar;			return this;		}public encode(by:egret.ByteArray):void{by.writeUTF(this.tar);	}public decode(by:egret.ByteArray ):void{this.tar=by.readUTF();	}	}	export class c_group_leave extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_group_leave;		}		public init():c_group_leave{			return this;		}public encode(by:egret.ByteArray):void{	}public decode(by:egret.ByteArray ):void{	}	}	export class s_GroupInfo extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_GroupInfo;		}		//required>int		public uid:number=0;//成员ID		//required>string		public name:string;//成员名		//required>byte		public sex:number=0;//成员性别		//required>byte		public vip:number=0;//是不是vip		//required>byte		public head:number=0;//成员头像		//required>byte		public lev:number=0;//成员等级		//required>byte		public job:number=0;//成员职业		//required>byte		public isLeader:number=0;//是否是队长		//required>byte		public playstatus:number=0;//游戏状态		//required>int		public mapid:number=0;//地图ID		//required>int		public MHP:number=0;//undefined		//required>int		public HP:number=0;//undefined		//required>int		public MMP:number=0;//undefined		//required>int		public MP:number=0;//undefined		public init(_uid:number,_name:string,_sex:number,_vip:number,_head:number,_lev:number,_job:number,_isLeader:number,_playstatus:number,_mapid:number,_MHP:number,_HP:number,_MMP:number,_MP:number):s_GroupInfo{			this.uid=_uid;			this.name=_name;			this.sex=_sex;			this.vip=_vip;			this.head=_head;			this.lev=_lev;			this.job=_job;			this.isLeader=_isLeader;			this.playstatus=_playstatus;			this.mapid=_mapid;			this.MHP=_MHP;			this.HP=_HP;			this.MMP=_MMP;			this.MP=_MP;			return this;		}public encode(by:egret.ByteArray):void{by.writeInt(this.uid);by.writeUTF(this.name);by.writeByte(this.sex);by.writeByte(this.vip);by.writeByte(this.head);by.writeByte(this.lev);by.writeByte(this.job);by.writeByte(this.isLeader);by.writeByte(this.playstatus);by.writeInt(this.mapid);by.writeInt(this.MHP);by.writeInt(this.HP);by.writeInt(this.MMP);by.writeInt(this.MP);	}public decode(by:egret.ByteArray ):void{this.uid=by.readInt();this.name=by.readUTF();this.sex=by.readUnsignedByte();this.vip=by.readUnsignedByte();this.head=by.readUnsignedByte();this.lev=by.readUnsignedByte();this.job=by.readUnsignedByte();this.isLeader=by.readUnsignedByte();this.playstatus=by.readUnsignedByte();this.mapid=by.readInt();this.MHP=by.readInt();this.HP=by.readInt();this.MMP=by.readInt();this.MP=by.readInt();	}	}	export class s_Group_addMember extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_Group_addMember;		}		//required>s_GroupInfo		public info:s_GroupInfo;//undefined		public init(_info:s_GroupInfo):s_Group_addMember{			this.info=_info;			return this;		}public encode(by:egret.ByteArray):void{this.info.encode(by);	}public decode(by:egret.ByteArray ):void{this.info=new s_GroupInfo();this.info.decode(by);	}	}	export class s_Group_removeMember extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_Group_removeMember;		}		//required>int		public guid:number=0;//成员ID		public init(_guid:number):s_Group_removeMember{			this.guid=_guid;			return this;		}public encode(by:egret.ByteArray):void{by.writeInt(this.guid);	}public decode(by:egret.ByteArray ):void{this.guid=by.readInt();	}	}	export class s_Group_Disband extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_Group_Disband;		}		public init():s_Group_Disband{			return this;		}public encode(by:egret.ByteArray):void{	}public decode(by:egret.ByteArray ):void{	}	}	export class s_GroupUpdateLeader extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_GroupUpdateLeader;		}		//required>int		public uid:number=0;//成员ID		public init(_uid:number):s_GroupUpdateLeader{			this.uid=_uid;			return this;		}public encode(by:egret.ByteArray):void{by.writeInt(this.uid);	}public decode(by:egret.ByteArray ):void{this.uid=by.readInt();	}	}	export class s_groupInvite extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_groupInvite;		}		//required>int		public requestid:number=0;//请求的ID		//required>string		public name:string;//目标的名字		public init(_requestid:number,_name:string):s_groupInvite{			this.requestid=_requestid;			this.name=_name;			return this;		}public encode(by:egret.ByteArray):void{by.writeInt(this.requestid);by.writeUTF(this.name);	}public decode(by:egret.ByteArray ):void{this.requestid=by.readInt();this.name=by.readUTF();	}	}	export class c_group_accept extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_group_accept;		}		//required>int		public requestid:number=0;//请求的ID		public init(_requestid:number):c_group_accept{			this.requestid=_requestid;			return this;		}public encode(by:egret.ByteArray):void{by.writeInt(this.requestid);	}public decode(by:egret.ByteArray ):void{this.requestid=by.readInt();	}	}	export class c_group_refuse extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_group_refuse;		}		//required>int		public requestid:number=0;//请求的ID		public init(_requestid:number):c_group_refuse{			this.requestid=_requestid;			return this;		}public encode(by:egret.ByteArray):void{by.writeInt(this.requestid);	}public decode(by:egret.ByteArray ):void{this.requestid=by.readInt();	}	}	export class s_group_leave extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_group_leave;		}		//required>int		public uid:number=0;//退出的成员ID		public init(_uid:number):s_group_leave{			this.uid=_uid;			return this;		}public encode(by:egret.ByteArray):void{by.writeInt(this.uid);	}public decode(by:egret.ByteArray ):void{this.uid=by.readInt();	}	}	export class c_group_appoint extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_group_appoint;		}		//required>int		public uid:number=0;//成员ID		public init(_uid:number):c_group_appoint{			this.uid=_uid;			return this;		}public encode(by:egret.ByteArray):void{by.writeInt(this.uid);	}public decode(by:egret.ByteArray ):void{this.uid=by.readInt();	}	}	export class c_group_kick extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_group_kick;		}		//required>int		public uid:number=0;//成员ID		public init(_uid:number):c_group_kick{			this.uid=_uid;			return this;		}public encode(by:egret.ByteArray):void{by.writeInt(this.uid);	}public decode(by:egret.ByteArray ):void{this.uid=by.readInt();	}	}	export class s_Task_triger extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_Task_triger;		}		//required>string		public taskid:string;//任务ID		public init(_taskid:string):s_Task_triger{			this.taskid=_taskid;			return this;		}public encode(by:egret.ByteArray):void{by.writeUTF(this.taskid);	}public decode(by:egret.ByteArray ):void{this.taskid=by.readUTF();	}	}	export class s_TaskInfo extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_TaskInfo;		}		//required>string		public taskid:string;//任务ID		//required>byte		public state:number=0;//任务的状态		//repeated>int		public currentcount:number[] ;//任务的目标完成情况		//required>int		public leftsecond:number=0;//任务剩余时间，以秒计数，只针对有时间限制的任务		public init(_taskid:string,_state:number,_currentcount:number[],_leftsecond:number):s_TaskInfo{			this.taskid=_taskid;			this.state=_state;			this.currentcount=_currentcount;			this.leftsecond=_leftsecond;			return this;		}public encode(by:egret.ByteArray):void{by.writeUTF(this.taskid);by.writeByte(this.state);if (this.currentcount != null){by.writeShort(this.currentcount.length);for (var i:number = 0; i < this.currentcount.length; i++) {by.writeInt(this.currentcount[i]);}}else{by.writeShort(0);}by.writeInt(this.leftsecond);	}public decode(by:egret.ByteArray ):void{this.taskid=by.readUTF();this.state=by.readUnsignedByte();var __count2:number = by.readShort();		this.currentcount = [];for (var i:number = 0; i < __count2; i++) {this.currentcount[i]=by.readInt();}this.leftsecond=by.readInt();	}	}	export class s_TaskActive extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_TaskActive;		}		//repeated>string		public taskids:string[] ;//激活任务ID列表		public init(_taskids:string[]):s_TaskActive{			this.taskids=_taskids;			return this;		}public encode(by:egret.ByteArray):void{if (this.taskids != null){by.writeShort(this.taskids.length);for (var i:number = 0; i < this.taskids.length; i++) {by.writeUTF(this.taskids[i]);}}else{by.writeShort(0);}	}public decode(by:egret.ByteArray ):void{var __count0:number = by.readShort();		this.taskids = [];for (var i:number = 0; i < __count0; i++) {this.taskids[i]=by.readUTF();}	}	}	export class s_TaskInActive extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_TaskInActive;		}		//repeated>string		public taskids:string[] ;//失活任务ID列表		public init(_taskids:string[]):s_TaskInActive{			this.taskids=_taskids;			return this;		}public encode(by:egret.ByteArray):void{if (this.taskids != null){by.writeShort(this.taskids.length);for (var i:number = 0; i < this.taskids.length; i++) {by.writeUTF(this.taskids[i]);}}else{by.writeShort(0);}	}public decode(by:egret.ByteArray ):void{var __count0:number = by.readShort();		this.taskids = [];for (var i:number = 0; i < __count0; i++) {this.taskids[i]=by.readUTF();}	}	}	export class s_TaskRemove extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_TaskRemove;		}		//required>string		public taskid:string;//任务ID		public init(_taskid:string):s_TaskRemove{			this.taskid=_taskid;			return this;		}public encode(by:egret.ByteArray):void{by.writeUTF(this.taskid);	}public decode(by:egret.ByteArray ):void{this.taskid=by.readUTF();	}	}	export class c_Task_accept extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_Task_accept;		}		//required>string		public taskid:string;//任务ID		public init(_taskid:string):c_Task_accept{			this.taskid=_taskid;			return this;		}public encode(by:egret.ByteArray):void{by.writeUTF(this.taskid);	}public decode(by:egret.ByteArray ):void{this.taskid=by.readUTF();	}	}	export class c_Task_giveup extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_Task_giveup;		}		//required>string		public taskid:string;//任务ID		public init(_taskid:string):c_Task_giveup{			this.taskid=_taskid;			return this;		}public encode(by:egret.ByteArray):void{by.writeUTF(this.taskid);	}public decode(by:egret.ByteArray ):void{this.taskid=by.readUTF();	}	}	export class c_Task_getBonus extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_Task_getBonus;		}		//required>string		public taskid:string;//任务ID		public init(_taskid:string):c_Task_getBonus{			this.taskid=_taskid;			return this;		}public encode(by:egret.ByteArray):void{by.writeUTF(this.taskid);	}public decode(by:egret.ByteArray ):void{this.taskid=by.readUTF();	}	}	export class s_Task_dayInfo extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_Task_dayInfo;		}		//required>string		public taskid:string;//每日任务ID		//required>byte		public daytasktimes:number=0;//每日任务完成次数		//required>byte		public daytaskStar:number=0;//任务星级		//required>byte		public totaltimes:number=0;//每日任务最大次shu		//required>byte		public finishtimes:number=0;//每日任务完成次数		public init(_taskid:string,_daytasktimes:number,_daytaskStar:number,_totaltimes:number,_finishtimes:number):s_Task_dayInfo{			this.taskid=_taskid;			this.daytasktimes=_daytasktimes;			this.daytaskStar=_daytaskStar;			this.totaltimes=_totaltimes;			this.finishtimes=_finishtimes;			return this;		}public encode(by:egret.ByteArray):void{by.writeUTF(this.taskid);by.writeByte(this.daytasktimes);by.writeByte(this.daytaskStar);by.writeByte(this.totaltimes);by.writeByte(this.finishtimes);	}public decode(by:egret.ByteArray ):void{this.taskid=by.readUTF();this.daytasktimes=by.readUnsignedByte();this.daytaskStar=by.readUnsignedByte();this.totaltimes=by.readUnsignedByte();this.finishtimes=by.readUnsignedByte();	}	}	export class c_Task_DayUp extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_Task_DayUp;		}		//required>int		public type:number=0;//0，表示任务，1		public init(_type:number):c_Task_DayUp{			this.type=_type;			return this;		}public encode(by:egret.ByteArray):void{by.writeInt(this.type);	}public decode(by:egret.ByteArray ):void{this.type=by.readInt();	}	}	export class s_CharInfo extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_CharInfo;		}		//required>string		public name:string;//名字		//required>int		public uid:number=0;//流水号		public init(_name:string,_uid:number):s_CharInfo{			this.name=_name;			this.uid=_uid;			return this;		}public encode(by:egret.ByteArray):void{by.writeUTF(this.name);by.writeInt(this.uid);	}public decode(by:egret.ByteArray ):void{this.name=by.readUTF();this.uid=by.readInt();	}	}	export class s_Player_EndInit extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_Player_EndInit;		}		public init():s_Player_EndInit{			return this;		}public encode(by:egret.ByteArray):void{	}public decode(by:egret.ByteArray ):void{	}	}	export class s_CharInfoList extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_CharInfoList;		}		//required>string		public charlist:string;//角色列表		public init(_charlist:string):s_CharInfoList{			this.charlist=_charlist;			return this;		}public encode(by:egret.ByteArray):void{by.writeUTF(this.charlist);	}public decode(by:egret.ByteArray ):void{this.charlist=by.readUTF();	}	}	export class c_enterGame extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_enterGame;		}		//required>string		public name:string;//名字		public init(_name:string):c_enterGame{			this.name=_name;			return this;		}public encode(by:egret.ByteArray):void{by.writeUTF(this.name);	}public decode(by:egret.ByteArray ):void{this.name=by.readUTF();	}	}	export class s_UIshow extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_UIshow;		}		//required>string		public uiID:string;//ui的ID		public init(_uiID:string):s_UIshow{			this.uiID=_uiID;			return this;		}public encode(by:egret.ByteArray):void{by.writeUTF(this.uiID);	}public decode(by:egret.ByteArray ):void{this.uiID=by.readUTF();	}	}	export class s_UIhide extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_UIhide;		}		//required>string		public uiID:string;//ui的ID		public init(_uiID:string):s_UIhide{			this.uiID=_uiID;			return this;		}public encode(by:egret.ByteArray):void{by.writeUTF(this.uiID);	}public decode(by:egret.ByteArray ):void{this.uiID=by.readUTF();	}	}	export class c_UIClick extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_UIClick;		}		//required>string		public uiID:string;//ui的ID		//required>string		public buttonID:string;//面板上的按钮ID		public init(_uiID:string,_buttonID:string):c_UIClick{			this.uiID=_uiID;			this.buttonID=_buttonID;			return this;		}public encode(by:egret.ByteArray):void{by.writeUTF(this.uiID);by.writeUTF(this.buttonID);	}public decode(by:egret.ByteArray ):void{this.uiID=by.readUTF();this.buttonID=by.readUTF();	}	}	export class s_TimerAdd extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_TimerAdd;		}		//required>string		public TimerTiltle:string;//倒计时的文字		//required>int		public second:number=0;//秒数		public init(_TimerTiltle:string,_second:number):s_TimerAdd{			this.TimerTiltle=_TimerTiltle;			this.second=_second;			return this;		}public encode(by:egret.ByteArray):void{by.writeUTF(this.TimerTiltle);by.writeInt(this.second);	}public decode(by:egret.ByteArray ):void{this.TimerTiltle=by.readUTF();this.second=by.readInt();	}	}	export class s_TimerRemove extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_TimerRemove;		}		public init():s_TimerRemove{			return this;		}public encode(by:egret.ByteArray):void{	}public decode(by:egret.ByteArray ):void{	}	}	export class c_addPoint extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_addPoint;		}		//required>byte		public attrid:number=0;//要加的属性ID，可查看PAttr枚举		public init(_attrid:number):c_addPoint{			this.attrid=_attrid;			return this;		}public encode(by:egret.ByteArray):void{by.writeByte(this.attrid);	}public decode(by:egret.ByteArray ):void{this.attrid=by.readUnsignedByte();	}	}	export class s_Buff_add extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_Buff_add;		}		//required>int		public uid:number=0;//目标单位的ID		//required>string		public bufid:string;//bufid		public init(_uid:number,_bufid:string):s_Buff_add{			this.uid=_uid;			this.bufid=_bufid;			return this;		}public encode(by:egret.ByteArray):void{by.writeInt(this.uid);by.writeUTF(this.bufid);	}public decode(by:egret.ByteArray ):void{this.uid=by.readInt();this.bufid=by.readUTF();	}	}	export class s_Buff_remove extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_Buff_remove;		}		//required>int		public uid:number=0;//目标单位的ID		//required>string		public bufid:string;//bufid		public init(_uid:number,_bufid:string):s_Buff_remove{			this.uid=_uid;			this.bufid=_bufid;			return this;		}public encode(by:egret.ByteArray):void{by.writeInt(this.uid);by.writeUTF(this.bufid);	}public decode(by:egret.ByteArray ):void{this.uid=by.readInt();this.bufid=by.readUTF();	}	}	export class s_Buff_clear extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_Buff_clear;		}		//required>int		public uid:number=0;//目标单位的ID		public init(_uid:number):s_Buff_clear{			this.uid=_uid;			return this;		}public encode(by:egret.ByteArray):void{by.writeInt(this.uid);	}public decode(by:egret.ByteArray ):void{this.uid=by.readInt();	}	}	export class c_mix extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_mix;		}		//required>string		public mixid:string;//所合成的物品的ID		public init(_mixid:string):c_mix{			this.mixid=_mixid;			return this;		}public encode(by:egret.ByteArray):void{by.writeUTF(this.mixid);	}public decode(by:egret.ByteArray ):void{this.mixid=by.readUTF();	}	}	export class s_mix extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_mix;		}		//required>byte		public state:number=0;//1表示成功，0表示失败		//required>string		public mixid:string;//所合成的物品的ID		public init(_state:number,_mixid:string):s_mix{			this.state=_state;			this.mixid=_mixid;			return this;		}public encode(by:egret.ByteArray):void{by.writeByte(this.state);by.writeUTF(this.mixid);	}public decode(by:egret.ByteArray ):void{this.state=by.readUnsignedByte();this.mixid=by.readUTF();	}	}	export class c_market_up extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_market_up;		}		//required>byte		public pos:number=0;//在背包的所在格子		//required>string		public guid:string;//物品全局ID		//required>byte		public count:number=0;//出售数量		//required>byte		public days:number=0;//上架的天数		//required>int		public price:number=0;//物品出售定价		public init(_pos:number,_guid:string,_count:number,_days:number,_price:number):c_market_up{			this.pos=_pos;			this.guid=_guid;			this.count=_count;			this.days=_days;			this.price=_price;			return this;		}public encode(by:egret.ByteArray):void{by.writeByte(this.pos);by.writeUTF(this.guid);by.writeByte(this.count);by.writeByte(this.days);by.writeInt(this.price);	}public decode(by:egret.ByteArray ):void{this.pos=by.readUnsignedByte();this.guid=by.readUTF();this.count=by.readUnsignedByte();this.days=by.readUnsignedByte();this.price=by.readInt();	}	}	export class c_market_down extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_market_down;		}		//required>string		public marketid:string;//市场下架的寄售ID		public init(_marketid:string):c_market_down{			this.marketid=_marketid;			return this;		}public encode(by:egret.ByteArray):void{by.writeUTF(this.marketid);	}public decode(by:egret.ByteArray ):void{this.marketid=by.readUTF();	}	}	export class c_market_buy extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_market_buy;		}		//required>string		public marketid:string;//市场上架的寄售ID		public init(_marketid:string):c_market_buy{			this.marketid=_marketid;			return this;		}public encode(by:egret.ByteArray):void{by.writeUTF(this.marketid);	}public decode(by:egret.ByteArray ):void{this.marketid=by.readUTF();	}	}	export class s_market_up extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_market_up;		}		public init():s_market_up{			return this;		}public encode(by:egret.ByteArray):void{	}public decode(by:egret.ByteArray ):void{	}	}	export class s_market_down extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_market_down;		}		//required>string		public marketid:string;//市场下架的物品ID		public init(_marketid:string):s_market_down{			this.marketid=_marketid;			return this;		}public encode(by:egret.ByteArray):void{by.writeUTF(this.marketid);	}public decode(by:egret.ByteArray ):void{this.marketid=by.readUTF();	}	}	export class s_market_buy extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_market_buy;		}		//required>string		public marketid:string;//市场上架的物品ID		public init(_marketid:string):s_market_buy{			this.marketid=_marketid;			return this;		}public encode(by:egret.ByteArray):void{by.writeUTF(this.marketid);	}public decode(by:egret.ByteArray ):void{this.marketid=by.readUTF();	}	}	export class c_market_search extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_market_search;		}		//required>byte		public type:number=0;//物品类型		//required>byte		public job:number=0;//职业		//required>byte		public minlev:number=0;//最小等级		//required>byte		public maxlev:number=0;//最高等级		//required>byte		public quality:number=0;//pingzhi		//required>byte		public minrank:number=0;//最小强化等级		//required>byte		public maxrank:number=0;//最高强化等级		//required>byte		public equippos:number=0;//部位		//required>byte		public page:number=0;//第几页		//required>byte		public searchOption:number=0;//0按等级低，1，按等级高，2，按价格低，3价格高		//optional>string		public itemname:string;//物品名称		//optional>string		public salechar:string;//出售人名		public init(_type:number,_job:number,_minlev:number,_maxlev:number,_quality:number,_minrank:number,_maxrank:number,_equippos:number,_page:number,_searchOption:number,_itemname:string,_salechar:string):c_market_search{			this.type=_type;			this.job=_job;			this.minlev=_minlev;			this.maxlev=_maxlev;			this.quality=_quality;			this.minrank=_minrank;			this.maxrank=_maxrank;			this.equippos=_equippos;			this.page=_page;			this.searchOption=_searchOption;			this.itemname=_itemname;			this.salechar=_salechar;			return this;		}public encode(by:egret.ByteArray):void{by.writeByte(this.type);by.writeByte(this.job);by.writeByte(this.minlev);by.writeByte(this.maxlev);by.writeByte(this.quality);by.writeByte(this.minrank);by.writeByte(this.maxrank);by.writeByte(this.equippos);by.writeByte(this.page);by.writeByte(this.searchOption);if (this.itemname!= null){by.writeByte(1);by.writeUTF(this.itemname);}else{	by.writeByte(0);}if (this.salechar!= null){by.writeByte(1);by.writeUTF(this.salechar);}else{	by.writeByte(0);}	}public decode(by:egret.ByteArray ):void{this.type=by.readUnsignedByte();this.job=by.readUnsignedByte();this.minlev=by.readUnsignedByte();this.maxlev=by.readUnsignedByte();this.quality=by.readUnsignedByte();this.minrank=by.readUnsignedByte();this.maxrank=by.readUnsignedByte();this.equippos=by.readUnsignedByte();this.page=by.readUnsignedByte();this.searchOption=by.readUnsignedByte();if (by.readByte() > 0) {this.itemname=by.readUTF();}if (by.readByte() > 0) {this.salechar=by.readUTF();}	}	}	export class s_market_list extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_market_list;		}		//required>byte		public flag:number=0;//0表示自己		//required>byte		public count:number=0;//记录数量		//required>byte		public page:number=0;//curr记录		//required>byte		public totalpage:number=0;//zong数量		//repeated>s_market_item		public marketlist:s_market_item[] ;//物品信息		public init(_flag:number,_count:number,_page:number,_totalpage:number,_marketlist:s_market_item[]):s_market_list{			this.flag=_flag;			this.count=_count;			this.page=_page;			this.totalpage=_totalpage;			this.marketlist=_marketlist;			return this;		}public encode(by:egret.ByteArray):void{by.writeByte(this.flag);by.writeByte(this.count);by.writeByte(this.page);by.writeByte(this.totalpage);if (this.marketlist != null){by.writeShort(this.marketlist.length);for (var i:number = 0; i < this.marketlist.length; i++) {			this.marketlist[i].encode(by);}}else{by.writeShort(0);}	}public decode(by:egret.ByteArray ):void{this.flag=by.readUnsignedByte();this.count=by.readUnsignedByte();this.page=by.readUnsignedByte();this.totalpage=by.readUnsignedByte();var __count4:number = by.readShort();		this.marketlist = [];for (var i:number = 0; i < __count4; i++) {			this.marketlist[i] = new s_market_item();			this.marketlist[i].decode(by);}	}	}	export class c_market_getmoney extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_market_getmoney;		}		//required>string		public marketid:string;//市场上架的物品ID		public init(_marketid:string):c_market_getmoney{			this.marketid=_marketid;			return this;		}public encode(by:egret.ByteArray):void{by.writeUTF(this.marketid);	}public decode(by:egret.ByteArray ):void{this.marketid=by.readUTF();	}	}	export class c_market_my extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_market_my;		}		public init():c_market_my{			return this;		}public encode(by:egret.ByteArray):void{	}public decode(by:egret.ByteArray ):void{	}	}	export class s_market_item extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_market_item;		}		//required>string		public marketid:string;//市场下架的物品ID		//required>string		public saleName:string;//出售人名字		//required>int		public price:number=0;//价格		//required>int		public uptime:number=0;//上架时间		//required>s_ItemInfo		public item:s_ItemInfo;//undefined		//required>byte		public status:number=0;//0出售中		public init(_marketid:string,_saleName:string,_price:number,_uptime:number,_item:s_ItemInfo,_status:number):s_market_item{			this.marketid=_marketid;			this.saleName=_saleName;			this.price=_price;			this.uptime=_uptime;			this.item=_item;			this.status=_status;			return this;		}public encode(by:egret.ByteArray):void{by.writeUTF(this.marketid);by.writeUTF(this.saleName);by.writeInt(this.price);by.writeInt(this.uptime);this.item.encode(by);by.writeByte(this.status);	}public decode(by:egret.ByteArray ):void{this.marketid=by.readUTF();this.saleName=by.readUTF();this.price=by.readInt();this.uptime=by.readInt();this.item=new s_ItemInfo();this.item.decode(by);this.status=by.readUnsignedByte();	}	}	export class c_shop_buy extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_shop_buy;		}		//required>string		public shopid:string;//undefined		//required>string		public itemid:string;//undefined		//required>short		public count:number=0;//undefined		public init(_shopid:string,_itemid:string,_count:number):c_shop_buy{			this.shopid=_shopid;			this.itemid=_itemid;			this.count=_count;			return this;		}public encode(by:egret.ByteArray):void{by.writeUTF(this.shopid);by.writeUTF(this.itemid);by.writeShort(this.count);	}public decode(by:egret.ByteArray ):void{this.shopid=by.readUTF();this.itemid=by.readUTF();this.count=by.readShort();	}	}	export class c_shop_buyAndUse extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_shop_buyAndUse;		}		//required>string		public shopid:string;//undefined		//required>string		public itemid:string;//undefined		//required>short		public count:number=0;//undefined		public init(_shopid:string,_itemid:string,_count:number):c_shop_buyAndUse{			this.shopid=_shopid;			this.itemid=_itemid;			this.count=_count;			return this;		}public encode(by:egret.ByteArray):void{by.writeUTF(this.shopid);by.writeUTF(this.itemid);by.writeShort(this.count);	}public decode(by:egret.ByteArray ):void{this.shopid=by.readUTF();this.itemid=by.readUTF();this.count=by.readShort();	}	}	export class c_Vip_buy extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_Vip_buy;		}		//required>byte		public type:number=0;//取值1		public init(_type:number):c_Vip_buy{			this.type=_type;			return this;		}public encode(by:egret.ByteArray):void{by.writeByte(this.type);	}public decode(by:egret.ByteArray ):void{this.type=by.readUnsignedByte();	}	}	export class s_Vip_leftime extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_Vip_leftime;		}		//required>int		public lefttime:number=0;//剩余秒数		public init(_lefttime:number):s_Vip_leftime{			this.lefttime=_lefttime;			return this;		}public encode(by:egret.ByteArray):void{by.writeInt(this.lefttime);	}public decode(by:egret.ByteArray ):void{this.lefttime=by.readInt();	}	}	export class s_Vip_price extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_Vip_price;		}		//repeated>short		public Price:number[] ;//原价		//repeated>short		public curPrice:number[] ;//现价		public init(_Price:number[],_curPrice:number[]):s_Vip_price{			this.Price=_Price;			this.curPrice=_curPrice;			return this;		}public encode(by:egret.ByteArray):void{if (this.Price != null){by.writeShort(this.Price.length);for (var i:number = 0; i < this.Price.length; i++) {by.writeShort(this.Price[i]);}}else{by.writeShort(0);}if (this.curPrice != null){by.writeShort(this.curPrice.length);for (var i:number = 0; i < this.curPrice.length; i++) {by.writeShort(this.curPrice[i]);}}else{by.writeShort(0);}	}public decode(by:egret.ByteArray ):void{var __count0:number = by.readShort();		this.Price = [];for (var i:number = 0; i < __count0; i++) {this.Price[i]=by.readShort();}var __count1:number = by.readShort();		this.curPrice = [];for (var i:number = 0; i < __count1; i++) {this.curPrice[i]=by.readShort();}	}	}	export class s_broadcast extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_broadcast;		}		//required>byte		public pos:number=0;//广播位置		//required>string		public id:string;//广播消息ID		//repeated>string		public args:string[] ;//参数		public init(_pos:number,_id:string,_args:string[]):s_broadcast{			this.pos=_pos;			this.id=_id;			this.args=_args;			return this;		}public encode(by:egret.ByteArray):void{by.writeByte(this.pos);by.writeUTF(this.id);if (this.args != null){by.writeShort(this.args.length);for (var i:number = 0; i < this.args.length; i++) {by.writeUTF(this.args[i]);}}else{by.writeShort(0);}	}public decode(by:egret.ByteArray ):void{this.pos=by.readUnsignedByte();this.id=by.readUTF();var __count2:number = by.readShort();		this.args = [];for (var i:number = 0; i < __count2; i++) {this.args[i]=by.readUTF();}	}	}	export class c_npc extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_npc;		}		//required>int		public uid:number=0;//npc流水ID		//required>string		public templeid:string;//npc模版ID		//required>int		public funcid:number=0;//npc功能ID		//required>string		public args:string;//npc功能参数		public init(_uid:number,_templeid:string,_funcid:number,_args:string):c_npc{			this.uid=_uid;			this.templeid=_templeid;			this.funcid=_funcid;			this.args=_args;			return this;		}public encode(by:egret.ByteArray):void{by.writeInt(this.uid);by.writeUTF(this.templeid);by.writeInt(this.funcid);by.writeUTF(this.args);	}public decode(by:egret.ByteArray ):void{this.uid=by.readInt();this.templeid=by.readUTF();this.funcid=by.readInt();this.args=by.readUTF();	}	}	export class c_npc_transport extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_npc_transport;		}		//required>string		public moveid:string;//传送模版ID		public init(_moveid:string):c_npc_transport{			this.moveid=_moveid;			return this;		}public encode(by:egret.ByteArray):void{by.writeUTF(this.moveid);	}public decode(by:egret.ByteArray ):void{this.moveid=by.readUTF();	}	}	export class s_executeScript extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_executeScript;		}		//required>string		public code:string;//要执行的脚本		public init(_code:string):s_executeScript{			this.code=_code;			return this;		}public encode(by:egret.ByteArray):void{by.writeUTF(this.code);	}public decode(by:egret.ByteArray ):void{this.code=by.readUTF();	}	}	export class c_mapenter extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_mapenter;		}		//required>string		public mapid:string;//地图ID		public init(_mapid:string):c_mapenter{			this.mapid=_mapid;			return this;		}public encode(by:egret.ByteArray):void{by.writeUTF(this.mapid);	}public decode(by:egret.ByteArray ):void{this.mapid=by.readUTF();	}	}	export class c_mapexit extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_mapexit;		}		public init():c_mapexit{			return this;		}public encode(by:egret.ByteArray):void{	}public decode(by:egret.ByteArray ):void{	}	}	export class s_mapTimer extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_mapTimer;		}		//required>short		public second:number=0;//秒数		//required>byte		public monsterCount:number=0;//剩余怪数量		//required>byte		public totalmonster:number=0;//当前波怪数量		//required>byte		public wave:number=0;//当前波数		//required>byte		public totalwave:number=0;//总波数		public init(_second:number,_monsterCount:number,_totalmonster:number,_wave:number,_totalwave:number):s_mapTimer{			this.second=_second;			this.monsterCount=_monsterCount;			this.totalmonster=_totalmonster;			this.wave=_wave;			this.totalwave=_totalwave;			return this;		}public encode(by:egret.ByteArray):void{by.writeShort(this.second);by.writeByte(this.monsterCount);by.writeByte(this.totalmonster);by.writeByte(this.wave);by.writeByte(this.totalwave);	}public decode(by:egret.ByteArray ):void{this.second=by.readShort();this.monsterCount=by.readUnsignedByte();this.totalmonster=by.readUnsignedByte();this.wave=by.readUnsignedByte();this.totalwave=by.readUnsignedByte();	}	}	export class s_map_turn extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_map_turn;		}		//required>int		public turn:number=0;//N波		public init(_turn:number):s_map_turn{			this.turn=_turn;			return this;		}public encode(by:egret.ByteArray):void{by.writeInt(this.turn);	}public decode(by:egret.ByteArray ):void{this.turn=by.readInt();	}	}	export class s_map_entertimes extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_map_entertimes;		}		//required>string		public fubenID:string;//副本ID		//required>byte		public entertimes:number=0;//次数		public init(_fubenID:string,_entertimes:number):s_map_entertimes{			this.fubenID=_fubenID;			this.entertimes=_entertimes;			return this;		}public encode(by:egret.ByteArray):void{by.writeUTF(this.fubenID);by.writeByte(this.entertimes);	}public decode(by:egret.ByteArray ):void{this.fubenID=by.readUTF();this.entertimes=by.readUnsignedByte();	}	}	export class s_map_pop extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_map_pop;		}		//required>byte		public uiID:number=0;//undefined		//required>string		public title:string;//标题		//required>string		public content:string;//内容		//required>int		public showTime:number=0;//窗体显示时间		//optional>string		public Btn1:string;//按钮1		//optional>string		public Btn2:string;//按钮2		public init(_uiID:number,_title:string,_content:string,_showTime:number,_Btn1:string,_Btn2:string):s_map_pop{			this.uiID=_uiID;			this.title=_title;			this.content=_content;			this.showTime=_showTime;			this.Btn1=_Btn1;			this.Btn2=_Btn2;			return this;		}public encode(by:egret.ByteArray):void{by.writeByte(this.uiID);by.writeUTF(this.title);by.writeUTF(this.content);by.writeInt(this.showTime);if (this.Btn1!= null){by.writeByte(1);by.writeUTF(this.Btn1);}else{	by.writeByte(0);}if (this.Btn2!= null){by.writeByte(1);by.writeUTF(this.Btn2);}else{	by.writeByte(0);}	}public decode(by:egret.ByteArray ):void{this.uiID=by.readUnsignedByte();this.title=by.readUTF();this.content=by.readUTF();this.showTime=by.readInt();if (by.readByte() > 0) {this.Btn1=by.readUTF();}if (by.readByte() > 0) {this.Btn2=by.readUTF();}	}	}	export class c_map_ClickBtn extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_map_ClickBtn;		}		//required>byte		public uiID:number=0;//UiID		//required>string		public BtnID:string;//按钮		public init(_uiID:number,_BtnID:string):c_map_ClickBtn{			this.uiID=_uiID;			this.BtnID=_BtnID;			return this;		}public encode(by:egret.ByteArray):void{by.writeByte(this.uiID);by.writeUTF(this.BtnID);	}public decode(by:egret.ByteArray ):void{this.uiID=by.readUnsignedByte();this.BtnID=by.readUTF();	}	}	export class s_map_lasttime extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_map_lasttime;		}		//required>int		public time:number=0;//副本剩余时间		public init(_time:number):s_map_lasttime{			this.time=_time;			return this;		}public encode(by:egret.ByteArray):void{by.writeInt(this.time);	}public decode(by:egret.ByteArray ):void{this.time=by.readInt();	}	}	export class s_map_lastmonster extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_map_lastmonster;		}		//required>int		public curr:number=0;//当前地图上的怪物数量		//required>int		public total:number=0;//当前地图上所有出现怪物的数量		public init(_curr:number,_total:number):s_map_lastmonster{			this.curr=_curr;			this.total=_total;			return this;		}public encode(by:egret.ByteArray):void{by.writeInt(this.curr);by.writeInt(this.total);	}public decode(by:egret.ByteArray ):void{this.curr=by.readInt();this.total=by.readInt();	}	}	export class s_map_lastturn extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_map_lastturn;		}		//required>byte		public curr:number=0;//已经出现的波数		//required>byte		public total:number=0;//总波数		public init(_curr:number,_total:number):s_map_lastturn{			this.curr=_curr;			this.total=_total;			return this;		}public encode(by:egret.ByteArray):void{by.writeByte(this.curr);by.writeByte(this.total);	}public decode(by:egret.ByteArray ):void{this.curr=by.readUnsignedByte();this.total=by.readUnsignedByte();	}	}	export class c_map_addcount extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_map_addcount;		}		//required>string		public mapid:string;//地图ID		//required>byte		public count:number=0;//增加次数		public init(_mapid:string,_count:number):c_map_addcount{			this.mapid=_mapid;			this.count=_count;			return this;		}public encode(by:egret.ByteArray):void{by.writeUTF(this.mapid);by.writeByte(this.count);	}public decode(by:egret.ByteArray ):void{this.mapid=by.readUTF();this.count=by.readUnsignedByte();	}	}	export class c_reborn extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_reborn;		}		public init():c_reborn{			return this;		}public encode(by:egret.ByteArray):void{	}public decode(by:egret.ByteArray ):void{	}	}	export class s_reborn extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_reborn;		}		//required>byte		public state:number=0;//羽化结果		public init(_state:number):s_reborn{			this.state=_state;			return this;		}public encode(by:egret.ByteArray):void{by.writeByte(this.state);	}public decode(by:egret.ByteArray ):void{this.state=by.readUnsignedByte();	}	}	export class s_EXPRate_add extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_EXPRate_add;		}		//required>string		public expgroup:string;//倍数的组，一共3组exp1		//required>int		public cdtime:number=0;//毫秒数		public init(_expgroup:string,_cdtime:number):s_EXPRate_add{			this.expgroup=_expgroup;			this.cdtime=_cdtime;			return this;		}public encode(by:egret.ByteArray):void{by.writeUTF(this.expgroup);by.writeInt(this.cdtime);	}public decode(by:egret.ByteArray ):void{this.expgroup=by.readUTF();this.cdtime=by.readInt();	}	}	export class c_heart extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_heart;		}		public init():c_heart{			return this;		}public encode(by:egret.ByteArray):void{	}public decode(by:egret.ByteArray ):void{	}	}	export class c_setPKFlag extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_setPKFlag;		}		//required>byte		public flag:number=0;//玩家要设置为的PKFLAG枚举值		public init(_flag:number):c_setPKFlag{			this.flag=_flag;			return this;		}public encode(by:egret.ByteArray):void{by.writeByte(this.flag);	}public decode(by:egret.ByteArray ):void{this.flag=by.readUnsignedByte();	}	}	export class s_heart extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_heart;		}		public init():s_heart{			return this;		}public encode(by:egret.ByteArray):void{	}public decode(by:egret.ByteArray ):void{	}	}	export class s_boss_state extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_boss_state;		}		//required>string		public bossID:string;//世界boss的templeID		//required>int		public backtime:number=0;//0		public init(_bossID:string,_backtime:number):s_boss_state{			this.bossID=_bossID;			this.backtime=_backtime;			return this;		}public encode(by:egret.ByteArray):void{by.writeUTF(this.bossID);by.writeInt(this.backtime);	}public decode(by:egret.ByteArray ):void{this.bossID=by.readUTF();this.backtime=by.readInt();	}	}	export class c_boss_goto extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_boss_goto;		}		//required>string		public bossID:string;//世界boss的templeID		public init(_bossID:string):c_boss_goto{			this.bossID=_bossID;			return this;		}public encode(by:egret.ByteArray):void{by.writeUTF(this.bossID);	}public decode(by:egret.ByteArray ):void{this.bossID=by.readUTF();	}	}	export class s_bonus_state extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_bonus_state;		}		//required>string		public bonusID:string;//奖励ID		//required>byte		public state:number=0;//0表示不可领取，1表示可领取，2表示已领取		public init(_bonusID:string,_state:number):s_bonus_state{			this.bonusID=_bonusID;			this.state=_state;			return this;		}public encode(by:egret.ByteArray):void{by.writeUTF(this.bonusID);by.writeByte(this.state);	}public decode(by:egret.ByteArray ):void{this.bonusID=by.readUTF();this.state=by.readUnsignedByte();	}	}	export class c_bonus_get extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_bonus_get;		}		//required>string		public bonusID:string;//奖励ID		public init(_bonusID:string):c_bonus_get{			this.bonusID=_bonusID;			return this;		}public encode(by:egret.ByteArray):void{by.writeUTF(this.bonusID);	}public decode(by:egret.ByteArray ):void{this.bonusID=by.readUTF();	}	}	export class c_bonus_getLixian extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_bonus_getLixian;		}		//required>byte		public bonusType:number=0;//获取离线奖励的类型		public init(_bonusType:number):c_bonus_getLixian{			this.bonusType=_bonusType;			return this;		}public encode(by:egret.ByteArray):void{by.writeByte(this.bonusType);	}public decode(by:egret.ByteArray ):void{this.bonusType=by.readUnsignedByte();	}	}	export class s_bonus_lixian extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_bonus_lixian;		}		//required>short		public minie:number=0;//离线分钟数		//required>int		public gold:number=0;//奖励金币		//required>int		public exp:number=0;//奖励经验		public init(_minie:number,_gold:number,_exp:number):s_bonus_lixian{			this.minie=_minie;			this.gold=_gold;			this.exp=_exp;			return this;		}public encode(by:egret.ByteArray):void{by.writeShort(this.minie);by.writeInt(this.gold);by.writeInt(this.exp);	}public decode(by:egret.ByteArray ):void{this.minie=by.readShort();this.gold=by.readInt();this.exp=by.readInt();	}	}	export class s_LiveNess extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_LiveNess;		}		//required>string		public liveID:string;//活跃度ID		//required>byte		public count:number=0;//次数		public init(_liveID:string,_count:number):s_LiveNess{			this.liveID=_liveID;			this.count=_count;			return this;		}public encode(by:egret.ByteArray):void{by.writeUTF(this.liveID);by.writeByte(this.count);	}public decode(by:egret.ByteArray ):void{this.liveID=by.readUTF();this.count=by.readUnsignedByte();	}	}	export class c_team_create extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_team_create;		}		public init():c_team_create{			return this;		}public encode(by:egret.ByteArray):void{	}public decode(by:egret.ByteArray ):void{	}	}	export class s_team_info extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_team_info;		}		//required>int		public teamleader:number=0;//队长名		//repeated>MemberItem		public members:MemberItem[] ;//成员列表		public init(_teamleader:number,_members:MemberItem[]):s_team_info{			this.teamleader=_teamleader;			this.members=_members;			return this;		}public encode(by:egret.ByteArray):void{by.writeInt(this.teamleader);if (this.members != null){by.writeShort(this.members.length);for (var i:number = 0; i < this.members.length; i++) {			this.members[i].encode(by);}}else{by.writeShort(0);}	}public decode(by:egret.ByteArray ):void{this.teamleader=by.readInt();var __count1:number = by.readShort();		this.members = [];for (var i:number = 0; i < __count1; i++) {			this.members[i] = new MemberItem();			this.members[i].decode(by);}	}	}	export class MemberItem extends proto.Pro{		public constructor(){			super();			this.S=MessageType.MemberItem;		}		//required>int		public uid:number=0;//唯一ID		//required>string		public name:string;//名字		//required>byte		public reborn:number=0;//几转		//required>byte		public lev:number=0;//等级		//required>byte		public job:number=0;//职业		//repeated>short		public models:number[] ;//形象		public init(_uid:number,_name:string,_reborn:number,_lev:number,_job:number,_models:number[]):MemberItem{			this.uid=_uid;			this.name=_name;			this.reborn=_reborn;			this.lev=_lev;			this.job=_job;			this.models=_models;			return this;		}public encode(by:egret.ByteArray):void{by.writeInt(this.uid);by.writeUTF(this.name);by.writeByte(this.reborn);by.writeByte(this.lev);by.writeByte(this.job);if (this.models != null){by.writeShort(this.models.length);for (var i:number = 0; i < this.models.length; i++) {by.writeShort(this.models[i]);}}else{by.writeShort(0);}	}public decode(by:egret.ByteArray ):void{this.uid=by.readInt();this.name=by.readUTF();this.reborn=by.readUnsignedByte();this.lev=by.readUnsignedByte();this.job=by.readUnsignedByte();var __count5:number = by.readShort();		this.models = [];for (var i:number = 0; i < __count5; i++) {this.models[i]=by.readShort();}	}	}	export class c_team_add extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_team_add;		}		//required>string		public name:string;//名字		public init(_name:string):c_team_add{			this.name=_name;			return this;		}public encode(by:egret.ByteArray):void{by.writeUTF(this.name);	}public decode(by:egret.ByteArray ):void{this.name=by.readUTF();	}	}	export class c_team_remove extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_team_remove;		}		//required>int		public uid:number=0;//undefined		public init(_uid:number):c_team_remove{			this.uid=_uid;			return this;		}public encode(by:egret.ByteArray):void{by.writeInt(this.uid);	}public decode(by:egret.ByteArray ):void{this.uid=by.readInt();	}	}	export class c_team_list extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_team_list;		}		public init():c_team_list{			return this;		}public encode(by:egret.ByteArray):void{	}public decode(by:egret.ByteArray ):void{	}	}	export class s_team_list extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_team_list;		}		//repeated>TeamItem		public teams:TeamItem[] ;//队伍列表		public init(_teams:TeamItem[]):s_team_list{			this.teams=_teams;			return this;		}public encode(by:egret.ByteArray):void{if (this.teams != null){by.writeShort(this.teams.length);for (var i:number = 0; i < this.teams.length; i++) {			this.teams[i].encode(by);}}else{by.writeShort(0);}	}public decode(by:egret.ByteArray ):void{var __count0:number = by.readShort();		this.teams = [];for (var i:number = 0; i < __count0; i++) {			this.teams[i] = new TeamItem();			this.teams[i].decode(by);}	}	}	export class TeamItem extends proto.Pro{		public constructor(){			super();			this.S=MessageType.TeamItem;		}		//required>int		public teamid:number=0;//队伍唯一ID		//required>int		public num:number=0;//人数		//required>MemberItem		public leader:MemberItem;//队长信息		public init(_teamid:number,_num:number,_leader:MemberItem):TeamItem{			this.teamid=_teamid;			this.num=_num;			this.leader=_leader;			return this;		}public encode(by:egret.ByteArray):void{by.writeInt(this.teamid);by.writeInt(this.num);this.leader.encode(by);	}public decode(by:egret.ByteArray ):void{this.teamid=by.readInt();this.num=by.readInt();this.leader=new MemberItem();this.leader.decode(by);	}	}	export class c_team_apply extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_team_apply;		}		//required>int		public teamid:number=0;//队伍唯一ID		public init(_teamid:number):c_team_apply{			this.teamid=_teamid;			return this;		}public encode(by:egret.ByteArray):void{by.writeInt(this.teamid);	}public decode(by:egret.ByteArray ):void{this.teamid=by.readInt();	}	}	export class c_team_appoint extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_team_appoint;		}		//required>int		public uid:number=0;//要移交的队长		public init(_uid:number):c_team_appoint{			this.uid=_uid;			return this;		}public encode(by:egret.ByteArray):void{by.writeInt(this.uid);	}public decode(by:egret.ByteArray ):void{this.uid=by.readInt();	}	}	export class c_team_disband extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_team_disband;		}		public init():c_team_disband{			return this;		}public encode(by:egret.ByteArray):void{	}public decode(by:egret.ByteArray ):void{	}	}	export class s_team_disband extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_team_disband;		}		//required>string		public leader:string;//队长		public init(_leader:string):s_team_disband{			this.leader=_leader;			return this;		}public encode(by:egret.ByteArray):void{by.writeUTF(this.leader);	}public decode(by:egret.ByteArray ):void{this.leader=by.readUTF();	}	}	export class s_team_leave extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_team_leave;		}		public init():s_team_leave{			return this;		}public encode(by:egret.ByteArray):void{	}public decode(by:egret.ByteArray ):void{	}	}	export class s_team_invite extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_team_invite;		}		//required>byte		public flag:number=0;//申请类型		//required>int		public uid:number=0;//唯一ID		//required>string		public name:string;//名字		//required>byte		public lev:number=0;//等级		//required>byte		public job:number=0;//职业		public init(_flag:number,_uid:number,_name:string,_lev:number,_job:number):s_team_invite{			this.flag=_flag;			this.uid=_uid;			this.name=_name;			this.lev=_lev;			this.job=_job;			return this;		}public encode(by:egret.ByteArray):void{by.writeByte(this.flag);by.writeInt(this.uid);by.writeUTF(this.name);by.writeByte(this.lev);by.writeByte(this.job);	}public decode(by:egret.ByteArray ):void{this.flag=by.readUnsignedByte();this.uid=by.readInt();this.name=by.readUTF();this.lev=by.readUnsignedByte();this.job=by.readUnsignedByte();	}	}	export class c_team_confirm extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_team_confirm;		}		//required>byte		public flag:number=0;//undefined		//required>bool		public isAccept:boolean;//undefined		//required>int		public uid:number=0;//对方的uID		public init(_flag:number,_isAccept:boolean,_uid:number):c_team_confirm{			this.flag=_flag;			this.isAccept=_isAccept;			this.uid=_uid;			return this;		}public encode(by:egret.ByteArray):void{by.writeByte(this.flag);by.writeBoolean(this.isAccept);by.writeInt(this.uid);	}public decode(by:egret.ByteArray ):void{this.flag=by.readUnsignedByte();this.isAccept=by.readBoolean();this.uid=by.readInt();	}	}	export class c_team_quick extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_team_quick;		}		public init():c_team_quick{			return this;		}public encode(by:egret.ByteArray):void{	}public decode(by:egret.ByteArray ):void{	}	}	export class c_look_fujin extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_look_fujin;		}		public init():c_look_fujin{			return this;		}public encode(by:egret.ByteArray):void{	}public decode(by:egret.ByteArray ):void{	}	}	export class s_look_infos extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_look_infos;		}		//repeated>PlayerDesc		public players:PlayerDesc[] ;//所有附近的玩家		public init(_players:PlayerDesc[]):s_look_infos{			this.players=_players;			return this;		}public encode(by:egret.ByteArray):void{if (this.players != null){by.writeShort(this.players.length);for (var i:number = 0; i < this.players.length; i++) {			this.players[i].encode(by);}}else{by.writeShort(0);}	}public decode(by:egret.ByteArray ):void{var __count0:number = by.readShort();		this.players = [];for (var i:number = 0; i < __count0; i++) {			this.players[i] = new PlayerDesc();			this.players[i].decode(by);}	}	}	export class PlayerDesc extends proto.Pro{		public constructor(){			super();			this.S=MessageType.PlayerDesc;		}		//required>int		public uid:number=0;//唯一ID		//required>string		public name:string;//名字		//required>byte		public reborn:number=0;//几转		//required>byte		public lev:number=0;//等级		//required>byte		public job:number=0;//职业		//required>string		public guildname:string;//帮会		public init(_uid:number,_name:string,_reborn:number,_lev:number,_job:number,_guildname:string):PlayerDesc{			this.uid=_uid;			this.name=_name;			this.reborn=_reborn;			this.lev=_lev;			this.job=_job;			this.guildname=_guildname;			return this;		}public encode(by:egret.ByteArray):void{by.writeInt(this.uid);by.writeUTF(this.name);by.writeByte(this.reborn);by.writeByte(this.lev);by.writeByte(this.job);by.writeUTF(this.guildname);	}public decode(by:egret.ByteArray ):void{this.uid=by.readInt();this.name=by.readUTF();this.reborn=by.readUnsignedByte();this.lev=by.readUnsignedByte();this.job=by.readUnsignedByte();this.guildname=by.readUTF();	}	}	export class c_IO_Connect extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_IO_Connect;		}		//required>int		public ioID:number=0;//连入的ioID		public init(_ioID:number):c_IO_Connect{			this.ioID=_ioID;			return this;		}public encode(by:egret.ByteArray):void{by.writeInt(this.ioID);	}public decode(by:egret.ByteArray ):void{this.ioID=by.readInt();	}	}	export class c_IO_close extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_IO_close;		}		//required>int		public ioID:number=0;//断开的ioID		public init(_ioID:number):c_IO_close{			this.ioID=_ioID;			return this;		}public encode(by:egret.ByteArray):void{by.writeInt(this.ioID);	}public decode(by:egret.ByteArray ):void{this.ioID=by.readInt();	}	}	export class s_RandShop_updateMoney extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_RandShop_updateMoney;		}		//required>int		public needmoney:number=0;//下次刷新所需金币		public init(_needmoney:number):s_RandShop_updateMoney{			this.needmoney=_needmoney;			return this;		}public encode(by:egret.ByteArray):void{by.writeInt(this.needmoney);	}public decode(by:egret.ByteArray ):void{this.needmoney=by.readInt();	}	}	export class s_RandShop extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_RandShop;		}		//required>string		public goodsID:string;//商品ID		//required>string		public itemID:string;//物品ID		//required>short		public count:number=0;//剩余数量		//required>short		public total:number=0;//总量		//required>byte		public type:number=0;//货币种类		//required>int		public price:number=0;//单价		public init(_goodsID:string,_itemID:string,_count:number,_total:number,_type:number,_price:number):s_RandShop{			this.goodsID=_goodsID;			this.itemID=_itemID;			this.count=_count;			this.total=_total;			this.type=_type;			this.price=_price;			return this;		}public encode(by:egret.ByteArray):void{by.writeUTF(this.goodsID);by.writeUTF(this.itemID);by.writeShort(this.count);by.writeShort(this.total);by.writeByte(this.type);by.writeInt(this.price);	}public decode(by:egret.ByteArray ):void{this.goodsID=by.readUTF();this.itemID=by.readUTF();this.count=by.readShort();this.total=by.readShort();this.type=by.readUnsignedByte();this.price=by.readInt();	}	}	export class s_RandShopList extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_RandShopList;		}		//required>int		public nextTime:number=0;//下次刷新时间		//repeated>s_RandShop		public items:s_RandShop[] ;//商品列表		public init(_nextTime:number,_items:s_RandShop[]):s_RandShopList{			this.nextTime=_nextTime;			this.items=_items;			return this;		}public encode(by:egret.ByteArray):void{by.writeInt(this.nextTime);if (this.items != null){by.writeShort(this.items.length);for (var i:number = 0; i < this.items.length; i++) {			this.items[i].encode(by);}}else{by.writeShort(0);}	}public decode(by:egret.ByteArray ):void{this.nextTime=by.readInt();var __count1:number = by.readShort();		this.items = [];for (var i:number = 0; i < __count1; i++) {			this.items[i] = new s_RandShop();			this.items[i].decode(by);}	}	}	export class c_RandShop_update extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_RandShop_update;		}		public init():c_RandShop_update{			return this;		}public encode(by:egret.ByteArray):void{	}public decode(by:egret.ByteArray ):void{	}	}	export class c_RandShop_buy extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_RandShop_buy;		}		//required>string		public goodsID:string;//货物id		//required>int		public count:number=0;//购买数量		public init(_goodsID:string,_count:number):c_RandShop_buy{			this.goodsID=_goodsID;			this.count=_count;			return this;		}public encode(by:egret.ByteArray):void{by.writeUTF(this.goodsID);by.writeInt(this.count);	}public decode(by:egret.ByteArray ):void{this.goodsID=by.readUTF();this.count=by.readInt();	}	}	export class c_GetTurnList extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_GetTurnList;		}		public init():c_GetTurnList{			return this;		}public encode(by:egret.ByteArray):void{	}public decode(by:egret.ByteArray ):void{	}	}	export class s_TurnList extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_TurnList;		}		//repeated>TurnItem		public items:TurnItem[] ;//物品列表		public init(_items:TurnItem[]):s_TurnList{			this.items=_items;			return this;		}public encode(by:egret.ByteArray):void{if (this.items != null){by.writeShort(this.items.length);for (var i:number = 0; i < this.items.length; i++) {			this.items[i].encode(by);}}else{by.writeShort(0);}	}public decode(by:egret.ByteArray ):void{var __count0:number = by.readShort();		this.items = [];for (var i:number = 0; i < __count0; i++) {			this.items[i] = new TurnItem();			this.items[i].decode(by);}	}	}	export class c_turn_start extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_turn_start;		}		//required>byte		public index:number=0;//点击的哪种方式按钮		//required>byte		public count:number=0;//旋转次数		public init(_index:number,_count:number):c_turn_start{			this.index=_index;			this.count=_count;			return this;		}public encode(by:egret.ByteArray):void{by.writeByte(this.index);by.writeByte(this.count);	}public decode(by:egret.ByteArray ):void{this.index=by.readUnsignedByte();this.count=by.readUnsignedByte();	}	}	export class s_turn_result extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_turn_result;		}		//required>byte		public index:number=0;//旋转结果		public init(_index:number):s_turn_result{			this.index=_index;			return this;		}public encode(by:egret.ByteArray):void{by.writeByte(this.index);	}public decode(by:egret.ByteArray ):void{this.index=by.readUnsignedByte();	}	}	export class c_turn_over extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_turn_over;		}		public init():c_turn_over{			return this;		}public encode(by:egret.ByteArray):void{	}public decode(by:egret.ByteArray ):void{	}	}	export class s_turn_over extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_turn_over;		}		public init():s_turn_over{			return this;		}public encode(by:egret.ByteArray):void{	}public decode(by:egret.ByteArray ):void{	}	}	export class TurnItem extends proto.Pro{		public constructor(){			super();			this.S=MessageType.TurnItem;		}		//required>string		public ItemId:string;//物品ID		//required>byte		public count:number=0;//数量		public init(_ItemId:string,_count:number):TurnItem{			this.ItemId=_ItemId;			this.count=_count;			return this;		}public encode(by:egret.ByteArray):void{by.writeUTF(this.ItemId);by.writeByte(this.count);	}public decode(by:egret.ByteArray ):void{this.ItemId=by.readUTF();this.count=by.readUnsignedByte();	}	}	export class s_turn_notice extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_turn_notice;		}		//required>string		public name:string;//物品名		//required>string		public itemID:string;//物品ID		//required>byte		public count:number=0;//物品数量		public init(_name:string,_itemID:string,_count:number):s_turn_notice{			this.name=_name;			this.itemID=_itemID;			this.count=_count;			return this;		}public encode(by:egret.ByteArray):void{by.writeUTF(this.name);by.writeUTF(this.itemID);by.writeByte(this.count);	}public decode(by:egret.ByteArray ):void{this.name=by.readUTF();this.itemID=by.readUTF();this.count=by.readUnsignedByte();	}	}	export class s_SBK_aff extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_SBK_aff;		}		//required>string		public guildID:string;//帮会id		//required>string		public guildname:string;//帮会名字		//required>string		public chatelain:string;//城主		//required>string		public f_chatelain:string;//副城主		//required>string		public elder:string;//长老		//required>string		public mater:string;//配偶		//required>byte		public holdtime:number=0;//已经占领的时间		//required>string		public nextstart:string;//下次攻城时间		//required>byte		public status:number=0;//攻城状态		public init(_guildID:string,_guildname:string,_chatelain:string,_f_chatelain:string,_elder:string,_mater:string,_holdtime:number,_nextstart:string,_status:number):s_SBK_aff{			this.guildID=_guildID;			this.guildname=_guildname;			this.chatelain=_chatelain;			this.f_chatelain=_f_chatelain;			this.elder=_elder;			this.mater=_mater;			this.holdtime=_holdtime;			this.nextstart=_nextstart;			this.status=_status;			return this;		}public encode(by:egret.ByteArray):void{by.writeUTF(this.guildID);by.writeUTF(this.guildname);by.writeUTF(this.chatelain);by.writeUTF(this.f_chatelain);by.writeUTF(this.elder);by.writeUTF(this.mater);by.writeByte(this.holdtime);by.writeUTF(this.nextstart);by.writeByte(this.status);	}public decode(by:egret.ByteArray ):void{this.guildID=by.readUTF();this.guildname=by.readUTF();this.chatelain=by.readUTF();this.f_chatelain=by.readUTF();this.elder=by.readUTF();this.mater=by.readUTF();this.holdtime=by.readUnsignedByte();this.nextstart=by.readUTF();this.status=by.readUnsignedByte();	}	}	export class c_SBK_btnindex extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_SBK_btnindex;		}		//required>byte		public index:number=0;//0		public init(_index:number):c_SBK_btnindex{			this.index=_index;			return this;		}public encode(by:egret.ByteArray):void{by.writeByte(this.index);	}public decode(by:egret.ByteArray ):void{this.index=by.readUnsignedByte();	}	}	export class s_SBK_btnstatus extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_SBK_btnstatus;		}		//repeated>byte		public status:number[] ;//0-2		public init(_status:number[]):s_SBK_btnstatus{			this.status=_status;			return this;		}public encode(by:egret.ByteArray):void{if (this.status != null){by.writeShort(this.status.length);for (var i:number = 0; i < this.status.length; i++) {by.writeByte(this.status[i]);}}else{by.writeShort(0);}	}public decode(by:egret.ByteArray ):void{var __count0:number = by.readShort();		this.status = [];for (var i:number = 0; i < __count0; i++) {this.status[i]=by.readUnsignedByte();}	}	}	export class c_GetRank extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_GetRank;		}		//required>byte		public flag:number=0;//排行标识		public init(_flag:number):c_GetRank{			this.flag=_flag;			return this;		}public encode(by:egret.ByteArray):void{by.writeByte(this.flag);	}public decode(by:egret.ByteArray ):void{this.flag=by.readUnsignedByte();	}	}	export class s_ph_Rank extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_ph_Rank;		}		//required>byte		public flag:number=0;//排行标识		//repeated>RankInfo		public lists:RankInfo[] ;//列表		public init(_flag:number,_lists:RankInfo[]):s_ph_Rank{			this.flag=_flag;			this.lists=_lists;			return this;		}public encode(by:egret.ByteArray):void{by.writeByte(this.flag);if (this.lists != null){by.writeShort(this.lists.length);for (var i:number = 0; i < this.lists.length; i++) {			this.lists[i].encode(by);}}else{by.writeShort(0);}	}public decode(by:egret.ByteArray ):void{this.flag=by.readUnsignedByte();var __count1:number = by.readShort();		this.lists = [];for (var i:number = 0; i < __count1; i++) {			this.lists[i] = new RankInfo();			this.lists[i].decode(by);}	}	}	export class req_Login extends proto.Pro{		public constructor(){			super();			this.S=MessageType.req_Login;		}		//required>string		public name:string;//名字		//required>string		public pass:string;//密码		public init(_name:string,_pass:string):req_Login{			this.name=_name;			this.pass=_pass;			return this;		}public encode(by:egret.ByteArray):void{by.writeUTF(this.name);by.writeUTF(this.pass);	}public decode(by:egret.ByteArray ):void{this.name=by.readUTF();this.pass=by.readUTF();	}	}	export class res_Login extends proto.Pro{		public constructor(){			super();			this.S=MessageType.res_Login;		}		//public>byte		public status:number=0;//0表示正常，>0表示异常		//optional>string		public session:string;//返回的session		//optional>string		public error:string;//错误原因		public init(_status:number,_session:string,_error:string):res_Login{			this.status=_status;			this.session=_session;			this.error=_error;			return this;		}public encode(by:egret.ByteArray):void{by.writeByte(this.status);if (this.session!= null){by.writeByte(1);by.writeUTF(this.session);}else{	by.writeByte(0);}if (this.error!= null){by.writeByte(1);by.writeUTF(this.error);}else{	by.writeByte(0);}	}public decode(by:egret.ByteArray ):void{this.status=by.readUnsignedByte();if (by.readByte() > 0) {this.session=by.readUTF();}if (by.readByte() > 0) {this.error=by.readUTF();}	}	}	export class req_BroadCast extends proto.Pro{		public constructor(){			super();			this.S=MessageType.req_BroadCast;		}		//required>int		public ID:number=0;//公告ID		//required>string		public title:string;//公告标题		//required>string		public content:string;//公告内容		public init(_ID:number,_title:string,_content:string):req_BroadCast{			this.ID=_ID;			this.title=_title;			this.content=_content;			return this;		}public encode(by:egret.ByteArray):void{by.writeInt(this.ID);by.writeUTF(this.title);by.writeUTF(this.content);	}public decode(by:egret.ByteArray ):void{this.ID=by.readInt();this.title=by.readUTF();this.content=by.readUTF();	}	}	export class req_SendMail extends proto.Pro{		public constructor(){			super();			this.S=MessageType.req_SendMail;		}		//repeated>string		public chars:string[] ;//给指定的目标用户发送邮件		//required>string		public title:string;//邮件标题		//required>string		public content:string;//邮件内容		//optional>int		public gold:number=0;//金币		//optional>int		public money:number=0;//元宝		//repeated>string		public items:string[] ;//附件的物品id		public init(_chars:string[],_title:string,_content:string,_gold:number,_money:number,_items:string[]):req_SendMail{			this.chars=_chars;			this.title=_title;			this.content=_content;			this.gold=_gold;			this.money=_money;			this.items=_items;			return this;		}public encode(by:egret.ByteArray):void{if (this.chars != null){by.writeShort(this.chars.length);for (var i:number = 0; i < this.chars.length; i++) {by.writeUTF(this.chars[i]);}}else{by.writeShort(0);}by.writeUTF(this.title);by.writeUTF(this.content);//基础类型不建议用optionalby.writeByte(1);by.writeInt(this.gold);//基础类型不建议用optionalby.writeByte(1);by.writeInt(this.money);if (this.items != null){by.writeShort(this.items.length);for (var i:number = 0; i < this.items.length; i++) {by.writeUTF(this.items[i]);}}else{by.writeShort(0);}	}public decode(by:egret.ByteArray ):void{var __count0:number = by.readShort();		this.chars = [];for (var i:number = 0; i < __count0; i++) {this.chars[i]=by.readUTF();}this.title=by.readUTF();this.content=by.readUTF();if (by.readByte() > 0) {this.gold=by.readInt();}if (by.readByte() > 0) {this.money=by.readInt();}var __count5:number = by.readShort();		this.items = [];for (var i:number = 0; i < __count5; i++) {this.items[i]=by.readUTF();}	}	}	export class res_SendMail extends proto.Pro{		public constructor(){			super();			this.S=MessageType.res_SendMail;		}		//required>int		public count:number=0;//成功发送的条数		//repeated>string		public chars:string[] ;//没有成功的用户ID列表		public init(_count:number,_chars:string[]):res_SendMail{			this.count=_count;			this.chars=_chars;			return this;		}public encode(by:egret.ByteArray):void{by.writeInt(this.count);if (this.chars != null){by.writeShort(this.chars.length);for (var i:number = 0; i < this.chars.length; i++) {by.writeUTF(this.chars[i]);}}else{by.writeShort(0);}	}public decode(by:egret.ByteArray ):void{this.count=by.readInt();var __count1:number = by.readShort();		this.chars = [];for (var i:number = 0; i < __count1; i++) {this.chars[i]=by.readUTF();}	}	}	export class req_RecordList extends proto.Pro{		public constructor(){			super();			this.S=MessageType.req_RecordList;		}		//required>int		public datetime:number=0;//该日期之后的日志文件列表		//required>string		public serverID:string;//查找的服务器的日志		public init(_datetime:number,_serverID:string):req_RecordList{			this.datetime=_datetime;			this.serverID=_serverID;			return this;		}public encode(by:egret.ByteArray):void{by.writeInt(this.datetime);by.writeUTF(this.serverID);	}public decode(by:egret.ByteArray ):void{this.datetime=by.readInt();this.serverID=by.readUTF();	}	}	export class res_RecordList extends proto.Pro{		public constructor(){			super();			this.S=MessageType.res_RecordList;		}		//repeated>string		public files:string[] ;//日志文件列表		public init(_files:string[]):res_RecordList{			this.files=_files;			return this;		}public encode(by:egret.ByteArray):void{if (this.files != null){by.writeShort(this.files.length);for (var i:number = 0; i < this.files.length; i++) {by.writeUTF(this.files[i]);}}else{by.writeShort(0);}	}public decode(by:egret.ByteArray ):void{var __count0:number = by.readShort();		this.files = [];for (var i:number = 0; i < __count0; i++) {this.files[i]=by.readUTF();}	}	}	export class s_huodong_status extends proto.Pro{		public constructor(){			super();			this.S=MessageType.s_huodong_status;		}		//required>string		public huodongID:string;//活动ID		//required>byte		public status:number=0;//0		public init(_huodongID:string,_status:number):s_huodong_status{			this.huodongID=_huodongID;			this.status=_status;			return this;		}public encode(by:egret.ByteArray):void{by.writeUTF(this.huodongID);by.writeByte(this.status);	}public decode(by:egret.ByteArray ):void{this.huodongID=by.readUTF();this.status=by.readUnsignedByte();	}	}	export class c_huodong_add extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_huodong_add;		}		//required>string		public huodongID:string;//活动ID		public init(_huodongID:string):c_huodong_add{			this.huodongID=_huodongID;			return this;		}public encode(by:egret.ByteArray):void{by.writeUTF(this.huodongID);	}public decode(by:egret.ByteArray ):void{this.huodongID=by.readUTF();	}	}	export class c_huodong_start extends proto.Pro{		public constructor(){			super();			this.S=MessageType.c_huodong_start;		}		//required>string		public huodongID:string;//活动ID		public init(_huodongID:string):c_huodong_start{			this.huodongID=_huodongID;			return this;		}public encode(by:egret.ByteArray):void{by.writeUTF(this.huodongID);	}public decode(by:egret.ByteArray ):void{this.huodongID=by.readUTF();	}	}}